[
  {
    "numberTests": "ten",
    "original_code": "// XPathReaderFactory.java\npackage org.saxpath.helpers;\n\nimport org.saxpath.XPathReader;\nimport org.saxpath.SAXPathException;\n\n/**\n * Create an {@link org.saxpath.XPathReader} from\n *  either a system property, or a named class.\n *\n *  \u003cp\u003e\n *  Similar to the SAX API, the \u003ccode\u003eXPathReaderFactory\u003c/code\u003e\n *  can create an \u003ccode\u003eXPathReader\u003c/code\u003e from a name of a\n *  class passed in directly, or by inspecting the system\n *  property \u003ccode\u003eorg.saxpath.driver\u003c/code\u003e.\n *\n * @author bob mcwhirter (bob@werken.com)\n */\npublic class XPathReaderFactory {\n\n    /**\n     * Create an \u003ccode\u003eXPathReader\u003c/code\u003e using the value of\n     *  the \u003ccode\u003eorg.saxpath.driver\u003c/code\u003e system property.\n     *\n     * @return An instance of the \u003ccode\u003eXPathReader\u003c/code\u003e specified\n     *          by the \u003ccode\u003eorg.saxpath.driver\u003c/code\u003e property.\n     * @throws SAXPathException if the property is unset, or if\n     *          the class can not be instantiated for some reason.,\n     *          or if the class doesn\u0027t implement the \u003ccode\u003eXPathReader\u003c/code\u003e\n     *          interface.\n     */\n    public static XPathReader createReader() throws SAXPathException {\n        String className \u003d null;\n        boolean securityException \u003d false;\n        try {\n            className \u003d System.getProperty(DRIVER_PROPERTY);\n        } catch (SecurityException e) {\n            securityException \u003d true;\n        }\n        if (className \u003d\u003d null || \"\".equals(className)) {\n            if (USE_DEFAULT) {\n                className \u003d DEFAULT_DRIVER;\n            } else {\n                if (securityException) {\n                    throw new SAXPathException(\"Reading of property \" + DRIVER_PROPERTY + \" disallowed.\");\n                } else {\n                    throw new SAXPathException(\"Property \" + DRIVER_PROPERTY + \" not set\");\n                }\n            }\n        }\n        return createReader(className);\n    }\n}\n\n/**\n * Create an {@link org.saxpath.XPathReader} from\n *  either a system property, or a named class.\n *\n *  \u003cp\u003e\n *  Similar to the SAX API, the \u003ccode\u003eXPathReaderFactory\u003c/code\u003e\n *  can create an \u003ccode\u003eXPathReader\u003c/code\u003e from a name of a\n *  class passed in directly, or by inspecting the system\n *  property \u003ccode\u003eorg.saxpath.driver\u003c/code\u003e.\n *\n * @author bob mcwhirter (bob@werken.com)\n */\npublic class XPathReaderFactory {\n\n    /**\n     * Create an \u003ccode\u003eXPathReader\u003c/code\u003e using the value of\n     *  the \u003ccode\u003eorg.saxpath.driver\u003c/code\u003e system property.\n     *\n     * @return An instance of the \u003ccode\u003eXPathReader\u003c/code\u003e specified\n     *          by the \u003ccode\u003eorg.saxpath.driver\u003c/code\u003e property.\n     * @throws SAXPathException if the property is unset, or if\n     *          the class can not be instantiated for some reason.,\n     *          or if the class doesn\u0027t implement the \u003ccode\u003eXPathReader\u003c/code\u003e\n     *          interface.\n     */\n    public static XPathReader createReader() throws SAXPathException {\n        String className \u003d null;\n        boolean securityException \u003d false;\n        try {\n            className \u003d System.getProperty(DRIVER_PROPERTY);\n        } catch (SecurityException e) {\n            securityException \u003d true;\n        }\n        if (className \u003d\u003d null || \"\".equals(className)) {\n            if (USE_DEFAULT) {\n                className \u003d DEFAULT_DRIVER;\n            } else {\n                if (securityException) {\n                    throw new SAXPathException(\"Reading of property \" + DRIVER_PROPERTY + \" disallowed.\");\n                } else {\n                    throw new SAXPathException(\"Property \" + DRIVER_PROPERTY + \" not set\");\n                }\n            }\n        }\n        return createReader(className);\n    }\n}\n",
    "package": "org.saxpath.helpers",
    "classname": "XPathReaderFactory",
    "id": "/EvoSuiteBenchmark/original/24_saxpath/src/main/java/saxpath/helpers/XPathReaderFactory_0Test.java",
    "test_prompt": "// XPathReaderFactory_0Test.java\npackage org.saxpath.helpers;\n\nimport org.saxpath.XPathReader;\nimport org.saxpath.SAXPathException;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link XPathReaderFactory}.\n* It contains ten unit test cases for the {@link XPathReaderFactory#createReader()} method.\n*/\nclass XPathReaderFactory_0Test {",
    "method_signature": "createReader()",
    "suffix": "0"
  },
  {
    "numberTests": "ten",
    "original_code": "// XPathReaderFactory.java\npackage org.saxpath.helpers;\n\nimport org.saxpath.XPathReader;\nimport org.saxpath.SAXPathException;\n\n/**\n * Create an {@link org.saxpath.XPathReader} from\n *  either a system property, or a named class.\n *\n *  \u003cp\u003e\n *  Similar to the SAX API, the \u003ccode\u003eXPathReaderFactory\u003c/code\u003e\n *  can create an \u003ccode\u003eXPathReader\u003c/code\u003e from a name of a\n *  class passed in directly, or by inspecting the system\n *  property \u003ccode\u003eorg.saxpath.driver\u003c/code\u003e.\n *\n * @author bob mcwhirter (bob@werken.com)\n */\npublic class XPathReaderFactory {\n\n    /**\n     * Create an \u003ccode\u003eXPathReader\u003c/code\u003e using the passed\n     *  in class name.\n     *\n     * @param className The name of the class which implements\n     *         the \u003ccode\u003eXPathReader\u003c/code\u003e interface.\n     * @throws SAXPathException if the class can not be\n     *          instantiated for some reason, or if the\n     *          class doesn\u0027t implement the \u003ccode\u003eXPathReader\u003c/code\u003e\n     *          interface.\n     */\n    public static XPathReader createReader(String className) throws SAXPathException {\n        Class readerClass \u003d null;\n        XPathReader reader \u003d null;\n        try {\n            // Use the full version of Class.forName(), so as to\n            // work better in sandboxed environments, such as\n            // Servlet contains, and Applets.\n            readerClass \u003d Class.forName(className, true, XPathReaderFactory.class.getClassLoader());\n            // Double-check that it\u0027s actually the right kind of class\n            // before attempting instantiation.\n            if (!XPathReader.class.isAssignableFrom(readerClass)) {\n                throw new SAXPathException(\"Class [\" + className + \"] does not implement the org.saxpath.XPathReader interface.\");\n            }\n        } catch (ClassNotFoundException e) {\n            throw new SAXPathException(e.getMessage());\n        }\n        try {\n            reader \u003d (XPathReader) readerClass.newInstance();\n        } catch (IllegalAccessException e) {\n            throw new SAXPathException(e.getMessage());\n        } catch (InstantiationException e) {\n            throw new SAXPathException(e.getMessage());\n        }\n        if (reader \u003d\u003d null) {\n            throw new SAXPathException(\"Unable to create XPathReader\");\n        }\n        return reader;\n    }\n}\n\n/**\n * Create an {@link org.saxpath.XPathReader} from\n *  either a system property, or a named class.\n *\n *  \u003cp\u003e\n *  Similar to the SAX API, the \u003ccode\u003eXPathReaderFactory\u003c/code\u003e\n *  can create an \u003ccode\u003eXPathReader\u003c/code\u003e from a name of a\n *  class passed in directly, or by inspecting the system\n *  property \u003ccode\u003eorg.saxpath.driver\u003c/code\u003e.\n *\n * @author bob mcwhirter (bob@werken.com)\n */\npublic class XPathReaderFactory {\n\n    /**\n     * Create an \u003ccode\u003eXPathReader\u003c/code\u003e using the passed\n     *  in class name.\n     *\n     * @param className The name of the class which implements\n     *         the \u003ccode\u003eXPathReader\u003c/code\u003e interface.\n     * @throws SAXPathException if the class can not be\n     *          instantiated for some reason, or if the\n     *          class doesn\u0027t implement the \u003ccode\u003eXPathReader\u003c/code\u003e\n     *          interface.\n     */\n    public static XPathReader createReader(String className) throws SAXPathException {\n        Class readerClass \u003d null;\n        XPathReader reader \u003d null;\n        try {\n            // Use the full version of Class.forName(), so as to\n            // work better in sandboxed environments, such as\n            // Servlet contains, and Applets.\n            readerClass \u003d Class.forName(className, true, XPathReaderFactory.class.getClassLoader());\n            // Double-check that it\u0027s actually the right kind of class\n            // before attempting instantiation.\n            if (!XPathReader.class.isAssignableFrom(readerClass)) {\n                throw new SAXPathException(\"Class [\" + className + \"] does not implement the org.saxpath.XPathReader interface.\");\n            }\n        } catch (ClassNotFoundException e) {\n            throw new SAXPathException(e.getMessage());\n        }\n        try {\n            reader \u003d (XPathReader) readerClass.newInstance();\n        } catch (IllegalAccessException e) {\n            throw new SAXPathException(e.getMessage());\n        } catch (InstantiationException e) {\n            throw new SAXPathException(e.getMessage());\n        }\n        if (reader \u003d\u003d null) {\n            throw new SAXPathException(\"Unable to create XPathReader\");\n        }\n        return reader;\n    }\n}\n",
    "package": "org.saxpath.helpers",
    "classname": "XPathReaderFactory",
    "id": "/EvoSuiteBenchmark/original/24_saxpath/src/main/java/saxpath/helpers/XPathReaderFactory_1Test.java",
    "test_prompt": "// XPathReaderFactory_1Test.java\npackage org.saxpath.helpers;\n\nimport org.saxpath.XPathReader;\nimport org.saxpath.SAXPathException;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link XPathReaderFactory}.\n* It contains ten unit test cases for the {@link XPathReaderFactory#createReader(String)} method.\n*/\nclass XPathReaderFactory_1Test {",
    "method_signature": "createReader(String)",
    "suffix": "1"
  }
]