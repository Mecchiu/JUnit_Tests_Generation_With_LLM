[
  {
    "numberTests": "ten",
    "original_code": "// FieldInfo.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\n\n/**\n * Represents a Field as defined by the FIX specification.\n *\n * @author jramoyo\n */\npublic class FieldInfo implements FixInfo {\n\n    /**\n     * Returns whether this field is required in the specified component\n     *\n     * @param component - a component\n     * @return whether this field is required in the specified component\n     */\n    public boolean isRequiredInComponent(ComponentInfo component);\n}\n",
    "package": "org.fixsuite.message.info",
    "classname": "FieldInfo",
    "id": "/EvoSuiteBenchmark/original/74_fixsuite/src/main/java/org/fixsuite/message/info/FieldInfo_0Test.java",
    "test_prompt": "// FieldInfo_0Test.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link FieldInfo}.\n* It contains ten unit test cases for the {@link FieldInfo#isRequiredInComponent(ComponentInfo)} method.\n*/\nclass FieldInfo_0Test {",
    "method_signature": "isRequiredInComponent(ComponentInfo)",
    "suffix": "0"
  },
  {
    "numberTests": "ten",
    "original_code": "// FieldInfo.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\n\n/**\n * Represents a Field as defined by the FIX specification.\n *\n * @author jramoyo\n */\npublic class FieldInfo implements FixInfo {\n\n    /**\n     * Returns whether a given value is valid\n     *\n     * @param value - a value\n     * @return whether a given value is valid\n     */\n    public boolean isValidValue(String value);\n}\n",
    "package": "org.fixsuite.message.info",
    "classname": "FieldInfo",
    "id": "/EvoSuiteBenchmark/original/74_fixsuite/src/main/java/org/fixsuite/message/info/FieldInfo_1Test.java",
    "test_prompt": "// FieldInfo_1Test.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link FieldInfo}.\n* It contains ten unit test cases for the {@link FieldInfo#isValidValue(String)} method.\n*/\nclass FieldInfo_1Test {",
    "method_signature": "isValidValue(String)",
    "suffix": "1"
  },
  {
    "numberTests": "ten",
    "original_code": "// DictionaryInfo.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\n\n/**\n * Represents a FIX version specification. DictionaryInfo acts as a central\n * storage for all items defined in a version.\n *\n * @author jramoyo\n */\npublic class DictionaryInfo {\n\n    /**\n     * Returns a field given a tagNumber\n     *\n     * @param tagNumber - a tagNumber\n     * @return a field given a tagNumber\n     */\n    public FieldInfo getField(int tagNumber);\n}\n",
    "package": "org.fixsuite.message.info",
    "classname": "DictionaryInfo",
    "id": "/EvoSuiteBenchmark/original/74_fixsuite/src/main/java/org/fixsuite/message/info/DictionaryInfo_0Test.java",
    "test_prompt": "// DictionaryInfo_0Test.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link DictionaryInfo}.\n* It contains ten unit test cases for the {@link DictionaryInfo#getField(int)} method.\n*/\nclass DictionaryInfo_0Test {",
    "method_signature": "getField(int)",
    "suffix": "0"
  },
  {
    "numberTests": "ten",
    "original_code": "// DictionaryInfo.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\n\n/**\n * Represents a FIX version specification. DictionaryInfo acts as a central\n * storage for all items defined in a version.\n *\n * @author jramoyo\n */\npublic class DictionaryInfo {\n\n    /**\n     * Returns a field given a name\n     *\n     * @param name - a name\n     * @return a field given a name\n     */\n    public FieldInfo getField(String name);\n}\n",
    "package": "org.fixsuite.message.info",
    "classname": "DictionaryInfo",
    "id": "/EvoSuiteBenchmark/original/74_fixsuite/src/main/java/org/fixsuite/message/info/DictionaryInfo_1Test.java",
    "test_prompt": "// DictionaryInfo_1Test.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link DictionaryInfo}.\n* It contains ten unit test cases for the {@link DictionaryInfo#getField(String)} method.\n*/\nclass DictionaryInfo_1Test {",
    "method_signature": "getField(String)",
    "suffix": "1"
  },
  {
    "numberTests": "ten",
    "original_code": "// DictionaryInfo.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\n\n/**\n * Represents a FIX version specification. DictionaryInfo acts as a central\n * storage for all items defined in a version.\n *\n * @author jramoyo\n */\npublic class DictionaryInfo {\n\n    /**\n     * Returns a component given an id\n     *\n     * @param id - an id\n     * @return a component given an id\n     */\n    public ComponentInfo getComponent(int id);\n}\n",
    "package": "org.fixsuite.message.info",
    "classname": "DictionaryInfo",
    "id": "/EvoSuiteBenchmark/original/74_fixsuite/src/main/java/org/fixsuite/message/info/DictionaryInfo_2Test.java",
    "test_prompt": "// DictionaryInfo_2Test.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link DictionaryInfo}.\n* It contains ten unit test cases for the {@link DictionaryInfo#getComponent(int)} method.\n*/\nclass DictionaryInfo_2Test {",
    "method_signature": "getComponent(int)",
    "suffix": "2"
  },
  {
    "numberTests": "ten",
    "original_code": "// DictionaryInfo.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\n\n/**\n * Represents a FIX version specification. DictionaryInfo acts as a central\n * storage for all items defined in a version.\n *\n * @author jramoyo\n */\npublic class DictionaryInfo {\n\n    /**\n     * Returns a component given a name\n     *\n     * @param name - a name\n     * @return a component given a name\n     */\n    public ComponentInfo getComponent(String name);\n}\n",
    "package": "org.fixsuite.message.info",
    "classname": "DictionaryInfo",
    "id": "/EvoSuiteBenchmark/original/74_fixsuite/src/main/java/org/fixsuite/message/info/DictionaryInfo_3Test.java",
    "test_prompt": "// DictionaryInfo_3Test.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link DictionaryInfo}.\n* It contains ten unit test cases for the {@link DictionaryInfo#getComponent(String)} method.\n*/\nclass DictionaryInfo_3Test {",
    "method_signature": "getComponent(String)",
    "suffix": "3"
  },
  {
    "numberTests": "ten",
    "original_code": "// DictionaryInfo.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\n\n/**\n * Represents a FIX version specification. DictionaryInfo acts as a central\n * storage for all items defined in a version.\n *\n * @author jramoyo\n */\npublic class DictionaryInfo {\n\n    /**\n     * Returns a message given an id\n     *\n     * @param id - an id\n     * @return a message given an id\n     */\n    public MessageInfo getMessage(int id);\n}\n",
    "package": "org.fixsuite.message.info",
    "classname": "DictionaryInfo",
    "id": "/EvoSuiteBenchmark/original/74_fixsuite/src/main/java/org/fixsuite/message/info/DictionaryInfo_4Test.java",
    "test_prompt": "// DictionaryInfo_4Test.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link DictionaryInfo}.\n* It contains ten unit test cases for the {@link DictionaryInfo#getMessage(int)} method.\n*/\nclass DictionaryInfo_4Test {",
    "method_signature": "getMessage(int)",
    "suffix": "4"
  },
  {
    "numberTests": "ten",
    "original_code": "// DictionaryInfo.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\n\n/**\n * Represents a FIX version specification. DictionaryInfo acts as a central\n * storage for all items defined in a version.\n *\n * @author jramoyo\n */\npublic class DictionaryInfo {\n\n    /**\n     * Returns a message given a name\n     *\n     * @param name - a name\n     * @return a message given a name\n     */\n    public MessageInfo getMessage(String name);\n}\n",
    "package": "org.fixsuite.message.info",
    "classname": "DictionaryInfo",
    "id": "/EvoSuiteBenchmark/original/74_fixsuite/src/main/java/org/fixsuite/message/info/DictionaryInfo_5Test.java",
    "test_prompt": "// DictionaryInfo_5Test.java\npackage org.fixsuite.message.info;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.TreeMap;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link DictionaryInfo}.\n* It contains ten unit test cases for the {@link DictionaryInfo#getMessage(String)} method.\n*/\nclass DictionaryInfo_5Test {",
    "method_signature": "getMessage(String)",
    "suffix": "5"
  }
]