ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
chatcmpl-6ySj5AXwm5fOGFLdEfiogfrDjnUfT,/EvoSuiteBenchmark/original/5_templateit/src/main/java/org/apache/poi/hssf/usermodel/HSSFDataFormat.java,7.719740152359009,stop,"// HSSFDataFormat.java
/*
 * HSSFDataFormat.java
 *
 * Created on December 18, 2001, 12:42 PM
 */
package org.apache.poi.hssf.usermodel;

import org.apache.poi.hssf.model.Workbook;
import org.apache.poi.hssf.record.FormatRecord;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.Vector;

public class HSSFDataFormat {

    /**
     * Get the format index that matches the given format
     *  string, creating a new format entry if required.
     * Aliases text to the proper format as required.
     *
     * @param format string matching a built in format
     * @return index of format.
     */
    public short getFormat(String format);
}
","// HSSFDataFormatTest.java
/*
 * HSSFDataFormat.java
 *
 * Created on December 18, 2001, 12:42 PM
 */
package org.apache.poi.hssf.usermodel;

import org.apache.poi.hssf.model.Workbook;
import org.apache.poi.hssf.record.FormatRecord;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import java.util.Vector;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link HSSFDataFormat}.
* It contains ten unit test cases for the {@link HSSFDataFormat#getFormat(String)} method.
*/
class HSSFDataFormatTest {","@Test
void testGetFormat() {
    HSSFDataFormat dataFormat = new HSSFDataFormat();
    short index;

    // Test built-in formats
    index = dataFormat.getFormat(""General"");
    assertEquals(0, index);

    index = dataFormat.getFormat(""0.00"");
    assertEquals(2, index);

    index = dataFormat.getFormat(""#,##0.00"");
    assertEquals(3, index);

    index = dataFormat.getFormat(""0%"");
    assertEquals(9, index);

    index = dataFormat.getFormat(""0.00%"");
    assertEquals(10, index);

    index = dataFormat.getFormat(""yyyy/mm/dd"");
    assertEquals(14, index);

    index = dataFormat.getFormat(""d-mmm-yy"");
    assertEquals(15, index);

    index = dataFormat.getFormat(""hh:mm AM/PM"");
    assertEquals(18, index);

    // Test custom format
    index = dataFormat.getFormat(""#,##0.00 [$USD]"");
    assertTrue(index > 0);
}
}"
