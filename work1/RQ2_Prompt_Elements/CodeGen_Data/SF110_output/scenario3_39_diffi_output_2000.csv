ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
18f99f56-8f4a-4355-852d-449c1cb6fc07,/EvoSuiteBenchmark/original/39_diffi/src/main/java/de/beiri22/stringincrementor/helper/ExtBoolArray_0Test.java,66.51283478736877,stop,"// ExtBoolArray.java
package de.beiri22.stringincrementor.helper;

/**
 * @author Rico
 */
public final class ExtBoolArray {

    /**
     * prueft, ob der Bereich mit den Indexen a bis b ausschlie√ülich False-Werte
     * enthaelt.
     *
     * @param a Startindex
     * @param b Endindex
     * @return True - wenn alles False-Werte sind.
     */
    public boolean isFalse(int a, int b);
}
","// ExtBoolArray_0Test.java
package de.beiri22.stringincrementor.helper;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ExtBoolArray}.
* It contains one unit test case for the {@link ExtBoolArray#isFalse(int, int)} method.
*/
class ExtBoolArray_0Test {","// ExtBoolArray_0Test.java
package de.beiri22.stringincrementor.helper;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ExtBoolArray}.
* It contains one unit test case for the {@link ExtBoolArray#isFalse(int, int)} method.
*/
class ExtBoolArray_0Test {

	/**
	 * Test method for {@link ExtBoolArray#isFalse(int, int)}.
	 */
	@Test
	void isFalse_int_int() {
		final int A = 12;
		final boolean B = true;
		final boolean C = false;
		ExtBoolArray.isFalse(A, B);
		
		assertFalse(C);
		assertFalse(B);
		assertFalse(A);
	}

	/**
	 * Test method for {@link ExtBoolArray#isFalse(int, int)}.
	 */
	@Test
	void isFalse_int_boolean() {
		final int A = 12;
		final boolean B = true;
		final boolean C = false;
		ExtBoolArray.isFalse(A, B);
		
		assertFalse(C);
		assertFalse(B);
		assertFalse(A);
	}
	
	/**
	 * Test method for {@link ExtBoolArray#isFalse(int, int)}.
	 */
	@Test
	void isFalse_int_long() {
		final int A = 12;
		final boolean B = true;
		final boolean C = false;
		ExtBoolArray.isFalse(A, B);
		
		assertFalse(C);
		assertFalse(B);
		assertFalse(A);
	}

	/**
	 * Test method for {@link ExtBoolArray#isFalse(long, long)}.
	 */
	@Test
	void isFalse_long_long() {
		final long A = 12;
		final boolean B = true;
		final boolean C = false;
		ExtBoolArray.isFalse(A, B);
		
		assertFalse(C);
		assertFalse(B);
		assertFalse(A);
	}
}
"
143d9fe7-5e53-454a-af04-94224c8a67a2,/EvoSuiteBenchmark/original/39_diffi/src/main/java/de/beiri22/stringincrementor/helper/ExtBoolArray_1Test.java,15.633840799331665,stop,"// ExtBoolArray.java
package de.beiri22.stringincrementor.helper;

/**
 * @author Rico
 */
public final class ExtBoolArray {

    /**
     * Zahl die uebriggebliebenen False-Werte.
     *
     * @return Anzahl der False-Werte.
     */
    public int left();
}
","// ExtBoolArray_1Test.java
package de.beiri22.stringincrementor.helper;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ExtBoolArray}.
* It contains one unit test case for the {@link ExtBoolArray#left()} method.
*/
class ExtBoolArray_1Test {","// ExtBoolArray_1Test.java
package de.beiri22.stringincrementor.helper;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ExtBoolArray}.
* It contains one unit test case for the {@link ExtBoolArray#left()} method.
*/
class ExtBoolArray_1Test {

	/**
	 * Testmethod for {@link ExtBoolArray#ExtBoolArray(java.lang.String[])}.
	 */
	@Test
    public void whenCreationStringArray_thenNewArray() {
		
		// Act
        String[] a = new String[0];
		
        // Assert
        assertNotNull(a);
        
        // Act
        ExtBoolArray e = new ExtBoolArray(a);
        
        // Assert
        assertArrayEquals(a, e.left().toStringArray());
        
    }
}
"
