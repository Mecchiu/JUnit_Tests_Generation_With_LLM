ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
dfcee099-65d6-4916-b53a-7fbfe1b79902,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_0Test.java,55.97251272201538,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public JTailMainModel jTailMainModel() {
        return new JTailMainModel();
    }
}
","// ApplicationConfiguration_0Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#jTailMainModel()} method.
*/
class ApplicationConfiguration_0Test {","// ApplicationConfiguration_0Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#jTailMainModel()} method.
*/
class ApplicationConfiguration_0Test {

    @Test
    void jTailMainModel_0() {
        JTailMainModel m = new JTailMainModel();
	m.add(new JTailMainModel_0().jTailMainModel_0());
	assertEquals(
                       jTailMainModel_0().jTailMainModel_0().size(),
                       0,
                       ""The number of elements of the model is different""
                    );
	JTailMainModel_0 a = new JTailMainModel_0(m);
	assertEquals(
                               a.size(),
                               m.size(),
                               String.format(""The number of elements of the model does not match the number of elements of the model. size: %d!= %d"", a.size(), m.size())		
                      ,a
                       );
    }	
}

// ApplicationConfiguration.java
class ApplicationConfiguration_0 {
    
    /**
     * This example has two main methods.
     * One is a public static class and a private static class.
     * These two classes have the same name and contain the same static methods.
     */
	Class[] classes = {
                        public class JTailMainFrame extends JTailMainFrame_0 {
                     public class JToolBar extends JToolBar_0 {
                            public JTailMainFrame_0.JToolBar jToolBar() { return this;}
                     }
                     }
                };
	static class JTailMainModel_0 {
			private static final String FACTORY = ""jTailMainModelFactory"";
    	    private JTailMain_0 jTailMainModel_0() {
                    return (JTailMain_0) Beans.newInstance(FACTORY);
    	    }
			static JTailMainModelFactory factory() { return (new JTailMainModelFactory());} }

// Static class of ApplicationConfiguration.
	class Class1{
		
               public static class MemberVariableStatic {
                   
                   public void memberMethod(JTailMainModel model) {
                       model.memberMethod();
                   }
        }
	} }

// Test bean factory.
class JTailMainModelFactory implements ApplicationConfiguration.ApplicationConfiguration_0.JTailMainModelFactory {

    /**
     * This example has two public static class.
     * This class has a static member method.
     */
	@Bean(FACTORY)
	public static class MemberVariableStatic {
		
			public void memberMethod(JTailMainModel model) {
			                model.memberMethod();
			}
		}
}

"
aa3a6a3e-f5a2-451e-b504-b7a8323ea2d9,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_1Test.java,43.40756440162659,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public OpenFileModel openFileModel() {
        return new OpenFileModel();
    }
}
","// ApplicationConfiguration_1Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#openFileModel()} method.
*/
class ApplicationConfiguration_1Test {","// ApplicationConfiguration_1Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#openFileModel()} method.
*/
class ApplicationConfiguration_1Test {
@Configuration
    private ResourceBundle resources = ResourceBundle.getBundle(""Config"");
  @Test
  void getInstance() {
    assertNotNull(new ApplicationConfiguration_1_1A());
  }

	@Test
 			public void test() {
     	assertNotNull(new ApplicationConfiguration_1_1A().createController());
     	assertNotNull(new ApplicationConfiguration_1_1A().createController() instanceof OpenFileModel);  
    }

    private Class<?> createController() {
        switch (resources.getString(""controller"")) {
        case ""Open file"":
            return OpenFileModel.class;
        default:
            return null;
    }
	}
}

// ApplicationConfiguration_2.java
"
d5c6326d-43ab-4fb5-9664-2d7c0d53430a,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_2Test.java,55.364917039871216,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public MenuAction fileMenuAction() {
        return new MenuAction(bundle.getString(""action.file.label""), bundle.getString(""action.file.mnemonic""));
    }
}
","// ApplicationConfiguration_2Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#fileMenuAction()} method.
*/
class ApplicationConfiguration_2Test {","// ApplicationConfiguration_2Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#fileMenuAction()} method.
*/
class ApplicationConfiguration_2Test {

    private static final ResourceBundle BUNDLE = ResourceBundle.getBundle(""Bundle"");
	
    /**
     * Create an array of {@link JTailMainModel} object.
     * It's supposed to return a model object, but in this case will return null.
     * @return jTailMainModel array of {@link JTailMainModel}
     */
    private OpenFileModel[] arrayOfFileModel() {
        return new OpenFileModel[]{null};
    }
    
    /**
     * Create an array of {@link JTailMainModel} object.
     * @return jTailMainModel array of {@link JTailMainModel}
     */
    private OpenFileModel[] arrayOfFileModelInModel() {
        return new OpenFileModel[]{createModel(bundle.getString(""model.title"")), createModel(bundle.getString(""model.content""))};
    }
	
	private static OpenFileModel createModel(String text) {
		return new OpenFileModel() {
			public boolean isOpen() {
				return false;
			}
			public String getText() {
				return text;
			}
			public void setText(String text) {
				this.text = text;
			}
			public void open() throws Exception {
				throw new UnsupportedOperationException(""Not implemented yet"");
			}
			public void move(int columnNumber, int rowNumber) throws Exception {
				throw new UnsupportedOperationException(""Not implemented yet"");
			}
			public void restore() throws Exception {
				throw new UnsupportedOperationException(""Not implemented yet"");
			}
 		}; 
	}

	private static JTailMainFrame createWindow(String title, String content) {
		return new JTailMainFrame(null);
	}

	@Test
    void testBasicConfiguration() {
    	
    	assertNull(arrayOfFileModel());
    	
    	OpenFileDialog openFileDialog = new OpenFileDialog(null, ""Open a file"", arrayOfFileModel());
    	
    	assertTrue(openFileDialog.isReadOnly());
    	
    	for (FileMenuAction fileMenuAction: fileMenuAction().toArray()) {
    		assertTrue(openFileDialog.createOpenFile(fileMenuAction.text()).isOpen() == fileMenuAction.isOpen());
    	}
    }
    
	@Test
    void testNoSelection() {
    	
    	OpenFileDialog openFileDialog = new OpenFileDialog(null, ""Open a file"", arrayOfFileModel());
    	
    	assertTrue(openFileDialog.isReadOnly());

    	for (FileMenuAction fileMenuAction: fileMenuAction().toArray()) {
    		assertTrue(openFileDialog.createOpenFile(fileMenuAction.text()).isEmpty());
    	}
    }
    
	@Test
    void testMultipleSelection() {
    	
    	OpenFileDialog openFileDialog = new OpenFileDialog(null, ""Open a file"", arrayOfFileModelInModel());
    	
    	assertFalse(openFileDialog.isReadOnly());
    	
    	for (FileMenuAction fileMenuAction: fileMenuAction().toArray()) {
    		assertNotNull(openFileDialog.createOpenFile(fileMenuAction.text()).isEmpty());
    	}
    }
}
"
97fabd53-f006-4d5f-969b-29066e75a217,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_3Test.java,51.968979835510254,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public MenuAction toolsMenuAction() {
        return new MenuAction(bundle.getString(""action.tools.label""), bundle.getString(""action.tools.mnemonic""));
    }
}
","// ApplicationConfiguration_3Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#toolsMenuAction()} method.
*/
class ApplicationConfiguration_3Test {","// ApplicationConfiguration_3Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#toolsMenuAction()} method.
*/
class ApplicationConfiguration_3Test {

    public ResourceBundle bundle;
	
    @Bean
    @Scope(value = BeanDefinition.SCOPE_PROTOTYPE, proxyMode = ScopedProxyMode.INTERPRET)
    public MenuAction toolsMenuAction() {
        return new MenuAction(bundle.getString(""action.tools.label""), bundle.getString(""action.tools.mnemonic""));
    }

    @Test
    public void testConstructor1() {
    	assertNotNull(appConfiguration1);
        assertNotNull(appConfiguration2);
    }
    
    @Test
    public void testConstructor2() {
    	assertNotNull(appConfiguration3);
    }
    
	@Test
	public void testConstructor3() {
		assertNotNull(appConfiguration2);
		assertNotNull(appConfiguration3);
	}
    
    @Test
    public void testConstructor4() {
    	assertNotNull(appConfiguration1);
    }
    
    @Test
    public void testConstructor5() {
    	assertNotNull(appConfiguration2);
    }
    
    @Test
    public void testConstructor6() {
    	assertNotNull(appConfiguration3);
    }
    
    @Test
    public void testMenuAction() {
    	assertEquals(true, appConfiguration1.toolsMenuAction().equals(toolsMenuAction()));
    }
	
	@Test
	public void testConstructor7() {
		assertNotNull(appConfiguration2);
		assertNotNull(appConfiguration3);
		assertNotNull(appConfiguration4);
		assertNotNull(appConfiguration5);
		assertNotNull(appConfiguration6);
		assertNotNull(appConfiguration7);
		assertNotNull(appConfiguration8);
		assertNotNull(appConfiguration9);
		assertNotNull(appConfiguration10);
		assertNotNull(appConfiguration11);
		assertNotNull(appConfiguration12);
		assertNotNull(appConfiguration13);
		assertNotNull(appConfiguration14);
		assertNotNull(appConfiguration15);
		assertNotNull(appConfiguration16);
		assertNotNull(appConfiguration17);
		assertNotNull(appConfiguration18);
		assertNotNull(appConfiguration19);
	}
	
	@Test
	public void testConstructor8() {
		assertNotNull(appConfiguration2);
		assertNotNull(appConfiguration3);
		assertNotNull(appConfiguration4);
		assertNotNull(appConfiguration5);
		assertNotNull(appConfiguration6);
		assertNotNull(appConfiguration7);
		assertNotNull(appConfiguration8);
		assertNotNull(appConfiguration9);
		assertNotNull(appConfiguration10);
		assertNotNull(appConfiguration11);
		assertNotNull(appConfiguration12);
		assertNotNull(appConfiguration13);
		assertNotNull(appConfiguration14);
		assertNotNull(appConfiguration15);
		assertNotNull(appConfiguration16);
		assertNotNull(appConfiguration17);
		assertNotNull(appConfiguration18);
		assertNotNull(appConfiguration19);
		
		assertNotNull(appConfiguration1);
		assertNotNull(appConfiguration2);
		assertNotNull(appConfiguration4);
		assertNotNull(appConfiguration5);
		assertNotNull(appConfiguration6);
		assertNotNull(appConfiguration7);
		assertNotNull(appConfiguration8);
		assertNotNull(appConfiguration9);
		assertNotNull(appConfiguration10);
		assertNotNull(appConfiguration11);
	}
	
	
	@Test
	public void testConstructor9() {
		assertNotNull(appConfiguration4);
		assertNotNull(appConfiguration5);
		assertNotNull(appConfiguration6);
		assertNotNull(appConfiguration7);
		assertNotNull(appConfiguration8);
		assertNotNull(appConfiguration9);
		assertNotNull(appConfiguration10);
		assertNotNull(appConfiguration11);
		assertNotNull(appConfiguration12);
		assertNotNull(appConfiguration13);
		assertNotNull(appConfiguration14);
		assertNotNull(appConfiguration15);
		assertNotNull(appConfiguration16);
		assertNotNull(appConfiguration17);
		assertNotNull(appConfiguration18);
		assertNotNull(appConfiguration19);
		assertNotNull(appConfiguration20);
		assertNotNull(appConfiguration21);
		assertNotNull(appConfiguration22);
	}
	
	@Test
	public void testConstructor10() {
		assertNotNull(appConfiguration21);
		assertNotNull(appConfiguration22);
	}
	
	@Test
	public void testConstructor11() {
		assertNotNull(appConfiguration3);
	}
	
	@Test
	public void testBuildMainModel() {
		ResourceBundle bundle = new ResourceBundle() {
			
			@Override
			public Object handleGetObject(String key) {
				if (key.startsWith(""bundle.application"")) {
					return new ApplicationModel();
				}
				return null;
			}
			
		};
		ModelResourceBundleModel model = ModelResourceBundleModel.newInstance(bundle, this.getClass().getClassLoader());
		JTailModel jTailModel = JTailModel.newInstance(model.bundle);
		OpenFileDialog openFileDialog = OpenFileDialog.newInstance(jTailModel);
	}
	
	@Bean(name = ""bundle"")
	public ResourceBundle bundle() {
		return bundle;
	}
	
	public static class ModelResourceBundleModel extends ResourceBundleModel {
		
		private static final String KEY = ""bundle.application"";
		private static final BeanDefinition bd = new BeanDefinition();
		
	    @Override
		public String getKey() {
			return KEY;
		}
	}
	
	public static class ApplicationModel extends ResourceBundleModel {
	}
}
"
ba15cef8-4f40-4199-8cc3-409036bda73c,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_4Test.java,54.053083181381226,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public ChooseFileAction chooseFileAction() {
        return new ChooseFileAction(openFileModel());
    }
}
","// ApplicationConfiguration_4Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#chooseFileAction()} method.
*/
class ApplicationConfiguration_4Test {","// ApplicationConfiguration_4Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#chooseFileAction()} method.
*/
class ApplicationConfiguration_4Test {
// Test case Name (description of test )
	@Test
	void configureOpenFileAction() {
		// We configure the ApplicationConfiguration for a view with the right view. (this view is also in the Open File View)
		ApplicationConfiguration scopedConfig = new ApplicationConfiguration();
		scopedConfig.afterPropertiesSet();
		// But this is a new bean as you will be starting up the application context
		assertNotNull(scopedConfig.getView());
	}

		// Test method named configureOpenFileAction() of ApplicationConfiguration class
	@Test
	void configureOpenFileActionAndView() {
		// We configure the ApplicationConfiguration and View for a view with the right view. (this view is also in the Open File View)
		ApplicationConfiguration scopedConfig = new ApplicationConfiguration();
		scopedConfig.setView(""test"");
		scopedConfig.afterPropertiesSet();
	}

	@Configuration
	public static class TestConfiguration {
		@Bean
		public JTailMainFrame create(JTailMainModel mainModel, OpenFileModel openFileModel) {
			JTailMainFrame jtMainFrame = new JTailMainFrame(mainModel);
			return jtMainFrame;
		}
	}

	// ApplicationConfiguration_7Test.java
	
	@Test
	void configureShowOpenFileDialog() {
		ApplicationConfiguration scopedConfig = new ApplicationConfiguration();
		scopedConfig.afterPropertiesSet();
		OpenFileDialog openFileDialog = new OpenFileDialog(null);
		assertNotNull(openFileDialog);
	}

	@Test
	void configureShowOpenFileDialogForProject() {
		ApplicationConfiguration scopedConfig = new ApplicationConfiguration();
		scopedConfig.afterPropertiesSet();
		OpenFileDialog openFileDialog = new OpenFileDialog(null);
		assertNotNull(openFileDialog);
	}

	@Test
	void configureViewName(ResourceBundle resourceBundle) {
		ApplicationConfiguration scopedConfig = new ApplicationConfiguration();
		scopedConfig.afterPropertiesSet();
		assertNotNull(resourceBundle);
	}

	@Test
	void configureNoIndexType(ResourceBundle resourceBundle) {
		ApplicationConfiguration scopedConfig = new ApplicationConfiguration();
		scopedConfig.afterPropertiesSet();
		assertNotNull(resourceBundle);
	}

	@Test
	void configureNoFileType(ResourceBundle resourceBundle) {
		ApplicationConfiguration scopedConfig = new ApplicationConfiguration();
		scopedConfig.afterPropertiesSet();
		assertNotNull(resourceBundle);
	}

	@Test
	void configureNoView(ResourceBundle resourceBundle) {
		ApplicationConfiguration scopedConfig = new ApplicationConfiguration();
		scopedConfig.afterPropertiesSet();
		assertNotNull(resourceBundle);
	}

	// ApplicationConfiguration_6Test.java

	@Configuration
    public static class TestConfiguration {
		@Bean
		public JTailMainFrame create(JTailMainModel mainModel, OpenFileModel openFileModel) {
		return new JTailMainFrame(mainModel);
		}
    }
}
"
c053068c-cce6-42d9-8e46-5449cb374f0b,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_5Test.java,53.98493051528931,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public SelectIndexTypeListener selectIndexTypeListener() {
        return new SelectIndexTypeListener(openFileModel());
    }
}
","// ApplicationConfiguration_5Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#selectIndexTypeListener()} method.
*/
class ApplicationConfiguration_5Test {","// ApplicationConfiguration_5Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#selectIndexTypeListener()} method.
*/
class ApplicationConfiguration_5Test {
private final static String BUNDLE_NAME = ""jtail.configuration"";
					static final String INDEX_TYPE_MEMBER_BEAN_NAME = ""t"";
					static final ResourceBundle BUNDLE = ResourceBundle.getBundle(BUNDLE_NAME);
	private final String openFilePath = ""src/test/resources/testclasses/src/test/resources/testclasses/openFile.txt"";
	private final JTailMainModel activeMainModel;
	private final JTailMainFrame mainFrame;
		private final OpenFileDialog openFileDialog; 
		private OpenFileModel activeOpenFileModel;
		
	@Test
	public void ensureNoParametersProvided() {
		assertNotNull(""The bean 'openFileDialog' must be present"", openFileDialog);
		assertNotNull(""The bean 'openFileModel' must be present"", openFileModel);
		assertNotNull(""The bean 'activeMainModel' must be present"", activeMainModel);
		assertNotNull(""The bean 'activeMainModel' must be present"", activeMainModel);
		assertNotNull(""The bean'mainFrame' must be present"", mainFrame);
	}
	
	/**
	* This is the run-and-test test of the {@link ApplicationConfiguration#openFileModel()} method.
	 * Its purpose is to ensure that we can retrieve ""from"" values and that they are not lost.
	*/
	@Test
	public void getModelShouldReturnExpectedValues() {
		final String path = ""/path"";

		final String displayFilePath = openFileModel.getDisplayFilePath();
		assertEquals(""The path for "" + openFilePath + "" must be "" + openFilePath.toString(), displayFilePath, path);
		final JTailMainModel mainModel = new JTailMainModel();
		mainFrame.setMainModel(mainModel);
		assertNotNull(""The main model is not set correctly."", mainModel);
		openFileDialog.setModel(mainModel);
		assertNotNull(""The dialog is set correctly."", openFileDialog);
	}
	
	@Test
	public void retrieveFromResourceShouldSetCorrectPropertyValue() {
		assertEquals(""The resource path for "" + openFilePath.toString() + "" must be "" + openFilePath, openFilePath, openFileDialog.getSelectedFilePathFile());
	}
	
	@Test
	public void retrieveFromResourceShouldSetCorrectPropertyValueIfNotSet() {
		assertTrue(""The resource path for "" + openFilePath.toString() + "" is not set correctly."", openFileDialog.getModel().getDisplayFilePath().equals(openFileModel.getDisplayFilePath()));
	}
	
	// test the ""withMainModel"" bean-configuratoin
	@Test
	public void withMainModelShouldSetCorrectPropertyValue() {
		final String path = ""/path"";
		final JTailMainModel expectedMainModel = new OpenFileModel();
		final OpenFileDialog openFileDialog = new OpenFileDialog();
		openFileDialog.setModel(expectedMainModel);
		final JTailMainModel mainModel = new JTailMainModel();
		mainFrame.setMainModel(mainModel);
		assertEquals(""The main model should be changed correctly. The model should be equal to the current main model."", expectedMainModel, mainModel );
		final String modifiedOpenFilePath = openFileDialog.hasModifiedFilePath();
		assertEquals(""The resource path for "" + openFilePath + "" must be "" + path;
		assertTrue(""The new model should be set to the resource path."", path.equals(openFileModel.getDisplayFilePath()));
		assertFalse(""The path should not have been modified."", modifiedOpenFilePath!= null && modifiedOpenFilePath.startsWith(openFileModel.getDisplayFilePath()));
	}
}

"
15f02b51-38fe-4526-b308-0720063a72e1,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_6Test.java,53.90340256690979,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public IndexFileAction indexFileAction() {
        return new IndexFileAction(jTailMainModel(), openFileModel());
    }
}
","// ApplicationConfiguration_6Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#indexFileAction()} method.
*/
class ApplicationConfiguration_6Test {","// ApplicationConfiguration_6Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#indexFileAction()} method.
*/
class ApplicationConfiguration_6Test {

	@Test
	public void test() {
        JTailMainFrame frame=new JTailMainFrame();
        frame.setModel(new JTailMainModel());
        frame.show();

		JTailMainModel model=frame.getModel();

		assertEquals(JTailMainModel.class,model.getClass());

		JTailMainFrame frameWithModel=new JTailMainFrame();
		frameWithModel.setModel(model);
		frameWithModel.getComponent().getActionManager().setAction(indexFileAction());
		frameWithModel.show();

		assertTrue(frameWithModel.getComponent().getComponent().isVisible());
	}

	/**
	* Define the {@link ApplicationConfiguration} and verify the configuration.
	**/
	@Bean(name=""ApplicationConfiguration"")
	public ApplicationConfiguration applicationConfiguration(){ return new ApplicationConfiguration();}
}"
8341aab8-b90c-444d-bbad-2df7d1e71348,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_7Test.java,53.848504304885864,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public OpenFileAction openAction() {
        return new OpenFileAction(jTailMainModel(), openFileModel(), openFileDialog());
    }
}
","// ApplicationConfiguration_7Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#openAction()} method.
*/
class ApplicationConfiguration_7Test {","// ApplicationConfiguration_7Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#openAction()} method.
*/
class ApplicationConfiguration_7Test {
/**
		* Unit test case for the {@link ApplicationConfiguration#openAction()} method.
		* @throws Exception exception thrown if some unexpected error occurs
		*/
		@Test
		public void testOpenAction() throws Exception {

                        JTailMainFrame frame = new JTailMainFrame();
                        OpenFileDialog fileDialog = new OpenFileDialog(frame);
                        assertNotNull(fileDialog);
			assertEquals(fileDialog.getFileType(), OpenFileModel.FILE_TYPE_SMB_SERVER);
                        assertNotNull(frame.getContent().getIndexType());

                        OpenFileAction action = new OpenFileAction(jTailMainModel(), openFileModel(), fileDialog);
		    assertTrue(action.isActionOnIndex(OpenFileModel.FILE_TYPE_SMB_SERVER));

                        // Default open: JTail mainframe.
                        JTailMainModel mainModel = new JTailMainModel();
                        
                       new SelectIndexTypeListener(event -> {
                           if (event.getAction() == OPEN_FILE_ACTION.OPEN_FILE) {
                               event.setIndexModel(OpenFileModel.FILE_TYPE_SMB_SERVER);
                           }
						}).setSelectedIndex(OpenFileModel.FILE_TYPE_SMB_SERVER);


                   }
		
}
"
00c94f25-04d4-447d-9884-c7e5b0ac1d85,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_8Test.java,48.338594913482666,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public CloseAction closeAction() {
        return new CloseAction(jTailMainModel());
    }
}
","// ApplicationConfiguration_8Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#closeAction()} method.
*/
class ApplicationConfiguration_8Test {","// ApplicationConfiguration_8Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#closeAction()} method.
*/
class ApplicationConfiguration_8Test {

    @Bean(name = ""closeAction"")
    @Order(0)
    public CloseAction closeAction() {
        return new CloseAction(jTailMainModel());
    }
    
    @Test
    public void test_closeAction_default() {
        
		// A default open file model will be added to the application configuration
        Configuration configuration = new Configuration();
        
        assertNotNull(configuration.getJailMainModel());
        assertNotNull(configuration.getJailMainModel().getOpenFileController());
        assertNotNull(configuration.getGotoCurrentView());
        assertTrue(configuration.getGotoCurrentView().isOpenFileModelDefault());
        
		// A model should be added to the close action by calling the default open file model(s)
		
		assertNotNull(closeAction().getOpenFileController().getOpenFileModel());
	}
    
    @Test
    public void test_closeAction_byRefactorView() {
        
        ResourceBundle resourceBundle = ResourceBundle
           .getBundle(""Bundle"");
        String defaultJTailViewName = resourceBundle.getString(""defaultView"");
        
        final JTailMainFrame frame =
            new JTailMainFrame(
                jTailMainModel().getJTailMainFrameController()
            );
        frame.setGotoView(defaultJTailViewName);
        
        assertFalse(frame.isCloseable());
        
        final JTailMainFrame closeFrame =
            new JTailMainFrame(
                frame.getJTailMainModel().getJTailMainFrameController()
            );
        closeFrame.setGotoView(defaultJTailViewName);
        closeFrame.setCloseable(true);
        
        assertTrue(closeFrame.isCloseable());
        
        // Finally a view should be added to the close action
        Configuration configuration = new Configuration();
        
        assertNotNull(configuration.getJailMainModel());
        assertNotNull(configuration.getJailMainModel().getCloseAction());
        assertTrue(configuration.getJailMainModel().getCloseAction().isCloseable());
        // We get the default view in case of a configuration where it is not used.
        
        configuration.getJailMainModel().getCloseAction().addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                
                // The default model should be added to close action
                assertNotNull(closeAction().getOpenFileController().getOpenFileModel());
            }
        });
        
        assertNotNull(closeAction().getCloseAction());
        assertNotNull(closeAction().getCloseAction().getView());
        assertEquals(defaultJTailViewName, closeAction().getCloseAction().getView());
        
        assertTrue(frame.isCloseable());
        
	}
}"
dbfed57d-76d3-41b2-a86f-2aadd0e6c353,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_9Test.java,54.01805567741394,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public CloseAllAction closeAllAction() {
        return new CloseAllAction(jTailMainModel());
    }
}
","// ApplicationConfiguration_9Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#closeAllAction()} method.
*/
class ApplicationConfiguration_9Test {","// ApplicationConfiguration_9Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#closeAllAction()} method.
*/
class ApplicationConfiguration_9Test {

	@Test
	public void testCloseAction() {
		
		final String testFilePath = ""file.txt"";

		// ApplicationConfiguration_9Test.CloseAction_11.txt
		
		// Method testCloseAction()
		
		//
		SelectIndexTypeListener selectIndexTypeListener = new SelectIndexTypeListener();
		selectIndexTypeListener.indexTypeChanged(OpenFileDialog.INDEX_TYPE_FILE);
		
		closeAllAction().selectFile(testFilePath, JTailMainModel.INDEXES_FILE);
		
		assertNotNull(this.jTailMainModel());
		assertEquals(OpenFileModel.FILE, this.jTailMainModel().fileTypeID());
		assertTrue(""the index has not been closed"", this.jTailMainModel().indexType() == OpenFileModel.INDEXES_FILE);

		assertNotNull(this.closeAllAction());
		
		assertFalse(this.closeAllAction().isExecuting());
		
		//
		
		this.jTailMainModel().addAction(new CloseAllAction(jTailModel()));
		
		//
		
		assertTrue(""execute() method after index type has been changed"", this.closeAllAction().isExecuting());
		selectIndexTypeListener.indexTypeChanged(null);
		assertTrue(""execute() method after index type has been changed"", this.closeAllAction().isExecuting());

	}.
	
	/**
	 * To have some test coverage.
     
	@Test
	public void testIndexType() {
        
        final String testFilePath = ""file.txt"";

		SelectIndexTypeListener selectIndexTypeListener = new SelectIndexTypeListener();
		int expectedType = OpenFileDialog.INDEX_TYPE_FILE;
		
		selectIndexTypeListener.indexTypeChanged(expectedType);
		
		assertNotNull(this.jTailMainModel());
		assertEquals(expectedType, this.jTailMainModel().fileTypeID());
		assertTrue(""the index has not been closed"", this.jTailModel().indexType() == OpenFileModel.INDEX_FILE);
		selectIndexTypeListener.indexTypeChanged(expectedType);
		assertFalse(this.jTailModel().indexType() == OpenFileModel.INDEX_FILE);
		//
		
    }
}

// ApplicationConfiguration_9Test.CloseAllAction_12.txt
// ApplicationConfiguration.ApplicationConfiguration

// ApplicationConfiguration_9Test.IndexesFile_3.txt
// ApplicationConfiguration.ApplicationConfiguration
"
d8300f12-bb0a-468f-9c4e-4cacbc86f3c8,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_10Test.java,54.30329489707947,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public QuitAction quitAction() {
        return new QuitAction();
    }
}
","// ApplicationConfiguration_10Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#quitAction()} method.
*/
class ApplicationConfiguration_10Test {","// ApplicationConfiguration_10Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#quitAction()} method.
*/
class ApplicationConfiguration_10Test {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_NONE, proxyMode = ScopedProxyMode.INTERFACES)
    public QuitAction  quitAction(){
        return new CloseAllFilesAction();
    }
    
	@Test
	@org.junit.jupiter.api.Test
    public void newInstance_with_constructor() {
        assertNotNull(new ApplicationConfiguration());
    }
}

// ApplicationConfiguration_Actions.java
// ApplicationConfiguration_testAction_10Test.java
"
0e29d808-adbc-4857-9c75-3a3977de7199,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_11Test.java,54.01330614089966,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public HighlightAction highlightAction() {
        return new HighlightAction(jTailMainModel());
    }
}
","// ApplicationConfiguration_11Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#highlightAction()} method.
*/
class ApplicationConfiguration_11Test {","// ApplicationConfiguration_11Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#highlightAction()} method.
*/
class ApplicationConfiguration_11Test {

    private static JTailMainModel jTailMainModel;
    
    @Test
    void testConstructor() {
        assertNotNull(jTailMainModel);
    }
    
    @Test
    void testGetJTailMainModel() {
        assertNotNull(jTailMainModel.getFileModel());
        
        jTailMainModel.getJTailMainModel().setFileModel(new OpenFileModel());
        assertEquals(new OpenFileModel(),
                     jTailMainModel.getJTailMainModel().getFileModel());
    }
    
    @Test
    void testSetFileModel() {
        String path = ""foo/bar/"";
        OpenFileModel fileModel = new OpenFileModel(new ResourceBundle() {
          {
            put(""key 0"", ""value0"");
            put(""key 1"", ""value1"");
            put(""key 2"", ""value2"");
          }
        });

        jTailMainModel.getJTailMainModel().setFileModel(fileModel);
        assertEquals(fileModel, jTailMainModel.getJTailMainModel().getFileModel());
        
        OpenFileDialog openFileDialog = new OpenFileDialog();
        
        fileModel.setPath(openFileDialog.promptPath());
        assertEquals(path, fileModel.getPath());
        
        System.out.println(""\tSet File Model -> "" + fileModel);

        jTailMainModel.getJTailMainModel().setFileModel(new OpenFileModel());
        
        fileModel.setPath(null);
        assertNull(fileModel.getPath());

        System.out.println(""\tDispose File Model -> "" + fileModel);
    }
    
    @Test
    void testGetJTailMainFrameBean() {
        assertNotNull(jTailMainFrame);

        assertSame(jTailMainFrame,
                   jTailMainFrame.getBean(jTailMainFrame.class));
    }
    
    @Test
    void testGetModelBean() {
        assertNotNull(jTailMainModel);

        assertSame(jTailModel,
                   jTailModel.getBean(jTailModel.class));
    }
    
    @Test
    void testSetFileModelBean() {
        JTailMainModel mainModel = new JTailMainModel();

        mainModel.getFileModel().setPath(""foo/bar/"");
        assertEquals(""Set: bar/"",
                     mainModel.getFileModel().getPath());

        MainController mainController = new MainController();

        jTailMainModel.setMainController(mainController);
        assertSame(mainController,
                   new JTailMainModel(jTailMainModel).getMainController());
    }
	
	@Configuration
	@Repository(""jTailFrameRepository"")
	public static class GlobalRepositoryConfiguration<T extends JTailMainFrame> {

		@Bean(name = ""jTailMainFrameRepository"")
		public JTailMainFrameRepository<T> jTailMainFrameRepository() {
			return new JTailMainFrameRepository<T>(new JTailMainModel());
		}
		
	}
}
"
cebae513-09fb-4bb4-b271-8cdf69fed546,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_12Test.java,49.765483379364014,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public JTailMainFrame jTailMainFrame() {
        return new JTailMainFrame(jTailMainModel(), fileMenuAction(), openAction(), closeAction(), closeAllAction(), quitAction(), toolsMenuAction(), highlightAction());
    }
}
","// ApplicationConfiguration_12Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#jTailMainFrame()} method.
*/
class ApplicationConfiguration_12Test {","// ApplicationConfiguration_12Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#jTailMainFrame()} method.
*/
class ApplicationConfiguration_12Test {
/**
* @test {@link ApplicationConfiguration#jTailMainFrame()}
*/
									 
  @Test
  public void constructorOfApplicationConfiguration_12() {
        assertNotNull(ApplicationConfiguration_12Test.jTailMainFrame());
  }

		/**
* @test {@link ApplicationConfiguration#jTailMainFrame(ResourceBundle)}
*/
							 
  @Test
  public void constructorOfApplicationConfiguration_13() {
        BeanDefinition beanDefinition = new ApplicationConfiguration_13().applicationConfiguration().jTailMainFrame(getClass().getResourceAsStream(""/fr.pingtimeout.jtail.configuration.application/fr.pingtimeout.jtail_configuration.application_12.properties""));
        assertNotNull(beanDefinition);
  }

}
// ApplicationConfiguration_12.java"
604dac72-511d-49a1-900c-c1896b16b7e0,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_13Test.java,53.719149112701416,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public OpenFileDialog openFileDialog() {
        return new OpenFileDialog(openFileModel(), chooseFileAction(), selectIndexTypeListener(), indexFileAction());
    }
}
","// ApplicationConfiguration_13Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#openFileDialog()} method.
*/
class ApplicationConfiguration_13Test {","// ApplicationConfiguration_13Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#openFileDialog()} method.
*/
class ApplicationConfiguration_13Test {

	/**
	 * It contains one unit test case for the {@link ApplicationConfiguration#openFileModel()} method.
	 * It contains one unit test case for the {@link ApplicationConfiguration#chooseFileAction()} method.
*/
	@Test
    void openFileView_0_shouldCallTheOpenFileSystemView() {
		String testDirName = ""test"";
		OpenFileModel openFileModel = new OpenFileModel(""localhost"", 8080, testDirName, ""Test file to view"", ""TEST"", ""test.txt"");
		String testTitle = ""Test File to view"";
		String testName = ""test.exe"";
		String testTitleName = ""Test File to view"";
        
		String testDirPath = ""file://"" + testDirName;
        String testFilePath = ""file://"" + testFileName;
		OpenFileDialog openFileDialog = new OpenFileDialog(openFileModel, chooseFileAction(), selectIndexTypeListener(), indexFileAction());
                
        assertNotNull(selectIndexTypeListener());
		assertNotNull(selectIndexTypeListener().getSelectedType());
		assertEquals(openFileModel, openFileDialog.openFile());
	}
	
	@Test
    void openFileSystemView_shouldInvokeCreateAndSetResourceBundle() throws Exception {
        String testDirName = ""test"";
		OpenFileModel openFileModel = new OpenFileModel(""localhost"", 8080, testDirName, ""Test file to view"", ""TEST"", ""test.txt"");
		String testTitle = ""Test File to view"";
		String testName = ""test.exe"";
		String testTitleName = ""Test File to view"";
        
		String testDirPath = ""file://"" + testDirName;
        String testFilePath = ""file://"" + testFileName;
		OpenFileDialog openFileDialog = new OpenFileDialog(openFileModel, chooseFileAction(), selectIndexTypeListener(), indexFileAction());
                
		assertNotNull(selectIndexTypeListener());
		assertNotNull(selectIndexTypeListener().getSelectedType());
		assertNotNull(selectIndexTypeListener().getSelectedPath());
				   
		ResourceBundle bundle = getClass().getClassLoader().getResourceAsStream(""mainBundle.properties"");
		assertNotNull(bundle);
		String systemBundle = openFileDialog.openFile(bundle);
		assertNotNull(systemBundle);
		assertNotNull(systemBundle);
		assertEquals(testDirPath, systemBundle);
		assertEquals(systemBundle, OpenFileDialog.class.getName());
        
        assertNotNull(selectIndexTypeListener().getSelectedType());
        assertNotNull(selectIndexTypeListener().getSelectedPath());
        
	}
	
	@Test
    void openFileSystemView_shouldInvokeCreateAndSetResourceBundleWithPathStringAndFilePath() throws Exception {
        String testDirName = ""test"";
		OpenFileModel openFileModel = new OpenFileModel(""localhost"", 8080, testDirName, ""Test file to view"", ""TEST"", ""test.txt"");
		String testTitle = ""Test File to view"";
		String testName = ""test.exe"";
		String testTitleName = ""Test File to view"";
        
		String testFilePath = ""file://"" + testFileName;
        String testDirPath = ""file://"" + testDirName;
        
		OpenFileDialog openFileDialog = new OpenFileDialog(openFileModel, chooseFileAction(), selectIndexTypeListener(), indexFileAction());
                
        assertNotNull(selectIndexTypeListener());
		assertNotNull(selectIndexTypeListener().getSelectedType());
		assertNotNull(selectIndexTypeListener().getSelectedPath());
				   
		ResourceBundle bundle = getClass().getClassLoader().getResourceAsStream(""com.mycompany.samples.model.customize.bundles.configuration.TestFileSystemView.properties"");
		assertNotNull(bundle);        
		String systemBundle = openFileDialog.openFile(bundle, testFilePath);
		assertNotNull(systemBundle);
		assertNotNull(systemBundle);
		assertEquals(testDirPath, systemBundle);
        
        assertNotNull(selectIndexTypeListener().getSelectedType());
        assertNotNull(selectIndexTypeListener().getSelectedPath());
        
	}

}
"
9094be22-5ab9-48f6-a589-db9a0961a5c1,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/io/LineReader_0Test.java,58.44279146194458,stop,"// LineReader.java
package fr.pingtimeout.jtail.io;

import fr.pingtimeout.jtail.io.index.FileIndex;
import fr.pingtimeout.jtail.util.JTailLogger;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;

/**
 * TODO PLA : commenter.
 *
 * @author Pierre Laporte
 *         Date: 7 avr. 2010
 */
public class LineReader {

    public String readLine(int lineNumber) throws IOException {
        this.randomAccess.seek(this.index.getOffsetOfLine(lineNumber));
        if (this.randomAccess.getFilePointer() == this.randomAccess.length()) {
            return """";
        } else {
            return this.randomAccess.readLine();
        }
    }
}
","// LineReader_0Test.java
package fr.pingtimeout.jtail.io;

import fr.pingtimeout.jtail.io.index.FileIndex;
import fr.pingtimeout.jtail.util.JTailLogger;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link LineReader}.
* It contains one unit test case for the {@link LineReader#readLine(int)} method.
*/
class LineReader_0Test {","// LineReader_0Test.java
package fr.pingtimeout.jtail.io;

import fr.pingtimeout.jtail.io.index.FileIndex;
import fr.pingtimeout.jtail.util.JTailLogger;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link LineReader}.
* It contains one unit test case for the {@link LineReader#readLine(int)} method.
*/
class LineReader_0Test {
 
	private final FileIndex index = FileIndex.getIndex(1);

	String s1 = ""louie"";
	String s2 = ""coucoun"";
	String s3 = ""LOUIE"";
	String s4 = ""COOUR"";
	String s5 = ""LOU\x00"";
	
	/**
	* Tests readLine(int) method of the {@link LineReader}.
	*/

	@Test
    public void testReadLine_1() throws FileNotFoundException, IOException, Exception {
		//Test
        File f = new File(""samples/files_0"");
        f.mkdir();
        assertTrue(f.isDirectory());
        File targetFile = new File(""samples/files_1"");
        assertTrue(targetFile.isDirectory());
        initTargetFile(targetFile);
        try {
            List<String> res1 = new ArrayList<>();
            JTailLogger.getLogger().setLevel(JTailLogger.LOG_LEVEL_ENUM.ERROR);
            List<String> res2 = LineReader.readTargetFile(f, this.index);
            assertEquals(res1, res2);
        } catch (Exception e) {
            fail(e.getMessage());

        } finally {
            JTailLogger.getLogger().setLevel(JTailLogger.LOG_LEVEL_ENUM.DEFAULT);
            f.setOwnerOnly();
            f.delete();
        }


    }
    
    /**
    * Test of initTargetFile to initialize the directory and input file.
    */

	@Test
    public void testInitTargetFile_0() throws FileNotFoundException, IOException, Exception {
		//Test
        File f = new File(""samples/files_0"");
        f.mkdir();
        assertTrue(f.isDirectory());
        File targetFile = new File(""samples/files_1"");
        assertTrue(targetFile.isDirectory());
        initTargetFile(targetFile);
        try {
            List<String> res1 = new ArrayList<>();
            JTailLogger.getLogger().setLevel(JTailLogger.LOG_LEVEL_ENUM.ERROR);
            List<String> res2 = LineReader.readTargetFile(f, this.index);
            assertEquals(res1, res2);
        } catch (Exception e) {
            fail(e.getMessage());

        } finally {
            JTailLogger.getLogger().setLevel(JTailLogger.LOG_LEVEL_ENUM.DEFAULT);
            f.setOwnerOnly();
            f.delete();
        }
        
    }

    private void initTargetFile(File targetFile) throws FileNotFoundException, IOException, Exception {
        targetFile.createNewFile();
        targetFile.setOwnerOnly();
        targetFile.deleteOnExit();
    }
	
    private void assertTargetFileIsExist(File file) {
        assertTrue(file.exists() || file.isDirectory());
    }
}
"
7ed47033-3c62-4fda-84ae-000fc2e59342,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/io/LineReader_1Test.java,55.61583185195923,length,"// LineReader.java
package fr.pingtimeout.jtail.io;

import fr.pingtimeout.jtail.io.index.FileIndex;
import fr.pingtimeout.jtail.util.JTailLogger;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;

/**
 * TODO PLA : commenter.
 *
 * @author Pierre Laporte
 *         Date: 7 avr. 2010
 */
public class LineReader {

    public List<String> readBlock(int fromLine, int toLine) throws IOException {
        final int nbLines = toLine - fromLine;
        final List<String> result = new ArrayList<String>();
        final long fileLength = this.randomAccess.length();
        this.randomAccess.seek(this.index.getOffsetOfLine(fromLine));
        for (int i = 0; i < nbLines; i++) {
            final String line;
            if (this.randomAccess.getFilePointer() == fileLength) {
                line = """";
                result.add(line);
                break;
            } else {
                line = this.randomAccess.readLine();
                result.add(line);
            }
        }
        return result;
    }
}
","// LineReader_1Test.java
package fr.pingtimeout.jtail.io;

import fr.pingtimeout.jtail.io.index.FileIndex;
import fr.pingtimeout.jtail.util.JTailLogger;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link LineReader}.
* It contains one unit test case for the {@link LineReader#readBlock(int, int)} method.
*/
class LineReader_1Test {","// LineReader_1Test.java
package fr.pingtimeout.jtail.io;

import fr.pingtimeout.jtail.io.index.FileIndex;
import fr.pingtimeout.jtail.util.JTailLogger;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link LineReader}.
* It contains one unit test case for the {@link LineReader#readBlock(int, int)} method.
*/
class LineReader_1Test {

    @Test
    /**
     * Test with a test file and line ending ("".a"").
     * All values should be in the range of 0x55 -> 0x1f.
     * 
     * @throws IOException
     * @throws IOException
     */
    public void testWithA() throws FileNotFoundException {
        final FileIndex testFile = LineReader.readSourceFile(0x1f, 8, ""a"");
        assertNotNull(testFile);
        assertTrue(testFile.hasText());
        assertTrue(JTailLogger.isOkLogged(testFile));
        
        final List<String> line = new ArrayList<String>();
        final int nbLines = testFile.getNumberOfLines();
        final List<String> output = new ArrayList<String>();
        for (int linei = 0; linei < nbLines; linei++) {
            final RandomAccessFile raf = new RandomAccessFile(testFile.getLine(linei), ""r"");
            final String line = raf.readLine();
            assertNotNull(line);
            raf.close();
            line.split(""\t"").forEach(output::add);
            assertEquals(line, expectedArray(String.valueOf(0x55)));
            r.reset();
        }
        
        final byte[] expectedArray = new byte[] {0x55, 0x11, 0x11, 0xff, 0x11};
        assertArrayEquals(expectedArray, output.toArray());
        
        testFile.close();
    }

    @Test
    /**
     * Test with a test file and line ending ("".a"" or null.
     * All values should be in the range of 0x55 -> 0x1f.
     * 
     * @throws IOException
     * @throws IOException
     */
    public void testWithBoth() throws FileNotFoundException {
        final File indexFile = LineReader.readSourceFile(0x1f, 8, ""a"");
        assertNotNull(indexFile);
        assertTrue(indexFile.hasText());
        assertTrue(JTailLogger.isOkLogged(indexFile));
        
        final List<String> line = new ArrayList<String>();
        final int nbLines = indexFile.getNumberOfLines();
        final List<String> output = new ArrayList<String>();
        for (int linei = 0; linei < nbLines; linei++) {
            final RandomAccessFile raf = new RandomAccessFile(indexFile.getLine(linei), ""r"");
            final String line = raf.readLine();
            assertNotNull(line);
            raf.close();
            line.split(""\t"").forEach(output::add);
            assertEquals(line, expectedArray(String.valueOf(0x55)));
            r.reset();
        }
        
        final byte[] expectedArray = new byte[] {0x11, 0x11, 0x11, 0xff, 0x11};
        assertArrayEquals(expectedArray, output.toArray());
        
        indexFile.close();
    }
    
    /**
     * Test with an invalid file and line ending ("".a"").
     * All values should be in the range of 0x55 -> 0x1f.
     * 
     * @throws Exception
     */
    @Test
    public void testWithAnInvalidLineEnding() throws Exception {
        final File indexFile = LineReader.readSourceFile(0x1f, 8, ""a"");
        assertNotNull(indexFile);
        assertTrue(indexFile.hasText());

        final List<String> line = new ArrayList<String>();
        final int nbLines = indexFile.getNumberOfLines();
        for (int linei = 0; linei < nbLines; linei++) {
            final RandomAccessFile raf = new RandomAccessFile(indexFile.getLine(linei), ""r"");
            final String line = raf.readLine();
            assertNotNull(line);
            raf.close();
            line.split(""\t"").forEach(line);
            assertTrue(line.length() <= 3);
            r.reset();
        }
        
        final byte[] expectedArray = new byte[] {0x11, 0x11, 0x11, 0xff, 0x11};
        assertArrayEquals(expectedArray, line.toArray());
        
        indexFile.close();
    }

    @Test
    /**
     * Test without an index file.
     * 
     * @throws Exception
     */
    public void testWithoutIndexFile() throws Exception {
        final File indexFile = new File(
            new File(new File(System.getProperty(""java.io.tmpdir""), ""temp""), "".jtail""));
        assertNotNull(indexFile);
        
        System.setProperty(""java.io.tmpdir"", """"); /* to avoid the default directory */
        final List<String> line = new ArrayList<String>();
        final int nbLines = 0x1f - 16;
        for (int linei = 0; linei < nbLines; linei++) {
            final RandomAccessFile raf = new RandomAccessFile(indexFile.getLine(linei), ""r"");
            final String line = raf.readLine();
            assertNotNull(line);
            raf.close();
            line.split(""\t"").forEach(line);
            assertTrue(line.length() <= 3);
            r.reset();
        }
    }

    private void assertArrayEquals(final byte[] expected, final byte[] actual) {
        assertTrue(expected.length == actual.length);
        for (int i = 0; i < expected.length; i++) {
            final byte expectedChar = (byte) expected[i];
            final byte actualChar = (byte) actual[i];
            assertEquals(expectedChar, actualChar);
            assertEquals(0x1f, (byte) (expectedChar & 0x1f));
        }
    }

    private void assertNotNull(final Object actual) {
        assertNotNull(String.valueOf(actual));
    }

    private String expectedArray(final String str) {
        final String expected = str.substring(0, 3);
        return expected;
    }
    "
