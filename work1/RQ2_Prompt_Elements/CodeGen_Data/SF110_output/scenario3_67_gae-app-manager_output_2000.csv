ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
11303429-af43-451d-a756-94e18cec9b51,/EvoSuiteBenchmark/original/67_gae-app-manager/src/main/java/net/sf/gaeappmanager/google/appengine/Manager.java,62.44586420059204,stop,"// Manager.java
package net.sf.gaeappmanager.google.appengine;

import net.sf.gaeappmanager.google.LogonHelper;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

/**
 * Google App Engine application manager.
 *
 * @author Alois Belaska
 */
public class Manager {

    /**
     * Retrieve quota details of application deployed in Google App Engine.
     *
     * @param userid full gmail address for user
     * @param password gmail account password
     * @param source name of application requesting quota details
     * @param application appspot application name
     * @return quota details of application
     * @throws Exception in case of failure
     */
    public static QuotaDetails retrieveAppQuotaDetails(String userid, String password, String source, String application) throws Exception;
}
","// ManagerTest.java
package net.sf.gaeappmanager.google.appengine;

import net.sf.gaeappmanager.google.LogonHelper;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Manager}.
* It contains one unit test case for the {@link Manager#retrieveAppQuotaDetails(String, String, String, String)} method.
*/
class ManagerTest {","// ManagerTest.java
package net.sf.gaeappmanager.google.appengine;

import net.sf.gaeappmanager.google.LogonHelper;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Manager}.
* It contains one unit test case for the {@link Manager#retrieveAppQuotaDetails(String, String, String, String)} method.
*/
class ManagerTest {

    // Test methods
    private final DefaultHttpClient client = new DefaultHttpClient();

	@Test
	public void testRetrieveAppQuotaDetails() throws Exception {
		
		// test Google App Engine client
        assertEquals(LogonHelper.get().getAccountType(), AppEngineManager.get().getUserInfo().getAccountType());
        
        HttpGet method = new HttpGet(AppEngineManager.get().getUserInfo().getAppend(""Quota.metrics""));
        
        // execute the GET
        HttpResponse response;
        try {
            response = (HttpResponse)client.execute(method);
        }
        catch(Exception e) {
            e.printStackTrace();
            return;
        }
        
        HttpResponse getResponse = (HttpResponse)client.execute(method);
        // check size of response
		assertEquals(200, getResponse.getStatusLine().getStatusCode());
		
		assertTrue(""Response from google app engine is valid"", response.hasEntity());

		assertEquals(""200 OK"", response.getStatusLine().toString());
		
		// we can read the information from http response
		// and can determine the expected values, we are not interested in the information
		LogonHelper.get().resetAccount(AppEngineManager.get().getUserInfo().getEmail());
		LogonHelper.get().resetAccount(AppEngineManager.get().getUserInfo().getPassword());
				
        // retrieve the quota details from google app engine
        QuotaDetails details = manager.retrieveAppQuotaDetails(AppEngineManager.get().getUserInfo().getEmail(), AppEngineManager.get().getUserInfo().getPassword(), ""GAAppEngine"", ""Gaa"");
        // check if the correct amount of information was extracted
        assertEquals(AppEngineManager.get().getUserInfo().getEmail(), details.getAppend(""Email""));
        assertEquals(AppEngineManager.get().getUserInfo().getPassword(), details.getAppend(""Password""));
        assertEquals(1, details.getCount().longValue());
	}
}"
7d7e60d4-6d54-4699-8262-8ff7c39c9c75,/EvoSuiteBenchmark/original/67_gae-app-manager/src/main/java/net/sf/gaeappmanager/google/LogonHelper.java,51.35521340370178,stop,"// LogonHelper.java
package net.sf.gaeappmanager.google;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.util.ArrayList;
import java.util.List;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.cookie.Cookie;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.protocol.HTTP;

/**
 * Google login helper.
 *
 * Based on work of Cheers Geoff.
 *
 * http://groups.google.com/group/google-appengine
 * -java/browse_thread/thread/c96d4fff73117e1d?pli=1
 *
 * @author Alois Belaska
 */
public class LogonHelper {

    /**
     * Returns the ACSID string to be set as the Cookie field in the request
     * header.
     *
     * @param userid full gmail address for user
     * @param password password
     * @param source name of application requesting quota details
     * @return the ACSID field value
     * @throws Exception if any error occurs getting the ACSID
     */
    public static String loginToGoogleAppEngine(String userid, String password, String source) throws Exception;
}
","// LogonHelperTest.java
package net.sf.gaeappmanager.google;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.util.ArrayList;
import java.util.List;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.cookie.Cookie;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.protocol.HTTP;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link LogonHelper}.
* It contains one unit test case for the {@link LogonHelper#loginToGoogleAppEngine(String, String, String)} method.
*/
class LogonHelperTest {","// LogonHelperTest.java
package net.sf.gaeappmanager.google;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.util.ArrayList;
import java.util.List;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.cookie.Cookie;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.protocol.HTTP;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link LogonHelper}.
* It contains one unit test case for the {@link LogonHelper#loginToGoogleAppEngine(String, String, String)} method.
*/
class LogonHelperTest {

	/** logon to google app engine function.
	 * @param userid full gmail address for user
	 * @param password password
	 * @param source name of application requesting quota details
	 * @throws Exception if any error occurs executing the {@link LogonController#loginToGoogleAppEngine(String, String, String)} method.
	 */
	@Test
	void loginToGoogleAppEngine() throws Exception {
		String source = ""Google App Engine"";
		String userid = ""user1"";
		String password = ""passwd1"";
		String token = LogicController.loginToGoogleAppEngine(userid, password, source);
		LogicController.deleteLogon(userid, token);
	}
	
	
	/**  Tests Get the URL by the method {@link LogonController#loginToGoogleAppEngine(String, String, String)} method.
	 * 
	 * **************
	 * 
	 * @throws Exception if any error occurs.
	 */
	@Test
	void getURL()  throws Exception {
		String userid = ""user1"";
		String password = ""passwd1"";
		String token = LogicController.loginToGoogleAppEngine(userid, password);
		String url = LogicController.getUrlByLogon(userid, token);
		assertTrue(url!= null);
	}
		
	@Test
	void postForm() throws Exception {
		String postForm = ""{\""user\"":{\""email\"":\""test@example.com\""},\""password\"":\""user2\""}"";
		List<NameValuePair> postFormParams = new ArrayList<NameValuePair>();
		postFormParams.add(new BasicNameValuePair(""user"", ""user1""));
		postFormParams.add(new BasicNameValuePair(""password"", ""user2""));
		assertNotNull(LogicController.postForm(postForm, postFormParams));
	}
	
	
	/**
	 * Tests the URL of the method {@link #PostLogon(String, String, String)} that
	 * is given in a logon to Google AppEngine request
	 * by the client.
	 * 
	 * @throws Exception if any error occurs.
	 */
	@Test
	void testPostLogonByGmailApp() throws Exception {
		String userid = ""user1"";
		String password = ""passwd1"";
		LogonController.loginToGoogleAppEngine(userid, password);
	}
	
	/**
	 * Tests {@link #PostLogon(String, String, String) PostLogon} that
	 * is given in a logon to Google AppEngine request.
	 *
	 * @throws Exception if any error occurs.
	 */
	@Test
	void testPostLogonByGmail() throws Exception {
		String userid = ""user1"";
		String password = ""passwd1"";
		LogonController.loginToGoogleAppEngine(userid, password);
	}

	public static String loginToGoogleAppEngine(String userid, String password) throws Exception {
		String uriString = ""http://www.google.com"";
		return loginToGoogleAppEngine(userid, password, uriString);
	}
	
}
"
