ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
3bc62b58-e4bf-4fde-a17d-7882d76acec7,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_0Test.java,32.60560941696167,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create an application model.
     *
     * @return a new application model
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public JTailMainModel jTailMainModel();
}
","// ApplicationConfiguration_0Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#jTailMainModel()} method.
*/
class ApplicationConfiguration_0Test {","// ApplicationConfiguration_0Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#jTailMainModel()} method.
*/
class ApplicationConfiguration_0Test {

	@Test
    public void testApplicationModel(){
		
    	JTailMainModel model = ApplicationConfiguration.jTailMainModel();
    	assertNotNull(model);
	}
		
	@Test
    public void testApplicationModelLoadResource(){
	
		ResourceBundle bb = ResourceBundle.getBundle(""resourcesBundle"");
		
		assertEquals(""testTitle"", bb.getString(""application.title""));
		assertEquals(""0 test"", bb.getString(""application.entry1""));
		assertEquals(""0 test"", bb.getString(""application.entry2""));
	}
	
	@Test
	public void testApplicationModelLoadResourceFail(){
		
		OpenFileModel model = new OpenFileModel();
		
		try {
			ApplicationConfiguration.jTailMainModel().loadEntity(model, ""not found"", OpenFileDialog.NEW_ENTRY);
		} catch (IllegalArgumentException e) {
			//exception expected
		}
	}
	
	@Bean
	@Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.TARGET_CLASS)
	public JTailMainModel jTailMainModel(){
		
		JTailMainModel model = new JTailMainModel();
		model.addController(new JTailJScrollController());
		model.addController(new SelectIndexTypeListener());
		model.addModel(new JTailMainModel.MutableListModel());
		model.getModel().addController(new ViewActionController());
		model.getModel().addListener(new SelectIndexTypeListener());
		return model;
	}
	
}
"
5bacfce0-1f62-4db3-b0f9-5679f07da747,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_1Test.java,55.44848990440369,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create an ""open file"" model.
     *
     * @return a new ""open file"" model
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public OpenFileModel openFileModel();
}
","// ApplicationConfiguration_1Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#openFileModel()} method.
*/
class ApplicationConfiguration_1Test {","// ApplicationConfiguration_1Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#openFileModel()} method.
*/
class ApplicationConfiguration_1Test {
/**
    * <p>test_applicationConfiguration_1Test</p>
    * This class runs {@link ApplicationConfiguration#openFileModel()} method with a
    * configuration that contains only the {@link javax.swing.JTailMainFrame},
    * {@link javax.swing.JTailMainFrame} and {@link 

    * SelectIndexTypeListener}.

    * <ul>
    * <li>with <b>{@link JTailMainFrame#SETTINGS_ID}</b> configuration value
    * to set the model to the <b>
    * JTailMainFrame#SETTINGS_ID</b> settings, which was loaded by one of the
    * {@link JTailMainFrame}s before this class.
    * </li>
    * <li>with <b>
    * {@link JTailMainFrame#PROPERTY_SETTINGS_ID}</b> configuration value to
    * set the <b>
    * JTailMainFrame#PROPERTY_SETTINGS_ID</b> to {@link
    * JTailMainFrame#SETTINGS_ID}, resulting from the combination of the two
    * two <b>
    * JTailMainFrame</b> configurations.</li>
    * </ul>
  A) with <b>{@link JTailMainFrame#SETTINGS_ID}</b> to <b>SETTINGS_ID</b> and
  <b>
{@link JTailMainFrame#PROPERTY_SETTINGS_ID}</b> to
{@link JTailMainFrame#PROPERTY_SETTINGS_ID}
  </li>
  </ul>

  A) with <b>{@link JTailMainFrame#PROPERTY_SETTINGS_ID}</b> to
  <b>SETTINGS_ID</b> and <b>
{@link JTailMainFrame#PROPERTY_SETTINGS_ID}</b> to
{@link JTailMainFrame#SETTINGS_ID</b>
  </ul>

  */
		@Test
		public void test_applicationConfiguration_1Test(OpenFileModel expected) {
		final JTailMainModel model = JTailMainFrame.getInstance().openFileModel();

			assertNotNull(""Model must not be null"", model);
			assertEquals(""Model must contain settings"", 1,
					model.settingCount());
			assertEquals(""Model must contain settings for "" + OpenFileDialog.ID,
					OpenFileDialog.ID,
					model.getSettingsID());
			}
		}

// ApplicationConfiguration_2Test.java"
ababa3d2-be19-4a12-ab24-4d5b5d0a9026,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_2Test.java,35.88488960266113,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create the ""file"" menu action that will be used by menus and buttons.
     *
     * @return a new ""file"" menu action
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public MenuAction fileMenuAction();
}
","// ApplicationConfiguration_2Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#fileMenuAction()} method.
*/
class ApplicationConfiguration_2Test {","// ApplicationConfiguration_2Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#fileMenuAction()} method.
*/
class ApplicationConfiguration_2Test {

	static JTailMainModel model;
    
	@BeforeAll
	public static void setUp() {
		model = new JTailMainModel();
		model.setShowIndexType(false);
	}
	
	@Test
	public void testInit() {
		BeanDefinition bd = new FileMenuActionBeanDefinition();
        fd = new OpenFileDialog(model)
        	.setUseIndexTypeEditor(true);
        
        fd.setSelectIndexTypeListener(new SelectIndexTypeListener(model));
        
        fd.setActiveFileModel(new OpenFileModel(ResourceBundle.getBundle(""bundle"")));
		
		assertTrue(model.isInitialised());
        
		assertTrue(fd.isDisplayed());
	}

	@Test
	public void testFileMenu() {
    	assertTrue(model.getOpenFileModel().isDisplayed());
	}

	@Test
	public void testInitAfterDispose() {
		model.closeFileMenu();
		assertTrue(model.isDisposed());
	}

    BeanDefinition fd;
    

    @Configuration
    public static class FileMenuActionBeanDefinition {
        
    	@Bean(name = ""openFileModel"")
    	public OpenFileModel openFileModel() {
    		return new OpenFileModel();
    	}
    }
    
    @Configuration
    public static class OpenFileMenuActionBeanDefinition extends OpenFileMenuActionBeanDefinition {
		
		@Bean(name = ""fileMenu"")
		public FileMenuAction openFileMenu() {
			return new FileMenuAction();
		}
    }
}

// ApplicationConfiguration_2TestWithScoping.java
"
961626d2-2446-4be2-9ebf-8e6f9c30aa74,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_3Test.java,53.64873242378235,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create the ""tools"" menu action that will be used by menus and buttons.
     *
     * @return a new ""tools"" menu action
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public MenuAction toolsMenuAction();
}
","// ApplicationConfiguration_3Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#toolsMenuAction()} method.
*/
class ApplicationConfiguration_3Test {","// ApplicationConfiguration_3Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#toolsMenuAction()} method.
*/
class ApplicationConfiguration_3Test {

	/**
	* Test method.
	*/
	@Test
	public void testLauncherMenuActionConstructor() {
		new JTailMainFrame( new JTailMainModel(), new SelectIndexTypeListener());
		assertNotNull(ApplicationConfiguration.toolsMenuAction());
	}

        /**
	* Test method.
	*/
	@Test
	public void testLauncherMenuActionWithSelectedIndex() {
        OpenFileDialog fileDialog=new OpenFileDialog(ResourceBundle.getBundle(""java.bundle"",JTailMainFrame.BUNDLE_NAME),JTailMainFrame.SELECT_FILE_ACTION_ID);
        fileDialog.setVisible(true);
        assertNotNull(ApplicationConfiguration.toolsMenuAction().getExecutionMenu().getAction(fileDialog));

	}

        /**
	* Test method.
	*/
	@Test
	public void testlauncherMenuActionWithNullAction() {
        OpenFileDialog fileDialog=new OpenFileDialog(ResourceBundle.getBundle(""java.bundle"",JTailMainFrame.BUNDLE_NAME),JTailMainFrame.UNSELECTED_ACTION_ID);
        fileDialog.setVisible(true);
        assertNotNull(ApplicationConfiguration.toolsMenuAction().getExecutionMenu().getAction(fileDialog));

	}

        /**
	* Test method.
	*/
	@Test
	public void testlauncherNoAction() {
		OpenFileDialog fileDialog=new OpenFileDialog(ResourceBundle.getBundle(""java.bundle"",JTailMainFrame.BUNDLE_NAME),JTailMainFrame.TEXT_ACTION_ID);
		fileDialog.setVisible(true);
        assertNull(ApplicationConfiguration.toolsMenuAction().getExecutionMenu().getAction(fileDialog));
		
	}
	
}"
d8cce8f1-f9b5-4e05-b38e-351e0e2d2f9b,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_4Test.java,46.011327028274536,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create the ""choose a file"" action that will be used by menus and buttons.
     *
     * @return a new ""choose a file"" action
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public ChooseFileAction chooseFileAction();
}
","// ApplicationConfiguration_4Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#chooseFileAction()} method.
*/
class ApplicationConfiguration_4Test {","// ApplicationConfiguration_4Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#chooseFileAction()} method.
*/
class ApplicationConfiguration_4Test {
private static ResourceBundle i18n = ResourceBundle.getBundle(applicationConfiguration.class.getCanonicalName());
	private static OpenFileDialog fileDialog = new OpenFileDialog(false, i18n.getString(""open""));
	private static JTailMainFrame panel;
	@Test
	void should_add_the_tool_for_file_selection() {
		// Given:
		OpenFileModel file = new OpenFileModel(fileDialog.getFile());

		// And:
		panel = new JTailMainFrame(""test"");
		panel.setLocationRelativeTo(null);

		// When:
		OpenFileDialog openFileDialogBeforeAddingToolForFileSelection = fileDialog.getOpenFileDialog();
		assertEquals(""open"", openFileDialogBeforeAddingToolForFileSelection.getSelectedFile());
	}
	@Test
	void should_not_run() {
		// When:
		panel.run();
		
		// Then:
		assertNull(""run() method is not called"", panel.getRun());
	}
	
	@Test
	void should_change_the_tool_for_file_selection() {
		// Given:
		OpenFileModel file = new OpenFileModel(fileDialog.getFile());

		// And:
		panel = new JTailMainFrame(""test"");
		panel.setLocationRelativeTo(null);

		// When:
		OpenFileDialog openFileDialogBeforeChangingToolForFileSelection = fileDialog.getOpenFileDialog();
		assertEquals(""open"", openFileDialogBeforeChangingToolForFileSelection.getSelectedFile());
	}

	@Test
	void should_select_the_specified_index_type() {
		// Given:
		javax.swing.JTailMainModel.IndexType indexTypeBefore = JTailMainModel.IndexType.values()[0];
		JTailMainModel.IndexType indexTypeAfter = JTailMainModel.indexType(indexTypeBefore.getCamelCase(indexTypeBefore.getCamelCase(indexTypeBefore)));
		
		// And:
		ResourceBundle i18n = ResourceBundle.getBundle(applicationConfiguration.class.getCanonicalName());
		OpenFileModel file = new OpenFileModel(fileDialog.getFile());
		assertTrue(""Should be a File"", file.getType() == OpenFileModel.TYPE);
		
		// When:
		OpenFileDialog openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase = fileDialog.getOpenFileDialog();
		assertEquals(""open"", openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getSelectedFile());
		assertEquals(""MyType"", openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getIndexType());
		assertEquals(indexTypeAfter.getCamelCase(indexTypeAfter.getCamelCase(indexTypeAfter)), openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getIndexType().getCamelCase(openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getCamelCase(openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getCamelCase(openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getCamelCase(openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getCamelCase(openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getCamelCase(openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getCamelCase(openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getCamelCase(openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getCamelCase(openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getCamelCase(openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getCamelCase(openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getCamelCase(openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getCamelCase(openFileDialogAfterSelectingTheSpecifiedIndexTypeByCamelCase.getCamelCase(indexTypeAfter.getCamelCase(indexTypeAfter))))
)
	}
}"
877c7e68-4aca-4e68-a719-d655bb433879,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_5Test.java,53.84305000305176,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create the ""select index type"" action that will be used by menus and buttons.
     *
     * @return a new ""select index type"" action
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public SelectIndexTypeListener selectIndexTypeListener();
}
","// ApplicationConfiguration_5Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#selectIndexTypeListener()} method.
*/
class ApplicationConfiguration_5Test {","// ApplicationConfiguration_5Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#selectIndexTypeListener()} method.
*/
class ApplicationConfiguration_5Test {

	/**
	 * Create the ""select index type"" action that will be used by menus and buttons.
	 */	
	@Bean
	@Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
	public SelectIndexTypeListener selectIndexTypeListener(){
		
		int indexType = 1;
		
		return new SelectIndexTypeListener("""", indexType);

		
	}
	
	/** 
	 * Test the JTailMainFrame creation.
	 */	
	@Test
	public void testJTailMainFrame(){
		
		ApplicationConfiguration applicationConfiguration = this.getConfiguration();
		
		// get JTailMainFrame from config using bean id ""jail-main-frame""
		ApplicationConfiguration.BeanDefinition beanDefinition = (ApplicationConfiguration.BeanDefinition) applicationConfiguration.getScope().getChildNodes()[0];
		JTailMainFrame mainFrame = (JTailMainFrame) beanDefinition.getBean();
		
		// assert JTailMainFrame created successfully
		assertNotNull(mainFrame);
	
	}
	
	/**
	 * Test the JTail main Model creating.
	 */	
	@Test
	public void testJTailMainModel(){

		ApplicationConfiguration applicationConfiguration = this.getConfiguration();
		
		// get JTailMainModel from config using bean id ""jail-main-model""
		ApplicationConfiguration.BeanDefinition beanDefinition = (ApplicationConfiguration.BeanDefinition) applicationConfiguration.getScope().getChildNodes()[0];
		JTailMainModel mainModel = (JTailMainModel) beanDefinition.getBean();
				
		// assert JTailMainModel created successfully
		assertNotNull(mainModel);

	}
	
	/**
	 * Test the OpenFileDialog creation.
	 */	
	@Test
	public void testOpenFileDialog(){
		
		ApplicationConfiguration applicationConfiguration = this.getConfiguration();
		
		// get OpenFileDialog from config using bean id ""OpenFileDialog""
		javax.swing.JFileChooser options = (javax.swing.JFileChooser) applicationConfiguration.getBeans().get( ""openFileDialog"" ).getBean();
		
		// assert OpenFileDialog created successfully
		assertNotNull(options);
		
	}
	
	/**
	 * Test the ResourceBundle creation.
	 */	
	@Test
	public void testResourceBundle(){
		
		ApplicationConfiguration applicationConfiguration = this.getConfiguration();
		
		String key = ""fr.pingtimeout.jtail.configuration.ApplicationConfiguration.ApplicationConfiguration.jail-main-frame"";
		String value = applicationConfiguration.getScope().getChildNodes()[0].getString(""jail-main-frame"");
		
		// check if key created successfully
		assertTrue(key.equals(value));
		
	}
	
	/**
	 * Test the Constructor.
	 */	
	@Test
	public void testClasses(){
		
		String className = ApplicationConfiguration.class.getCanonicalName();
		
		// get ResourceBundle
		ResourceBundle.clearCache();
		ResourceBundle.setDefaultEncoding(""UTF-8"");
		ResourceBundle.getBundle(className);
		
		// assert ResourceBundle was not cached
		assertNotNull(ResourceBundle.getBundle(className));
	
	}
	
	/**
	 * Get a configuration from the bean and return it.
	 */	
	private ApplicationConfiguration getConfiguration(){
		
		ApplicationConfiguration applicationConfiguration = (ApplicationConfiguration) ResourceBundle.getBundle(ApplicationConfiguration_5Test.class.getPackage().getName()).get(""applicationConfiguration"");
		
		return applicationConfiguration;	
		
	}
}"
ea2bd1a6-7179-4b6f-8a5d-013157d3e8d2,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_6Test.java,54.002920627593994,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create the ""index file"" action that will be used by menus and buttons.
     *
     * @return a new ""index file"" action
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public IndexFileAction indexFileAction();
}
","// ApplicationConfiguration_6Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#indexFileAction()} method.
*/
class ApplicationConfiguration_6Test {","// ApplicationConfiguration_6Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#indexFileAction()} method.
*/
class ApplicationConfiguration_6Test {

    @Test
    public void indexFileAction() {
        BeanDefinition indexFileAction = new BeanDefinition();
        indexFileAction.setBeanClass(IndexFileAction.class);
        indexFileAction.setBeanName(""indexFileAction"");
        
        IndexFileAction indexFileActionCasted = new IndexFileAction();
        assertThat(indexFileAction).isNotNull();
        assertThat(indexFileActionCasted.getIndexAction()).isNotNull();
        
        BeanDefinition actionToBeCasted = 
        		new BeanDefinition(
        				indexFileAction.getBeanClass(""),
        				new String[]{""indexFileAction""});
        
        assertThat(indexFileActionCasted.getBeanClass(true)).isSameAs(actionToBeCasted.getBeanClass());
    }
    
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public JTailMainModel mainModel(){
        return JTailMainModel.create().createModel();
    }
    
    @Bean
    @Scope(value = BeanDefinition.SCOPE_PROTOTYPE, proxyMode = ScopedProxyMode.NO)
    public JTailMainFrame mainFrame(){
        JTailMainFrame mainFrame = new JTailMainFrame(mainModel());
        mainFrame.setTitle(""PingTimeout Test"");
        return mainFrame;
    }
    
    @Bean
    public ResourceBundle resourceBundle() {
        return new ResourceBundle();
    }
    
    @Bean()
    @Scope(value = BeanDefinition.SCOPE_PROTOTYPE, proxyMode = ScopedProxyMode.NO)
    public OpenFileDialog openFileDialog() {
        return new OpenFileDialog();
    }
    
    @Bean(name=""myHandler"")
    public SelectIndexTypeListener myHandler(){
        return new SelectIndexTypeListener();
    }
}"
fefcf3cf-95af-4ada-be5b-ca07fabc1a4c,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_7Test.java,54.12526035308838,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create the ""open"" action that will be used by menus and buttons.
     *
     * @return a new ""open"" action
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public OpenFileAction openAction();
}
","// ApplicationConfiguration_7Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#openAction()} method.
*/
class ApplicationConfiguration_7Test {","// ApplicationConfiguration_7Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#openAction()} method.
*/
class ApplicationConfiguration_7Test {
private FrameworkApplication frameworkApplication = new FrameworkApplication(new FrameworkConfiguration());
	private static final String APPLICATION_CONFIG = "".application.properties"";
	private static final String PLUGINS_PACKAGE = "".plugins.json"";
	private static final String RESOURCES_PACKAGE = "".resources.json"";
	private static final String PROPERTIES_PACKAGE = "".properties.json"";

	private final FrameworkConfiguration frameworkConfiguration = frameworkApplication.getConfiguration();
	private final FrameworkFramework framework = frameworkApplication.getFramework();
	private final JTailMainModel m = framework.getFrameHandler().getMainModel();
	private final OpenFileModel openFileModel = m.getOpenFileModel();

	@Test
	void testOpenAction() throws Exception {
		assertNotNull(openAction());
	}

	@Test
	void testOpenFile() throws Exception {
		final SelectIndexTypeListener listener = new SelectIndexTypeListener<OpenFileModel>();
		openFileModel.addListener(listener);
		ListSelectDialog dialog = new ListSelectDialog();
		dialog.setModel(listOpenFile());
		dialog.show();

		assertTrue(!listener.isSelected());
        assertEquals(2, openFileModel.getEntries().size());
        assertEquals(OpenFileType.SELECTION_TYPE_OPENFILE, openFileModel.getSelectedType());
        assertTrue(!listener.wasClicked());
	}

	@Test
	void testOpenFileDialog(){
		doTestOpenFile(frameworkConfiguration);
	}
	
	@Test
	void testOpenTempFile(){
		FrameworkConfiguration jtplConfig = new FrameworkConfiguration(""jtpl-test"");
		FrameworkMainMainModel jtplMainModel = framework.getFrameHandler().getMainModel(jtplConfig);
		OpenFileDialog dialog = newOpenTempFilePanel();
		dialog.setModel(jtplMainModel);
		dialog.show();
		return;
	}
	
	protected void doTestOpenFile(FrameworkConfiguration configuration){
		assertNotNull(openFileModel);
	}
	
	// TODO : the property that should be created by default the first entry of the file selection combo box if not exists -> need to edit this one.
	protected OpenFileDialog newOpenTempFilePanel(){
		String propertyFileContent1 = frameworkConfiguration.getFrameworkDefaultConfig().getPropertyProvider().loadResourceByKey(""tests.properties.file.properties"", PLUGINS_PACKAGE).getProperty(""propertyFileContent"");
		
		return new OpenFileDialog();
	}
}
"
cb97fc20-aafd-40d3-887b-0b7a7d761a76,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_8Test.java,54.15467166900635,length,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create the ""close"" action that will be used by menus and buttons.
     *
     * @return a new ""close"" action
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public CloseAction closeAction();
}
","// ApplicationConfiguration_8Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#closeAction()} method.
*/
class ApplicationConfiguration_8Test {","// ApplicationConfiguration_8Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#closeAction()} method.
*/
class ApplicationConfiguration_8Test {
/**
		* Default {@link ApplicationConfiguration Configuration} class.
		*/
		@SuppressWarnings(""rawtypes"")
		public static class Configuration extends ApplicationConfiguration {
				
				/**
				* The ""close"" action to be added to the main menu.
				*/
				@Bean(name=""closeAction"")
				CloseAction closeAction() {
						return (CloseAction)application::close;
					}
				
				@Bean(destroyMethod = ""close"")
				intProperty getProperty() {
						return property;
				}
				
				@Bean(name=""application"")
				Application application() {
						return Application.getInstance();
				}
				
				@Bean(name=""labelTitle"")
				LabelTitle labelTitle() {
						return LabelTitle.LABEL;
				}
				
				@Bean(name=""labelText"")
				ListLabel text(String labelText) {
						return LabelText.LIST(labelText);
				}
				
				@Bean(name=""labelMenuText"")
				MenuItem text(MenuItem menuItem) {
						return ListMenuItem.MENU(menuItem);
				}
				
				@Bean(name=""menuButton"")
				JTailMainButton menuButton() {
						return JTailMainButton.JTail_MENU;
				}
				
			}

       public static class OpenFileModel_8Test
       	extends AbstractOpenFileModel<String> {
               
            /**
                * The open file dialog controller.
                */
               @Bean
               (name=""openFileModelController"")
               OpenFileDialog openFileModelController() {
                       return OpenFileDialog.create();
               }
                
           public static class LabelTitle {
                LabelText labelText;
                /**
                 * Override the method for getting the name of the label.
                 *
                 * @return the label name
                 */
                public String getName() {
                        return labelText.getName();
                }
            }
            /**
             * The label text.
             */
            @Bean(name=""labelText"")
            public LabelText labelText() {
                return LabelText.LABEL_TEXT;
            }
            
	}
       public static class LabelText {
	       /**
	        * An empty label.
	        */
	        @Bean
	        public static String emptyLabel() {
	                return """";
	        }
		/**
		* The name of the label.
		*/
		@Bean
		public String name() {
		            return ""labelName"";
		        }
		/**
		* The contents of the label.
		*/
		@Bean
		public ListLabel label(LabelText labelText) {
		            return ListLabel.LABEL(labelText);
		        }
		                            
		}
	public static class ListMenuItem {
			 /**
			 * The list menu items.
			 */
			@Bean
			public ListMenuItem() {
				this.listItem = ListMenuItem.List;
			}
			
			private ListMenuItem(ListMenuItem listMenuItem) {
				
			}
			
			/**
			 * The list items.
			 */
			@Bean
			public List<JTailMainButton.JTailMenuItem>
			listContent() {
				return listItem.getList();
			}
			
			/**
			 * The list item.
			 */
			@Bean
			ListItem listItem() {
				return listItem(ListMenuItem.listItem);
			}
			
			/**
			 * The list item.
			 */
			@Bean
			public ListItem listItem(ListMenuItem listItem) {
				return listMenuItem.listContent();
			}
		                        
		}
       public static class ListLabel {
	       /**
	        * The label.
	        */
	        private ListLabel() {
	       }
	        /**
	        * An empty label.
	        */
		        @Bean
		        public static ListLabel emptyLabel() {
		                return ListLabel.List_LABEL;
		        }
		                
		}
	   public static class ListMenuItem {
	       /**
	        * The list menu items.
	        */
	        @Bean(name=""listMenuItem"")
	        public ListMenuItem() {
	        }
	        
	        /**
	        * The list menu items.
	        */
	        @Bean(name=""menuItem"")
	        public ListMenuItem(ListMenuItem listMenuItem) {
	        }
		                        
		}
       public static class JTailMainButton {
	       /**
	        * The jtail button.
	        */
	        @Bean(name=""jTailMainButton"")
	        public JTailMainButton jTailMainButton() {
	        	return JTailMainButton.JTail_MAIN;
	        }
	        
	        /**
	        * The jTail button.
	        */
	        @Bean
	        public JTailMainFrame jTailMainButton(JTailMainModel model) {
	        	return JTailMainFrame.create(model);
	        }
		                        
		}
       public static class JTailMainModel {
	       /**
	        * The jTail main model.
	        */
	        @Bean()
	        public JTailMainModel() {
	        }
	        
	        @Bean(name=""jTailMainModel"")
	        public JTailMainModel(ResourceBundle res) {
	        	
	        }
		
		}
       public static class OpenFileModel {
	       /**
	        * The jTail main model.
	        */
	        @Bean()
	        public JTailMainModel() {
	        }
	        
	        @Bean(name=""jTailMainModel"")
	        public JTailMainModel(ResourceBundle res) {
	        	
	"
035603f1-aa13-489b-bb87-275d0457e068,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_9Test.java,54.00127172470093,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create the ""close all"" action that will be used by menus and buttons.
     *
     * @return a new ""close all"" action
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public CloseAllAction closeAllAction();
}
","// ApplicationConfiguration_9Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#closeAllAction()} method.
*/
class ApplicationConfiguration_9Test {","// ApplicationConfiguration_9Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#closeAllAction()} method.
*/
class ApplicationConfiguration_9Test {

	@Test 
	public void tests() {
		
		JTailMainFrame frame = new JTailMainFrame();

		frame.openFile(new OpenFileModel("""", """"), 3);
	}
}"
0229dd5d-6273-40ea-89f3-c014dba57e2b,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_10Test.java,49.55390477180481,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create the ""quit"" action that will be used by menus and buttons.
     *
     * @return a new ""quit"" action
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public QuitAction quitAction();
}
","// ApplicationConfiguration_10Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#quitAction()} method.
*/
class ApplicationConfiguration_10Test {","// ApplicationConfiguration_10Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#quitAction()} method.
*/
class ApplicationConfiguration_10Test {

	/**
	* Initialize the class.
	*/
	@Test
	void initTest() ;

	/**
	* The constructor should throw exception if the resource bundle doesn't contain ""ping"".
	*/
	@Test
	void initTest1() ;

	/**
	* The constructor should throw exception if the resource bundle doesn't contain ""ping""
	* or if the ""quit"" action doesn't exist.
	*/
	@Test
	void initTest2() ;

	/**
	* The constructor should throw exception if the index type from the application is ""main"".
	*/
	@Test
	void initTest3() ;

	/**
	* The constructor should throw exception if the index type from the application is ""view"".
	*/
	@Test
	void initTest4() ;
	
	/**
	* Test the close the view.
	*/
	@Test
	void testCloseView() ;

	/**
	* Test the close the main frame.
	*/
	@Test
	void testCloseMainFrame() ;

	/**
	* The close action should throw exception if the index type from the application is ""main"".
	*/
	@Test
	void testCloseMainAction1() ;
	
	/**
	* The close action should throw exception if the index type from the application is ""view"".
	*/
	@Test
	void testCloseMainAction2() ;

	/**
	* It starts the program and checks that the frame's title is ""Application"" and the window's title
	* is ""Application"" after initialization.
	*/
	@Test
	void testStartTest1() ;

	/**
	* It starts the program and checks that the frame's title is ""Application"" and the window's title
	* is ""File"".
	*/
	@Test
	void testStartTest2() ;
	
	/**
	* It starts the program and checks that the frame's title is ""Application"" and the window's title
	* is ""Application"".
	*/
	@Test
	void testStartTest3() ;
	
	/**
	* It starts and waits that the page is about to be activated.
	*/
	@Test
	void testStartTest4() ;

	/**
	* It stops the page and it checks that the page has already been activated and that the window's state
	* is ""activated"".
	*/
	@Test
	void testStopTest1() ;

	/**
	* It stops the page and it checks that the page has already been activated and that the window's state
	* is ""deactivated"".
	*/
	@Test
	void testStopTest2() ;

	/**
	* It stops and waits that the page is about to be activated.
	*/
	@Test
	void testStopTest3() ;
}

// ApplicationConfiguration_Test.java"
ac7b5aaa-2a64-4705-9d11-1925e5dab4c2,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_11Test.java,53.96849989891052,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create the ""Highlight"" action that will be used by menus and buttons.
     *
     * @return a new ""Highlight"" action
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public HighlightAction highlightAction();
}
","// ApplicationConfiguration_11Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#highlightAction()} method.
*/
class ApplicationConfiguration_11Test {","// ApplicationConfiguration_11Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#highlightAction()} method.
*/
class ApplicationConfiguration_11Test {
/**
	    * Check the ""Highlight"" action configuration.
	    */
	    @Test
	    public void checkHighlightAction() {
	        BeanDefinition bd = (BeanDefinition) highlightAction().getBeanDefinition();
	        assertNotNull(bd);
	        int scope = 0;
	        assertNotNull(bd.getScope());
	        assertEquals(BeanDefinition.SCOPE_GLOBAL, bd.getScope());
	        ResourceBundle bundle = (ResourceBundle) bd.getValue(""bundle"");
	        assertNotNull(bundle);
	        ResourceBundle.Control control = bundle.getControl(""jcatalog-catalog"");
	        assertNotNull(control);
	        OpenFileDialog dialog = new OpenFileDialog();
	        dialog.setTitle(""Jcatalog Catalog"");
	        String path = dialog.show(null);
	        assertNotNull(path);
	    }
}"
1e80f401-582d-4ac8-8d68-4e970b90521f,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_12Test.java,54.02360534667969,length,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create the main frame of the application
     *
     * @return the main frame of the application
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public JTailMainFrame jTailMainFrame();
}
","// ApplicationConfiguration_12Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#jTailMainFrame()} method.
*/
class ApplicationConfiguration_12Test {","// ApplicationConfiguration_12Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#jTailMainFrame()} method.
*/
class ApplicationConfiguration_12Test {
/**
		* The default constructor.
		*/
		ApplicationConfiguration_12Test() {
		}

		/**
		* Test the main frame of the application.
		*
		* @throws Exception error when test fails
		*/
		@Test
    public void testMainFrame() throws Exception {
     	JTailMainFrame jMainFrame1 = jTailMainFrame();

		OpenFileModel ome = new OpenFileModel(jMainFrame1, 0, null, null);
    	jTailMainFrame = OpenFileDialog.show(jMainFrame1, """", """", null, """", ome, 1, 1, 0, 0, null);	// Load selected index number

		assertEquals(""The frame should be'main frame'"", JTailMainFrame.TRUE, jTailMainFrame.isMainFrame());

		assertEquals(""The main frame is incorrect"", jMainFrame1, jTailMainFrame.getApplicationContext().getBean(""mainFrame""));
	}


		/**
		* The test methods below are executed in the following order:
		*
		* {@link CloseFileDialog}
		* {@link DeleteFileDialog}
		*
		* They are executed just before each other, so test order is:
		* - {@link CloseFileDialog}
		* - {@link DeleteFileDialog}
		*
		* Then, test methods are executed in the order they belong to the following classes:
		* - SelectIndexByModel
		* - SelectIndexByDialog
		* - SelectIndexByListener
		* - OpenFileByModel
		* - OpenFile
		* - JTailMainFrame
		* - ApplicationConfiguration
		* - MessageSource
		*
		* The test methods to execute in one of several order are:
		* JTailMainFrame
		* ApplicationConfiguration
		* MessageSource
		* SelectIndexByModel
		* CloseFileDialog
		* DeleteFileDialog
		* OpenFileController
		* DefaultOpenFileModel
		* OpenFileDialog
		* SelectIndexByDialog
    *
		*
		* @generatedBy CodePro at 9 Oct 2017 09:59:07 +0200
		*/
    @Test
    public void testConfigurations() {
			CloseFileDialog jMainFrame = new CloseFileDialog(jTailMainFrame);
			ResourceBundle rb = ResourceBundle.getBundle(""test"", ""test"", new ResourceBundle() {});
			int index = Integer.parseInt(rb.getString(""index""));
			JTailMainModel model = new DefaultOpenFileModel(jMainFrame);

			JTailMainModel aModel = new JTailMainModel(model);
			SelectIndexByModel listener = new SelectIndexByModel();
			SelectIndexByDialog listener2 = new SelectIndexByDialog();
			SelectIndexByListener listener3 = new SelectIndexByListener();

			jTailMainFrame = new JTailMainFrame();
			jMainFrame1 = jTailMainFrame;

			jTailMainFrame.add(bkIndexModel, model);
			this.controller = new OpenFileController(listener, listener2, listener3, aModel);
			model.addOpenFileModelListener(controller);

			assertEquals(""The main frame should be 'true'"", JTailMainFrame.TRUE, model.isMainFrame());

			assertEquals(""The main frame should be 'JTailMainFrame'"", JTailMainFrame.TRUE, jMainFrame1.isMainFrame());

			assertNull(""The open file dialog should be null"", jMainFrame1.openFileDialog());

			assertEquals(""The main frame should contain 'DeleteFileDialog'"", bkJTailFrame, jMainFrame1.getApplicationContext().getBean(""mainFrame""));

			assertTrue(""The main frame should contain controller class"", listener.isActive());
			assertEquals(""The main frame should contain model class name"", bkIndexModel, listener.getModel());

			assertEquals(""MessageSource should contain 'javax.swing.JTailMainFrame'"", this.getClass().getSimpleName(), MessageSource.JANINO.getMappedName());


			CheckCloseButton click = new CheckCloseButton(4, OpenFileDialog.CLOSED);
			assertTrue(""The message should contain the label 'Do you want to close'"", click.isVisible());

			if (eventDisplayed) {
				assertTrue(""The message should contain 'Do you want to close: Yes'"", click.isC());
			} else {
				assertTrue(""The message should contain 'Do you want to close: No'"", click.isN());
			}


			// -----------------------------------------------------------
			// Close the current tab of the application and delete the model and
			// the model.
			// -----------------------------------------------------------

			model.delete(index);

			assertTrue(""The model should be null before opening it"", model.getModel() == null);
			assertTrue(""The tab which contained the model should be 'jTailMainFrame'"", jMainFrame1.getApplicationContext().getBean(""mainFrame"") == jMainFrame1);

			assertTrue(""The model should be not null after closing the current tab"", model.getModel()!= null);
			assertTrue(""The model should contains the closing model"", model.getModel().getModel() instanceof JTailMainModel);
			model.getModel().setModel(null);

			assertTrue(""The model should be null after deleting the model itself"", model.getModel() == null);

			assertTrue(""The model should be null after deleting the current tab"", model.getModel() == null);


			// -----------------------------------------------------------
			// Test the closing of the model.
			// -----------------------------------------------------------

			model = new JTailMainModel(jMainFrame1);
			model.setModel(aModel);

			assertTrue(""The model should be 'JTailMainModel' after closing it"", model.getModel() instanceof JTailMainModel);
			assertEquals(""The model should contain the model of the new created model"", bkJTailModel, model.getModel());

			// -----------------------------------------------------------
			// Test the closing of the model by closing the tab of the application.
			// -----------------------------------------------------------

"
b7f34fb5-4731-41aa-b565-9f9d5a0ddf5b,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/configuration/ApplicationConfiguration_13Test.java,36.703479290008545,stop,"// ApplicationConfiguration.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;

@Configuration
public class ApplicationConfiguration {

    /**
     * Create the ""open file"" dialog
     *
     * @return the ""open file"" dialog
     */
    @Bean
    @Scope(value = BeanDefinition.SCOPE_SINGLETON, proxyMode = ScopedProxyMode.NO)
    public OpenFileDialog openFileDialog();
}
","// ApplicationConfiguration_13Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#openFileDialog()} method.
*/
class ApplicationConfiguration_13Test {","// ApplicationConfiguration_13Test.java
package fr.pingtimeout.jtail.configuration;

import fr.pingtimeout.jtail.gui.action.*;
import fr.pingtimeout.jtail.gui.controller.SelectIndexTypeListener;
import fr.pingtimeout.jtail.gui.model.JTailMainModel;
import fr.pingtimeout.jtail.gui.model.OpenFileModel;
import fr.pingtimeout.jtail.gui.view.JTailMainFrame;
import fr.pingtimeout.jtail.gui.view.OpenFileDialog;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import java.util.ResourceBundle;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ApplicationConfiguration}.
* It contains one unit test case for the {@link ApplicationConfiguration#openFileDialog()} method.
*/
class ApplicationConfiguration_13Test {
private final String application = ""application"";

    /**
     * test for {@link ApplicationConfiguration#openFileDialog()}
     *
     * @throws Exception if a error occurs while opening the file
     */
    @Test
    public final void test_openFileDialog() throws Exception {
		try (BeanDefinition bd = JTailMainFrame.getBeanDefinition()) {
			fd.assertNotNull(application, application);
		}		
		assertNotNull(fd.application);
		for (BeanDefinition bd: fd.applicationsByLabel.values()) {
			assertNotNull(bd.getBeanClassName());
			assertEquals(application,bd.getBeanClassName());
		}
	}


	/**
	* test for {@link ApplicationConfiguration#createTestResources()}
	*
	* @return the generated test resources path
	*/
	@Test
	public final String test_createTestResources() throws Exception {

    	String resourcesPath = ""test/resources"";
//    	new File(resourcesPath).mkdirs();
			//TODO : add test-files for all tests in this class
    		//return resourcesPath;
    	String[] testResources = new String[] {
    		""../../resources/test-files/index.properties"",
    		""../../resources/test-files/index.html"",
    		""../../resources/test-files/index_j_c_1a.properties"",
    		""../../resources/test-files/index_j_c_1b.properties"",
    		""../../resources/test-files/index_j_c_1c.properties"",
    		""../../resources/test-files/index_j_c_1d.properties"",
    		""../../resources/test-files/index_j_c_1e.properties"",
    		""../../resources/test-files/index_j_c_1f.properties"",
    	

    	};

		for (String resourceToTest: testResources) {
			OpenFileDialog ofd = OpenFileDialog.builder().withResourcePath(resourceToTest).build();
	}
		return resourcesPath;
	}

}
"
15ca88b8-58c9-419b-8c85-4411366329e9,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/io/LineReader_0Test.java,57.07377290725708,length,"// LineReader.java
package fr.pingtimeout.jtail.io;

import fr.pingtimeout.jtail.io.index.FileIndex;
import fr.pingtimeout.jtail.util.JTailLogger;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;

/**
 * TODO PLA : commenter.
 *
 * @author Pierre Laporte
 *         Date: 7 avr. 2010
 */
public class LineReader {

    /**
     * Lit la ligne dont le numéro est passé en paramètre.
     * Le numéro de la ligne doit être compris entre 0 et le nombre de lignes indexées.
     *
     * @param lineNumber le numéro de la ligne à lire. Doit être compris entre 0 et le nombre de lignes indexées.
     * @return la ligne correspondant au numéro passé en paramètre
     * @throws IOException si une erreur survient pendant la lecture
     */
    public String readLine(int lineNumber) throws IOException;
}
","// LineReader_0Test.java
package fr.pingtimeout.jtail.io;

import fr.pingtimeout.jtail.io.index.FileIndex;
import fr.pingtimeout.jtail.util.JTailLogger;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link LineReader}.
* It contains one unit test case for the {@link LineReader#readLine(int)} method.
*/
class LineReader_0Test {","// LineReader_0Test.java
package fr.pingtimeout.jtail.io;

import fr.pingtimeout.jtail.io.index.FileIndex;
import fr.pingtimeout.jtail.util.JTailLogger;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link LineReader}.
* It contains one unit test case for the {@link LineReader#readLine(int)} method.
*/
class LineReader_0Test {
private final List<String> expected =  new ArrayList<String>();

		/**
		 * test case for the readLine method.
		 *
		 * @throws IOException exception thrown by jtail
		 */
		@Test
		public void testReadLine() throws IOException {
			expected.add(""LINE1"");
			expected.add(""LINE2"");
			expected.add(""LINE3"");
			expected.add(""EOF"");
			expected.add(""CONTENT LINE1"");
			expected.add(""CONTENT LINE2"");
			expected.add(""CONTENT LINE3"");
			String line = readLine(""LINE1"");
			String expectedLine = expected.remove(0);
			boolean assert = expectedLine.equals(line);
			assertTrue(""Bad read line ["" + line + ""]"", assert);
		}

		/**
		 * Test case for the close method of {@link LineReader}.
		 *
		 * @throws IOException exception thrown by jtail
		 */
		@Test
		public void testClose() throws IOException {
//			int i = 0;
			List<String> expected = new ArrayList<String>();
			//expected.add(""CONTENT LINE1"");
			expected.add(""CONTENT LINE1"");
			FileIndex f = new FileIndex(new File(""C:\\Program Files\\""+System.getProperty(""user.dir"")+""\\Lines\\index.txt""));
			expected.add(""line 1"");
			expected.add(""line 2"");
			expected.add(""line 3"");
			expected.add(""EOF"");
			expected.add(""CONTENT LINE1"");
			expected.add(""CONTENT LINE2"");
			expected.add(""CONTENT LINE3"");
			expected.add(""CONTENT LINE4"");
			expected.add(""EOF"");
			expected.add(""CONTENT LINE1"");
			expected.add(""CONTENT LINE2"");
			expected.add(""CONTENT LINE3"");
			expected.add(""CONTENT LINE4"");
			expected.add(""CONTENT LINE5"");
			expected.add(""CONTENT LINE5"");
			expected.add(""end"");
			expected.add(expected1);
			expected.add(""CONTENT LINE1"");
			expected.add(""CONTENT LINE2"");
			expected.add(""CONTENT LINE3"");
			expected.add(""CONTENT LINE5"");
			expected.add(""EOF"");
			expected.add(""CONTENT LINE6"");
			expected.add(""CONTENT LINE7"");
			expected.add(""CONTENT LINE5"");
			expected.add(""CONTENT LINE4"");
			expected.add(""end"");
			expected.add(expected2);
			expected.add(""CONTENT LINE6"");
			expected.add(""CONTENT LINE7"");
			expected.add(""line 3"");
			expected.add(""line4"");
			expected.add(""line5"");
			expected.add(""end"");
			expected.add(expected3);
			expected.add(""CONTENT LINE4"");
			expected.add(""CONTENT LINE5"");
			expected.add(""CONTENT LINE6"");
			expected.add(""CONTENT LINE5"");
			expected.add(""line 2"");
			expected.add(""line 3"");
			expected.add(""line 4"");
			expected.add(""line 5"");
			expected.add(""end"");
			expected.add(expected4);
			expected.add(""line 6"");
			expected.add(""line 7"");
			List<String> expected2 = new ArrayList<String>();
			expected.add(""line 1"");
			expected2.add(""line 2"");
			expected2.add(""line 3"");
			expected2.add(""line 4"");
			expected2.add(""line 5"");
			expected2.add(""line 6"");
			expected2.add(""line 7"");
			expected2.add(""end"");
			expected2.add(expected3);
			expected2.add(""CONTENT LINE5"");
			expected2.add(""CONTENT LINE6"");
			expected2.add(""CONTENT LINE7"");
			expected2.add(""end"");

			expected.add(""line 1"");
			expected.add(""line 2"");
			expected.add(""line 3"");
			expected.add(""end"");

			expected.add(""CONTENT LINE1"");
			expected.add(""CONTENT LINE2"");
			expected.add(""CONTENT LINE3"");
			expected.add(""end"");

			expected.add(""line 1"");
			expected.add(""line2"");
			expected.add(""line3"");
			expected.add(""end"");


//			expected.add(""CONTENT LINE1"");
			expected.add(""CONTENT LINE3"");
			expected.add(""end"");
			expected.add(expected4);

//			FileIndex f2 = new FileIndex(new File(""C:\\Program Files\\""+System.getProperty(""user.dir"")+""\\Lines\\index.txt""));
//			expected.add(""line 1"");
//			expected.add(""line 2"");
//			expected.add(""line 3"");
//			expected.add(expected4);
//			expected.add(""end"");
//			expected.add(expected5);
//
//			expected.add(""CONTENT LINE1"");
//			expected.add(""CONTENT LINE2"");
//			expected.add(""CONTENT LINE3"");
//			expected.add(""end"");
//	
			expected.add(expected4);
//			expected.add(""CONTENT LINE5"");
//			expected.add(expected5);
//
//			expected.add(""line 1"");
//			expected.add(""line2"");
//			expected.add(""line3"");
//			expected.add(""end"");
//
//	expected.add(""cont"")
//			expected.add(""CONTENT LINE4"");
//			expected.add(""CONTENT LINE5"");
//			expected.add(""end"");
//

			expected.add(""line 2"");
			expected.add(""end"");
			expected.add(expected4);

	expected.add(""line 3"");
	expected.add(""end"");

		List<String> expected1 = new ArrayList<String>();
		expected1.add(""line 1"");
		expected1.add(""line 2"");
		expected1.add(""line 3"");
		expected1.add(""end"");

		System.out.println(""TestCase for readLine"");
			String line = readLine(""end"");
			boolean assert = expected1.remove(0) == line;
			boolean assert1 = expected1.remove(0) == expected1.remove(0);
			//boolean assert1 = line == expected1.remove(0"
6e208d5c-eafd-4ecd-952f-996011e3face,/EvoSuiteBenchmark/original/64_jtailgui/src/main/java/fr/pingtimeout/jtail/io/LineReader_1Test.java,56.99766969680786,stop,"// LineReader.java
package fr.pingtimeout.jtail.io;

import fr.pingtimeout.jtail.io.index.FileIndex;
import fr.pingtimeout.jtail.util.JTailLogger;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;

/**
 * TODO PLA : commenter.
 *
 * @author Pierre Laporte
 *         Date: 7 avr. 2010
 */
public class LineReader {

    /**
     * Lit les lignes comprise entre <code>fromLine</code> et <code>toLine</code> (exclus).
     *
     * @param fromLine Le numéro de la première ligne à lire
     * @param toLine Le numéro de la dernière ligne à lire (exclus)
     * @return Les lignes du fichier dont le numéro est compris entre les deux paramètres
     * @throws IOException si une erreur survient pendant la lecture
     */
    public List<String> readBlock(int fromLine, int toLine) throws IOException;
}
","// LineReader_1Test.java
package fr.pingtimeout.jtail.io;

import fr.pingtimeout.jtail.io.index.FileIndex;
import fr.pingtimeout.jtail.util.JTailLogger;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link LineReader}.
* It contains one unit test case for the {@link LineReader#readBlock(int, int)} method.
*/
class LineReader_1Test {","// LineReader_1Test.java
package fr.pingtimeout.jtail.io;

import fr.pingtimeout.jtail.io.index.FileIndex;
import fr.pingtimeout.jtail.util.JTailLogger;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.List;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link LineReader}.
* It contains one unit test case for the {@link LineReader#readBlock(int, int)} method.
*/
class LineReader_1Test {
@Test
    public void testConstructor() {
		String content;
        
        File file = new File(""test-1.txt"");
        assertNotNull(file);

        FileIndex fileIndex = FileIndex.loadFromFile(file, JTailLogger.HEADLESS);
        FileIndex.cleanFileIndex(fileIndex);
				
        RandomAccessFile fin;
        File file2;
        try {
            fin = new RandomAccessFile(file, ""r"");
            fin.seek(fin.length());
            int fromLine, toLine;
            fromLine = fin.readInt();
                        toLine = fin.readInt();

            content = fin.readLine();

            assertNotNull(content);
            assertTrue(!(content.length() > 0));

            if(!content.equals("""")) {
                content = content.trim();
                // We can easily have null, but it is only not a problem.
            }
            
            if(fromLine!= fin.readInt())      throw new RuntimeException(""Incorrect line"");
            
            if(toLine!= fin.readInt())      throw new RuntimeException(null);
        }
        catch(FileNotFoundException e) {
            final List<String> lineList = new ArrayList<String>[2];
            System.err.println(""Not found file or error"");
            lineList.add(""/does/not/exist"");
            lineList.add(e.getMessage());
            e.printStackTrace();
            if(lineList.size() == 2) {
                throw new RuntimeException(lineList.get(1));
            }
         }
        
        try {
            fin.close();
        }
        catch(IOException e) {
            fail(e.getMessage());
        }
        
    }
}

// LineReader_2Test.java
"
