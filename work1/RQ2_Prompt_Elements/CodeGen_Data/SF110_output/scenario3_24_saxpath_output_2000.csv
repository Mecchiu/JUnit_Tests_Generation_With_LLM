ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
59f81fe2-d68f-4f7a-8280-49d3f3041068,/EvoSuiteBenchmark/original/24_saxpath/src/main/java/saxpath/helpers/XPathReaderFactory_0Test.java,21.761716842651367,stop,"// XPathReaderFactory.java
package org.saxpath.helpers;

import org.saxpath.XPathReader;
import org.saxpath.SAXPathException;

/**
 * Create an {@link org.saxpath.XPathReader} from
 *  either a system property, or a named class.
 *
 *  <p>
 *  Similar to the SAX API, the <code>XPathReaderFactory</code>
 *  can create an <code>XPathReader</code> from a name of a
 *  class passed in directly, or by inspecting the system
 *  property <code>org.saxpath.driver</code>.
 *
 * @author bob mcwhirter (bob@werken.com)
 */
public class XPathReaderFactory {

    /**
     * Create an <code>XPathReader</code> using the value of
     *  the <code>org.saxpath.driver</code> system property.
     *
     * @return An instance of the <code>XPathReader</code> specified
     *          by the <code>org.saxpath.driver</code> property.
     * @throws SAXPathException if the property is unset, or if
     *          the class can not be instantiated for some reason.,
     *          or if the class doesn't implement the <code>XPathReader</code>
     *          interface.
     */
    public static XPathReader createReader() throws SAXPathException;
}
","// XPathReaderFactory_0Test.java
package org.saxpath.helpers;

import org.saxpath.XPathReader;
import org.saxpath.SAXPathException;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link XPathReaderFactory}.
* It contains one unit test case for the {@link XPathReaderFactory#createReader()} method.
*/
class XPathReaderFactory_0Test {","// XPathReaderFactory_0Test.java
package org.saxpath.helpers;

import org.saxpath.XPathReader;
import org.saxpath.SAXPathException;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link XPathReaderFactory}.
* It contains one unit test case for the {@link XPathReaderFactory#createReader()} method.
*/
class XPathReaderFactory_0Test {

    /**
     * Test class of a {@link XPathReaderFactory} with a specific
     * system property name and value.
     */
    @Test
    public void test_createReader() throws SAXPathException {
    	XPathReaderFactory.createReader();
		XPathReaderFactory.clearSystemProperty();
    }
}
"
f228d653-aea5-4e8f-9c82-da74d1e0b3e2,/EvoSuiteBenchmark/original/24_saxpath/src/main/java/saxpath/helpers/XPathReaderFactory_1Test.java,22.233194828033447,stop,"// XPathReaderFactory.java
package org.saxpath.helpers;

import org.saxpath.XPathReader;
import org.saxpath.SAXPathException;

/**
 * Create an {@link org.saxpath.XPathReader} from
 *  either a system property, or a named class.
 *
 *  <p>
 *  Similar to the SAX API, the <code>XPathReaderFactory</code>
 *  can create an <code>XPathReader</code> from a name of a
 *  class passed in directly, or by inspecting the system
 *  property <code>org.saxpath.driver</code>.
 *
 * @author bob mcwhirter (bob@werken.com)
 */
public class XPathReaderFactory {

    /**
     * Create an <code>XPathReader</code> using the passed
     *  in class name.
     *
     * @param className The name of the class which implements
     *         the <code>XPathReader</code> interface.
     * @throws SAXPathException if the class can not be
     *          instantiated for some reason, or if the
     *          class doesn't implement the <code>XPathReader</code>
     *          interface.
     */
    public static XPathReader createReader(String className) throws SAXPathException;
}
","// XPathReaderFactory_1Test.java
package org.saxpath.helpers;

import org.saxpath.XPathReader;
import org.saxpath.SAXPathException;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link XPathReaderFactory}.
* It contains one unit test case for the {@link XPathReaderFactory#createReader(String)} method.
*/
class XPathReaderFactory_1Test {","// XPathReaderFactory_1Test.java
package org.saxpath.helpers;

import org.saxpath.XPathReader;
import org.saxpath.SAXPathException;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link XPathReaderFactory}.
* It contains one unit test case for the {@link XPathReaderFactory#createReader(String)} method.
*/
class XPathReaderFactory_1Test {

	@Test
	void createReader1NoProp() throws Exception {
	
		try {
			new XPathReaderFactory().createReader(""org.saxpath.helpers.Test.prop"");
			fail(""Must throw for class that doesn't implement the XPathReader interface"");
		}catch(SAXPathException e) {
			assertEquals(""Unable to parse the input in the DOM against the specified name"", e.getMessage());
		}
	}
	
	@Test
	void createReader1ProperClass() throws Exception {		
		
	assertNotNull(new XPathReaderFactory().createReader(""org.saxpath.test.Class1""));
	}
	
	@Test
	void createReader2NoProp() throws Exception {		
		
		try {
			new XPathReaderFactory().createReader(""org.saxpath.helpers.Test.properClass"");
			fail(""Must throw for class that doesn't implement the XPathReader interface"");
		}catch(SAXPathException e) {
			assertEquals(""Unable to parse the input in the DOM against the specified name"", e.getMessage());
		}
	}
	
	@Test
	void createReader2ProperClass() throws Exception {		
		
		assertNotNull(new XPathReaderFactory().createReader(""org.saxpath.test.Class1""));
		assertNotNull(new XPathReaderFactory().createReader(""org.saxpath.test.Class2""));
	}
	
	@Test
	void createReader3NoProp() throws Exception {		
		
		try {
			new XPathReaderFactory().createReader(""org.saxpath.helpers.Test.properClass"", ""org.saxpath.test.Class1"");
			fail(""Must throw for class that doesn't implement the XPathReader interface"");
		}catch(SAXPathException e) {
			assertEquals(""Unable to parse the input in the DOM against the specified name"", e.getMessage());
		}
	}
	
	@Test
	void createReader3ProperClass() throws Exception {		
		
		assertNotNull(new XPathReaderFactory().createReader(""org.saxpath.test.Class1""));
		assertNotNull(new XPathReaderFactory().createReader(""org.saxpath.test.Class2""));		
	}
	
}
"
