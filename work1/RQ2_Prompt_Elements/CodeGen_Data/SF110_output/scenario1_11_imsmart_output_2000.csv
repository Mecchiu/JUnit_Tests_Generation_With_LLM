ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
070a513e-52b8-4dce-aab3-864c1dcecf42,/EvoSuiteBenchmark/original/11_imsmart/src/main/java/com/imsmart/servlet/HTMLFilter.java,18.87158226966858,stop,"// HTMLFilter.java
package com.imsmart.servlet;

public final class HTMLFilter {

    public static String filter(String message) {
        if (message == null)
            return (null);
        char[] content = new char[message.length()];
        message.getChars(0, message.length(), content, 0);
        StringBuffer result = new StringBuffer(content.length + 50);
        for (int i = 0; i < content.length; i++) {
            switch(content[i]) {
                case '<':
                    result.append(""&lt;"");
                    break;
                case '>':
                    result.append(""&gt;"");
                    break;
                case '&':
                    result.append(""&amp;"");
                    break;
                case '""':
                    result.append(""&quot;"");
                    break;
                default:
                    result.append(content[i]);
            }
        }
        return (result.toString());
    }
}
","// HTMLFilterTest.java
package com.imsmart.servlet;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link HTMLFilter}.
* It contains one unit test case for the {@link HTMLFilter#filter(String)} method.
*/
class HTMLFilterTest {","// HTMLFilterTest.java
package com.imsmart.servlet;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link HTMLFilter}.
* It contains one unit test case for the {@link HTMLFilter#filter(String)} method.
*/
class HTMLFilterTest {
/**
		* This is the name of HTMLFilterTest.
		*/
        public static String HTTPDestroyTestProc = ""destroy()"";

        /**
        * Test if destroy() method is called by HTMLFilter instance after the instance has been destroyed with JNDI.
        */
        @Test
	public void testDestroy() {
            HTMLFilter filter = new HTMLFilter();
            assertTrue(""instance will not be destroyed"", filter.isDestroyed());
            filter.destroy();
            assertTrue(""instance's destroy(int){} method should not be called when instance was destroyed"",!filter.isDestroyed());
        }
}"
