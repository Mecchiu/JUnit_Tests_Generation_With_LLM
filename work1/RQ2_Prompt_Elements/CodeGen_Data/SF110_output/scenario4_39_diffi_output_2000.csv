ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
8da7bbd7-77cd-4042-be12-b23f497f3531,/EvoSuiteBenchmark/original/39_diffi/src/main/java/de/beiri22/stringincrementor/helper/ExtBoolArray_0Test.java,11.909045457839966,stop,"// ExtBoolArray.java
package de.beiri22.stringincrementor.helper;

/**
 * @author Rico
 */
public final class ExtBoolArray {

    /**
     * Enthaelt die Booleanwerte
     */
    private boolean[] werte;

    /**
     * erstellt ein neues ExtBoolArray mit allen Werten False.
     * @param len Anzahl der Booleanwerte
     */
    public ExtBoolArray(int len) {
    }

    /**
     * setzt den Bereich mit den Indexen a bis b auf True.
     * @param a Startindex
     * @param b Endindex
     */
    public void setTrue(int a, int b);

    /**
     * prueft, ob der Bereich mit den Indexen a bis b ausschließlich False-Werte
     * enthaelt.
     * @param a Startindex
     * @param b Endindex
     * @return True - wenn alles False-Werte sind.
     */
    public boolean isFalse(int a, int b);

    /**
     * Zahl die uebriggebliebenen False-Werte.
     * @return Anzahl der False-Werte.
     */
    public int left();
}
","// ExtBoolArray_0Test.java
package de.beiri22.stringincrementor.helper;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ExtBoolArray}.
* It contains one unit test case for the {@link ExtBoolArray#isFalse(int, int)} method.
*/
class ExtBoolArray_0Test {","// ExtBoolArray_0Test.java
package de.beiri22.stringincrementor.helper;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ExtBoolArray}.
* It contains one unit test case for the {@link ExtBoolArray#isFalse(int, int)} method.
*/
class ExtBoolArray_0Test {

  @Test
  public void testIsFalse() {
    assertFalse(new ExtBoolArray(4).isFalse(0,2));
	assertTrue(new ExtBoolArray(4).isFalse(0,3));
  }

}
"
23b8d0a2-f189-4d5a-a98e-dbae0f30e976,/EvoSuiteBenchmark/original/39_diffi/src/main/java/de/beiri22/stringincrementor/helper/ExtBoolArray_1Test.java,21.741645097732544,stop,"// ExtBoolArray.java
package de.beiri22.stringincrementor.helper;

/**
 * @author Rico
 */
public final class ExtBoolArray {

    /**
     * Enthaelt die Booleanwerte
     */
    private boolean[] werte;

    /**
     * erstellt ein neues ExtBoolArray mit allen Werten False.
     * @param len Anzahl der Booleanwerte
     */
    public ExtBoolArray(int len) {
    }

    /**
     * setzt den Bereich mit den Indexen a bis b auf True.
     * @param a Startindex
     * @param b Endindex
     */
    public void setTrue(int a, int b);

    /**
     * prueft, ob der Bereich mit den Indexen a bis b ausschließlich False-Werte
     * enthaelt.
     * @param a Startindex
     * @param b Endindex
     * @return True - wenn alles False-Werte sind.
     */
    public boolean isFalse(int a, int b);

    /**
     * Zahl die uebriggebliebenen False-Werte.
     * @return Anzahl der False-Werte.
     */
    public int left();
}
","// ExtBoolArray_1Test.java
package de.beiri22.stringincrementor.helper;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ExtBoolArray}.
* It contains one unit test case for the {@link ExtBoolArray#left()} method.
*/
class ExtBoolArray_1Test {","// ExtBoolArray_1Test.java
package de.beiri22.stringincrementor.helper;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ExtBoolArray}.
* It contains one unit test case for the {@link ExtBoolArray#left()} method.
*/
class ExtBoolArray_1Test {

	@Test
	    public void test_left_Null() {
	        ExtBoolArray arr = new ExtBoolArray(); assertNull(arr.left());
	    }

	    @Test
	    public void test_left() {
	        ExtBoolArray arr = new ExtBoolArray(3);
	        assertEquals(3, arr.len());

	        for (int i = 0; i < 2; i++) {
	                obj:
	            {
	                	if (i==0) {
	                		arr.setTrue(0, 1);
	                	}
	                else {
	                		arr.setFalse(0, 1);
	                	}
	            }
	        }

	        assertEquals(3, arr.len());
	        assertTrue(3 == arr.left());
	        assertEquals(1, arr.len());
	    }

}
"
