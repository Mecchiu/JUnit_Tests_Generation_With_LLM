ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
7378a798-5563-47e6-86aa-9a1da52b413c,/EvoSuiteBenchmark/original/2_a4j/src/main/java/net/kencochrane/a4j/A4j_0Test.java,59.940948247909546,stop,"// A4j.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class A4j {

    /**
     * With a single query, developers can retrieve results across all the different product categories,
     * sorted by relevance.  For a blended search, you pass in search keywords but no mode or page parameter.
     * This will return up to 3 results for each of the product categories currently available.
     * This can currently mean up to 45 results for a single query.
     *
     * @since 1.0
     * @param searchTerm the term you want to search for
     * @param type heavy or lite
     * @return BlendedSearch
     */
    public BlendedSearch BlendedSearch(String searchTerm, String type);
}
","// A4j_0Test.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains one unit test case for the {@link A4j#BlendedSearch(String, String)} method.
*/
class A4j_0Test {","// A4j_0Test.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains one unit test case for the {@link A4j#BlendedSearch(String, String)} method.
*/
class A4j_0Test {
private static void assertMatch(Object first, Object second, boolean result, String expected) {
				if (result == true) return;
				assertEquals(
					""The result does not match"",
					expected,
					("" ("" + first + "" "" + second + "") * "" + result.toString() + "" * "" + result.toString() + ""{}  "" +
					expected.replace(""{}"", first) + "" * "" + result.toString().replace(""{}"", second) +
					"")""
				);
		}

		@Test
		void BlendedSearch() {
			Long expected = 1L;
			Long query1 = 10L;
			Long query2 = 11L;
			Long query3 = 12L;
			Long query4 = 13L;
			expected = expected * 2L;
			assertMatch(BlendedSearch(query1, false).getContent(), Blast.Search_Title.C.title, 
				query1 == expected.longValue(), ""Query1"");
			assertMatch(BlendedSearch(query2, false).getContent(), Blast.Search_Title.C.title, 
				query2 == expected.longValue(), ""Query2"");
			assertMatch(BlendedSearch(query3, false).getContent(), Blast.Search_Title.C.title, 
				query3 == expected.longValue(), ""Query3"");
			assertMatch(BlendedSearch(query4, false).getContent(), Blast.Search_Title.C.title, 
				query4 == expected.longValue(), ""Query4"");
		}
}"
68d6ee2a-3640-46e2-9957-881bda2329c9,/EvoSuiteBenchmark/original/2_a4j/src/main/java/net/kencochrane/a4j/A4j_1Test.java,58.27548384666443,stop,"// A4j.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class A4j {

    /**
     * A keyword is a general search term that is used to find products in the Amazon.com
     * catalog. Often, more than one keyword is used at the same time to form a short phrase
     * (such as finance software).
     *
     * @since 1.0
     * @param searchTerm the term you want to search for
     * @param productLine books, dvd, etc
     * @param type heavy or lite
     * @param page 1 2 3 etc
     * @return ProductInfo
     */
    public ProductInfo KeywordSearch(String searchTerm, String productLine, String type, String page);
}
","// A4j_1Test.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains one unit test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
*/
class A4j_1Test {","// A4j_1Test.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains one unit test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
*/
class A4j_1Test {
/**
		 * This method tests if the method for creating a product is invoked with all required fields.
		 * It also verifies that the correct type of objects is being created for each field
		 * @throws {@link IllegalAccessException}
		 * @throws InvocationTargetException
		 * @throws NoSuchMethodException
		 * @throws ClassNotFoundException
		 */
		@Test
		public void KeywordSearch() throws IllegalAccessException, InvocationTargetException,
                NoSuchMethodException, ClassNotFoundException{
			A4j.KeywordSearch(""finance"", ""finance is good for life"", ""light"", ""page 2"");
			A4j.KeywordSearch(""finance"", ""finance is good for life"", ""lighter"", ""page 3"");
			A4j.KeywordSearch(""finance"", ""finance is good for life"", ""lighter"", ""page 2"");
			A4j.KeywordSearch(""finance"", ""finance is good for life"", ""lighter"", ""page 3"");
			A4j.KeywordSearch(""finance"", ""finance is good for life"", ""lighter"", ""page 2"");
			A4j.KeywordSearch(""cant"", ""cant do this thing"", ""heavy"", ""page 1"");
			A4j.KeywordSearch(""cant"", ""cant do this thing"", ""light"", ""page 2"");
			A4j.KeywordSearch(""cant"", ""cant do this thing"", ""lighter"", ""page 2"");
			A4j.KeywordSearch(""cant"", ""cant do this thing"", ""light"", ""page 3"");
			A4j.KeywordSearch(""cant"", ""cant do this thing"", ""light"", ""page 2"");
			A4j.KeywordSearch(""cant"", ""cant do this thing"", ""lighter"", ""page 3"");
		}
}
"
5413d049-672c-4fc5-b561-94555dc45d79,/EvoSuiteBenchmark/original/2_a4j/src/main/java/net/kencochrane/a4j/A4j_2Test.java,59.502849817276,stop,"// A4j.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class A4j {

    /**
     * Search for an actor
     *
     * @since 1.0
     * @param actorName - actor or actresses name to search for
     * @param mode (dvd, vhs, video)
     * @param page 1 2 3 etc
     * @return ProductInfo
     */
    public ProductInfo ActorSearch(String actorName, String mode, String page);
}
","// A4j_2Test.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains one unit test case for the {@link A4j#ActorSearch(String, String, String)} method.
*/
class A4j_2Test {","// A4j_2Test.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains one unit test case for the {@link A4j#ActorSearch(String, String, String)} method.
*/
class A4j_2Test {
/**
		 * Simple test case for {@link A4j#ActorSearch(String, String, String)}.
		 *
		 * @since 1.0
		 * @test_category models
		 * @jav_raw_testclass A4j_Test
		*/
		@Test
		public void ActorSearch_SimpleTest() {
			final String actor = ""test_actor"";
			final String mode = ""test_mode"";
			final String page = ""test_page"";
			final ActorInfo actorInfo = new ActorInfo(actor, mode, page);

			final ProductInfo productInfo = new ProductInfo();
			final Product product = new Product(productInfo);
			final Search search = new Search(mode, page);

			final ProductInfo searchIn = search.Search();
			assertNotNull(searchIn);
			assertEquals(mode, searchIn.SearchMode.getMode());
			assertEquals(page, searchIn.SearchPage);

			final Cart cartInfo = new Cart();
			final Cart cart = new Cart(cartInfo, product, search);

			final ProductProductInfo prodInfo = new ProductProductInfo();
			final ProductProduct prod = new ProductProduct(prodInfo);
			final ProductInfoProduct prodIn = new ProductInfoProduct(prod);

			final SearchProductInfo searchInProductInfo = new SearchProductInfo();
			final Search searchInProduct = new Search(searchInProductInfo, prod);

			final ProductProductInfo searchInProd = new ProductProductInfo();
			final Product searchInProd2 = new ProductInfoProduct(searchInProductInfo);

			cart.add(product);
			search.Search();
			cart.add(searchInProduct);
			searchInProduct.Search();

			cart.add(searchInProd);
			searchInProd.Search();

			prod.Search();
			search.Search();

			new A4j().ActorSearch(actor, mode, page).Search();
			new A4j().ActorSearch(actor, mode, page + 1).Search();
			new A4j().ActorSearch(actor, mode, 1).Search();

			final String testMessage = message();
			assertEquals(""Actor "" + actor + "" didn't match\n"";
			assertEquals(testMessage, testMessage);
		}

		@AfterEach
		public void cleanUp() throws Exception {

		}
}
"
f53ec5e5-576d-4b46-9775-ae29663f7ac8,/EvoSuiteBenchmark/original/2_a4j/src/main/java/net/kencochrane/a4j/A4j_3Test.java,59.21918296813965,length,"// A4j.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class A4j {

    /**
     * Search for an artist
     *
     * @since 1.0
     * @param artistName - artist name to search for.
     * @param mode (music, classical)
     * @param page 1 2 3 etc.
     * @return ProductInfo
     */
    public ProductInfo ArtistSearch(String artistName, String mode, String page);
}
","// A4j_3Test.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains one unit test case for the {@link A4j#ArtistSearch(String, String, String)} method.
*/
class A4j_3Test {","// A4j_3Test.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains one unit test case for the {@link A4j#ArtistSearch(String, String, String)} method.
*/
class A4j_3Test {
private static final String A4J_SINGLE_PAGE = ""http://www.kencochrane.net/A4J-DOC/search/Artist/Search/SinglePage/"";
		private static final String A4J_SEARCH_FOR_ARTIST = ""http://www.kencochrane.net/A4J-DOC/search/Artist.dtd"";
		private static final String PAGE_SINGLE_PAGE = ""1"";
		private static final String SEARCH_FOR_ARTIST_ARTIST = ""http://www.kencochrane.net/A4J-DOC/search/artist/Search/SinglePage/artist/artist"";
		private static final String SEARCH_FOR_ALL_ARTIST_ARTIST = ""http://www.kencochrane.net/A4J-DOC/search/artist/Search/SinglePage/artist"";
		private static final String SEARCH_FOR_ALL_PAGE = ""http://www.kencochrane.net/A4J-DOC/search/""; // This should work
		private static final String PAGE_PREFIX = ""A4J_"";
		private static final String SEARCH_FOR_NO_ARTIST_FOUND = ""http://www.kencochrane.net/A4J-DOC/search/artist/Search/MultiplePages/noartist/"";
		private static final String SEARCH_FOR_NO_ARTIST = ""http://www.kencochrane.net/A4J-DOC/search/artist/Search/MultiplePages/NoArtist/"";
		private Product.ProductInfo[][] products = new Product.ProductInfo[][] {};

		private final String SEARCH_TYPE = ""single-page"";
		private final String PAGE_URL = ""http://www.kencochrane.net"";
		private final String NO_ARTIST_URL = ""http://www.kencochrane.net/A4J-DOC/search/artist/Search/MultiplePages/noartist/"";

		@Test
		void SinglePageArtic(@SuppressWarnings(""SameParameterValue"") Search search) {
			ProductInfo pi = Search.Search(search, PAGE_SINGLE_PAGE).getResults();
			pi.setImage(""http://a4j.net.kencochrane.net"");
			pi.setProduct(Product.PRODUCT.JULEST);
			pi.getArtists().get(0).setImage(""http://a4j.net.kencochrane.net"");
			pi = ArtistSearch(pi.getArtistName(), SEARCH_TYPE, PAGE_SINGLE_PAGE).getResults();
			pi.getArtists().get(0).setImage(""http://a4j.net.kencochrane.net"");
		}
		@Test
		void MultiplePagesArtic(@SuppressWarnings(""SameParameterValue"") Search search) {
			ProductInfo pi = Search.Search(search, PAGE_SINGLE_PAGE).getResults();
			pi.setImage(""http://a4j.net.kencochrane.net"");
			pi.setProduct(Product.PRODUCT.PUPPET);
			pi.getArtists().get(0).setImage(""http://a4j.net.kencochrane.net"");
		}
		@Test
		void NoArtistArtic(@SuppressWarnings(""SameParameterValue"") Search search) {
			ProductInfo pi = Search.Search(search, SEARCH_FOR_NO_ARTIST_ARTIST).getResults();
			pi.setImage(""http://a4j.net.kencochrane.net"");
			pi.setProduct(Product.PRODUCT.PUPPET);
			pi.getArtists().get(0).setImage(""http://a4j.net.kencochrane.net"");
		}
		@Test
		void NoArtistSearch(@SuppressWarnings(""SameParameterValue"") Search search) {
			ProductInfo pi = Search.Search(search, SEARCH_FOR_NO_ARTIST).getResults();
			pi.setImage(""http://a4j.net.kencochrane.net"");
			pi.setProduct(Product.PRODUCT.PUPPET);
			pi.getArtists().get(0).setImage(""http://a4j.net.kencochrane.net"");
		}

		@Test
		void NoArtistSearch1(@SuppressWarnings(""SameParameterValue"") Search search) {
			ProductInfo pi = Search.Search(search, SEARCH_FOR_NO_ARTIST).getResults();
			pi.setImage(""http://a4j.net.kencochrane.net"");
			pi.setProduct(Product.PRODUCT.PUPPET);
			pi.getArtists().get(0).setImage(""http://a4j.net.kencochrane.net"");
		}

		@Test
		void NoArtistSearch3(@SuppressWarnings(""SameParameterValue"") Search search) {
			ProductInfo pi = Search.Search(search, SEARCH_FOR_NO_ARTIST_ARTIST).getResults();
			pi.setImage(""http://a4j.net.kencochrane.net"");
			pi.setProduct(Product.PRODUCT.JULEST);
			pi.getArtists().get(0).setImage(""http://a4j.net.kencochrane.net"");
		}
	}


	/**
	 * http://www.kencochrane.net/A4J-DOC/search/all/#ArtistSearch
	 */
	@Test
	public void ArtistSearch2() {
		String url = A4J_SINGLE_PAGE + SEARCH_FOR_ARTIST_ARTIST;
		Cart cart = new Cart();
		cart.clear();
		Cart.getInstance().add(url);
		A4j.DAO.search(url, ""artist"")
				.setType(""artist"")
				.setProduct(Product.PRODUCT.PUPPET)
				.getResults()
				.getArtists()
				.get(0)
				.addImage(url + ""artist.png"");
		assertEquals(""http://www.kencochrane.net/A4J-DOC/search/artists/artist"", A4J_SINGLE_PAGE + url);
	}

	/**
	 * http://www.kencochrane.net/A4J-DOC/search/artists/#ArtistSearch
	 */
	@Test
	public void ArtistSearch3() {
		String url = A4J_SINGLE_PAGE + SEARCH_FOR_ARTIST_ARTIST;
		Cart cart = new Cart();
		cart.clear();
		Cart.getInstance().add(url);
		A4j.DAO.search(url, ""artist"")
				.setType(""artist"")
				.setPage(PAGE_SINGLE_PAGE)
				.getResults()
				.getArtists()
				.get(0)
				.add"
faca8252-e01c-4eea-9951-d56d5bb44545,/EvoSuiteBenchmark/original/2_a4j/src/main/java/net/kencochrane/a4j/A4j_4Test.java,59.61436414718628,stop,"// A4j.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class A4j {

    /**
     * Search books for an author
     *
     * @since 1.0
     * @param authorName author to search for
     * @param page 1 2 3 etc.
     * @return ProductInfo
     */
    public ProductInfo AuthorSearch(String authorName, String page);
}
","// A4j_4Test.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains one unit test case for the {@link A4j#AuthorSearch(String, String)} method.
*/
class A4j_4Test {","// A4j_4Test.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains one unit test case for the {@link A4j#AuthorSearch(String, String)} method.
*/
class A4j_4Test {
@Test 
		public void testAuthorSearch() {
			final String authorName = ""Chris"";
			final String page = ""5"";
			final ProductInfo result = new ProductInfo(new Product(authorName), 8).setPageInfo(5, 7).setAuthorRanking(4);			
            
            final Search search = new Search(""#A4J_4_Author_""+authorName+"",$#A4J_4_Author_$#A4J_4_Article"");				
            
			final Search search1 = new Search(""#A4J_4_Author_""+authorName);			
			
//            result.setAuthorRanking(16).setArticleInfo(21, ""This is test text"");			
			
			final Cart cart = new Cart(3);

			search.setCart(cart);			
			final Product product = new Product(""Chris"",""This is test text"");
			final ProductInfo productInfo = new ProductInfo(product, 5).setPageInfo(5, 7);
			
			cart.add(productInfo);				
			
            cart.addSearch(search);

			final DAO a4jDAO = new Dao<ItemInfo>(ItemInfo.class);

			final ItemInfo resultItem = a4jDAO.find(itemInfoFrom(result));

			assertEquals(true, resultItem instanceof ItemInfo_4);
            
		}
	}"
a11a01e2-caa0-4fa5-9bfa-d30caca60da7,/EvoSuiteBenchmark/original/2_a4j/src/main/java/net/kencochrane/a4j/A4j_5Test.java,59.462361097335815,stop,"// A4j.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class A4j {

    /**
     * Add to product to your Shopping cart
     *
     * @since 1.0
     * @param asin amazon id for the product
     * @param quantity number of items to add
     * @return ShoppingCart
     */
    public ShoppingCart AddtoCart(String asin, String quantity);
}
","// A4j_5Test.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains one unit test case for the {@link A4j#AddtoCart(String, String)} method.
*/
class A4j_5Test {","// A4j_5Test.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains one unit test case for the {@link A4j#AddtoCart(String, String)} method.
*/
class A4j_5Test {

		/**
		 * Test the AddtoCart(String, String) method
		 * 
		 * Example:
		 * 
		 * AddtoCart(""id"";""Quantity"").
		 *
		 * @since 1.0.2
		 * @throws Exception 
		 */
		@Test
		public void AddtoCartTest() throws Exception {
			ShoppingCart cart = A4j.AddtoCart(""id""; ""Quantity"");
			assertNotNull(cart);
			assertEquals(""id"", cart.getCartId());
			assertNotNull(cart.getProducts());
			Cart c4 = Cart.fromString(""id""; ""Quantity"");
			assertNotNull(c4);
			assertTrue(c4.getProductIds().isEmpty());
			assertEquals(""id"", c4.getCartId());
			assertEquals(""Quantity"", c4.getQuotationStatus());
		}

		/**
		 * Test the Cart with quantity of 1.
		 *
		 * Unit test case for A4j.AddtoCart(String, String).
		 * 
		 * @throws Exception 
		 */
		@Test
		public void AddtoCartQuantityOne() throws Exception {
			ShoppingCart cart = A4j.AddtoCart(""id"", 1);
			assertNotNull(cart);
			assertEquals(""id"", cart.getCartId());
			assertNotNull(cart.getProducts());
			Cart c4 = Cart.fromString(""id""; """") ;
			assertNotNull(c4);
			assertEquals(0, c4.getProductIds().size());
			assertEquals(""Quantity 1"", c4.getQuotationStatus());
		}

		/**
		 * Test the Cart with quantity of 3.
		 * Unit test case for A4j.AddtoCart(String, String).
		 * 
		 * @throws Exception 
		 */
		@Test
		public void AddtoCartQuantityThree() throws Exception {
			{
				ShoppingCart cart = A4j.AddtoCart(""id"", 3);
				assertNotNull(cart);
				assertEquals(""id"", cart.getCartId());
				assertNotNull(cart.getProducts());
				Cart c4 = Cart.fromString(""id""; """") ;
				assertNotNull(c4);
				assertEquals(3, c4.getProductIds().size());
			}
			{
				ShoppingCart cart = A4j.AddtoCart(""id"", ""Quantity"");
				assertNotNull(cart);
				assertEquals(""id"", cart.getCartId());
				assertNotNull(cart.getProducts());
				Cart c4 = Cart.fromString(""id""; ""Quantity"");
				assertNotNull(c4);
				assertEquals(3, c4.getProductIds().size());
			}
			{
				ShoppingCart cart = A4j.AddtoCart(""id"", 2);
				assertNotNull(cart);
				assertEquals(""id"", cart.getCartId());
				assertNotNull(cart.getProducts());
				Cart c4 = Cart.fromString(""id""; """") ;
				assertNotNull(c4);
				assertEquals(3, c4.getProductIds().size());
				cart = A4j.AddtoCart(""id"", ""Quantity"");
				assertNotNull(cart);
				assertEquals(""id"", cart.getCartId());
				assertNotNull(cart.getProducts());
				c4 = Cart.fromString(""id""; ""Quantity"");
				assertNotNull(c4);
				assertEquals(3, c4.getProductIds().size());
			}

		}

		/**
		 * Add to cart test for A4j.AddtoCart(String, String). 
		 * Units tests for A4j.Cart.fromString(""cartid"")
		 *
		 * @since 1.0.2
		 * @throws Exception 
		 */
		@Test
		public void AddtoCartTestWithUnit() throws Exception {
			{
				Cart c1 = A4j.Cart.fromString(""cartid"");
				assertNotNull(c1);
				assertTrue(c1.isEmpty());
			}
			{
				ShoppingCart c2 = A4j.AddtoCart(""cartid"", ""Quantity"");
				assertNotNull(c2);
				assertFalse(c2.isEmpty());
				c2.setUnits(0.10);
				assertTrue(c2.isEmpty());
			}
			{
				ShoppingCart c3 = A4j.Cart.fromString(""cartid"");
				assertNotNull(c3);
				assertFalse(c3.isEmpty());
				c3.setUnits(2.2 );
				assertTrue(c3.isEmpty());
			}
			{
				ShoppingCart c4 = A4j.Cart.fromString(""cartid"");
				assertNotNull(c4);
				Cart c5 = A4j.A4J.Cart.fromString(""cartid"");
				assertNotNull(c4);
				assertEquals(c5, c4.getShoppingCart());
				c4.setCartId(""cartid"");
				assertEquals(c5, c4.getShoppingCart());
				Cart c6 = A4j.Cart.fromString(""cartid"");
				assertNotNull(c6);
				assertTrue(Arrays.equals(c6.getCartIds(), new String[] {""art_id"", ""cartid""}));
			}
		}

		/**
		 * Test the Cart getShoppingCart(Cart) method
		 *
		 * @since 1.0
		 * @throws Exception 
		 */
		@Test
		public void CartGetShoppingCartTest() throws Exception {
			ShoppingCart c1 = A4j.NewCart("""");
			assertNull(c1.getCartId());
			ShoppingCart c2 = A4j.Cart.fromString(""cartid"", ""Quantity"");
			assertEquals(""cartid"", c1.getCartId());
			assertNotNull(c2);
			c1.setCartId(""cartid"");
			ShoppingCart c3 = A4j.Cart.fromString(""cartid"", ""Quantity"");
			assertEquals(""cartid"", c1.getCartId());
			assertEquals(""Quantity"", c2.getQuotationStatus());
			assertNotEquals(""cartid"", c3.getCartId());
			assertNotEquals(""cartid"", c2.getCartId());
			assertNotEquals(""cartid"", c3.getCartId());
		}

}
"
