ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
4093e76c-6773-4d1a-8a12-ae0cf474f373,/EvoSuiteBenchmark/original/42_asphodel/src/main/java/org/asphodel/parser/HtmlContentParser.java,62.34057807922363,stop,"// HtmlContentParser.java
package org.asphodel.parser;

import au.id.jericho.lib.html.Source;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;

/**
 * @author : sunwj
 * @since 0.1
 *        Date: Mar 31, 2007
 *        Time: 10:03:07 PM
 *        <p/>
 *        html content parser using Jericho
 * todo does it need to devided into 2 different implementation?
 */
public class HtmlContentParser implements StringContentParser, StreamContentParser {

    public String extractPlainText(String textContent) throws ContentParserException {
        Source contentSource = new Source(textContent);
        return contentSource.extractText();
    }
}
","// HtmlContentParserTest.java
package org.asphodel.parser;

import au.id.jericho.lib.html.Source;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link HtmlContentParser}.
* It contains one unit test case for the {@link HtmlContentParser#extractPlainText(String)} method.
*/
class HtmlContentParserTest {","// HtmlContentParserTest.java
package org.asphodel.parser;

import au.id.jericho.lib.html.Source;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link HtmlContentParser}.
* It contains one unit test case for the {@link HtmlContentParser#extractPlainText(String)} method.
*/
class HtmlContentParserTest {
Log log = LogFactory.getLog(this.getClass().getName());
		TestCase tcase;

		public HtmlContentParserTest() {
		}

    
		@Test
		public void test() throws IOException {
            String url = ""http://idl.idlh.org/IDL/html/element.html#e1d2fa4d6b00f8dc8c9e085d0e17f31e"";
			tcase = new TestCase(url, ""html content"");
			log.info(tcase.getMethodName());
			String result;
			try {
				InputStream reader = this.getClass().getResourceAsStream(""test.txt"");
				Reader r = new com.asphodel.parser.parser.IDLContentParser2().getInputStreamReader(reader);
				result = this.extractPlainText(tcase.getRequestInfo().getRequestUrl().openStream());
				tcase.tearDown();
			} catch (Throwable t) {
				tcase.tearDown();
				t.printStackTrace();
				fail(t.getMessage());
			}
			assertEquals( result, tcase.getExpected(), tcase.getErrorMessage());
    }
}
"
