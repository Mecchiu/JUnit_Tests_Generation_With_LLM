[
{
    "choices": [
        {
            "finish_reason": "ERROR - CUDA error: device-side assert triggered\nCUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.",
            "text": ""
        }
    ],
    "id": "c2cf1a3e-ce5c-4e2a-9072-63f4bf61e485",
    "prompt_id": "/EvoSuiteBenchmark/original/8_gfarcegestionfa/src/main/java/fr/unice/gfarce/interGraph/FenetrePrincipale_0Test.java",
    "original_code": "// FenetrePrincipale.java\npackage fr.unice.gfarce.interGraph;\n\n/**\n * classe qui dessine toute l interphace graphique\n */\nimport java.awt.Dimension;\nimport java.awt.FlowLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.ItemEvent;\nimport java.awt.event.ItemListener;\nimport java.awt.event.KeyEvent;\nimport java.util.Calendar;\nimport javax.swing.Box;\nimport javax.swing.ImageIcon;\nimport javax.swing.JButton;\nimport javax.swing.JCheckBox;\nimport javax.swing.JComboBox;\nimport javax.swing.JComponent;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JMenuItem;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTabbedPane;\nimport javax.swing.JTable;\nimport javax.swing.JTextArea;\nimport javax.swing.JTextField;\nimport javax.swing.ListSelectionModel;\nimport fr.unice.gfarce.identity.Candidat;\nimport fr.unice.gfarce.identity.Formation;\nimport fr.unice.gfarce.identity.Identite;\nimport fr.unice.gfarce.identity.RespFormation;\nimport fr.unice.gfarce.main.Controler;\n\npublic class FenetrePrincipale extends JFrame implements ItemListener, ActionListener {\n\n    /**\n     */\n    private static final long serialVersionUID = 1L;\n\n    static JTextField textFieldNomResponsable;\n\n    static JTextField textFieldPrenomResponsable;\n\n    static JComboBox comboBoxSexeResponsable;\n\n    static JTextField textFieldEmailResponsable;\n\n    static JTextField textFieldTelResponsable;\n\n    static JTable tableResp;\n\n    static JTextField outputNomResp;\n\n    static JTextField outputPrenomResp;\n\n    static JTextField outputSexeResp;\n\n    static JTextField outputEmailResp;\n\n    static JTextField outputTelResp;\n\n    static JTextField textFieldTitreFormation;\n\n    static JComponent comboBoxDateLimiteFormation;\n\n    static JTextField textFieldPrixDeLaFormation;\n\n    static JComboBox comboBoxResponsableDeLaFormation;\n\n    static JComboBox comboBoxJourDLM;\n\n    static JComboBox comboBoxMoisDLM;\n\n    static JComboBox comboBoxAnneeDLM;\n\n    static JTable tableFormation;\n\n    static JTextField outputTitreFormation;\n\n    static JTextField outputDateLimiteFormation;\n\n    static JTextField outputPrixFormation;\n\n    static JTextField outputRespFormation;\n\n    ModifTableStockage modifTableStockage;\n\n    static JTextField textFieldNomEtudiant;\n\n    static JTextField textFieldPrenomEtudiant;\n\n    static JComboBox comboBoxSexeEtudiant;\n\n    static JTextField textFieldEmailEtudiant;\n\n    static JComponent textFieldPhotoEtudiants;\n\n    static JComponent comboBoxDateNaissanceEtudiant;\n\n    static JTextField textFieldDiplomeEtudiant;\n\n    static JTextField textFieldNationnaliteEtudiant;\n\n    static JTextField textFieldPhotoEtudiant;\n\n    static JComboBox comboBoxJourDDNEtu;\n\n    static JComboBox comboBoxMoisDDNEtu;\n\n    static JComboBox comboBoxAnneeDDNEtu;\n\n    static JComboBox comboBoxFormation1;\n\n    static JComboBox comboBoxFormation2;\n\n    static JTextArea outputRespArea;\n\n    static JLabel titreArea;\n\n    String[] columnNamesResp = { \"Nom\", \"Prenom\", \"Sexe\", \"Email\", \"Telephone\" };\n\n    static JTable tableEtu;\n\n    ListSelectionModel listSelectionModel;\n\n    static JTextField outputNom;\n\n    static JTextField outputPrenom;\n\n    static JTextField outputSexe;\n\n    static JTextField outputEmail;\n\n    static JTextField outputDateDeNaissance;\n\n    static JLabel outputPhoto;\n\n    static JTextField outputDiplome;\n\n    static JTextField outputNationalite;\n\n    static JTextField outputFormation;\n\n    static JCheckBox checkBoxAccept;\n\n    static JCheckBox checkBoxBourse;\n\n    static boolean accept;\n\n    static boolean bourse;\n\n    static JTextField montant;\n\n    Object[][] dataResp;\n\n    Zmodel modelResp;\n\n    Zmodel modelForm;\n\n    Zmodel modelEtu;\n\n    Controler c;\n\n    ImageIcon photoEtu;\n\n    String[] columnNamesFormation = { \"Titre de la formation\", \"Date limite\", \"Prix\", \"Responsable\" };\n\n    Object[][] dataFormation;\n\n    String[] columnNamesEtu = { \"Nom\", \"Prenom\", \"Sexe\", \"Email\", \"Date de naissance\", \"Photo\", \"Diplome\", \"Nationalite\", \"Formation\", \"Acceptation\", \"Bourse\" };\n\n    static Object[][] dataEtu;\n\n    /**\n     * constructeur qui cree l interface graphique\n     * @param c\n     */\n    public FenetrePrincipale(Controler c) {\n    }\n\n    /**\n     * creation de la matrice pour la liste deroulante\n     * @return matrice pour la liste deroulante responsable\n     */\n    private Object[][] createListeDeroulanteResponsable();\n\n    /**\n     * creation de la matrice pour la liste deroulante\n     * @return matrice pour la liste deroulante formation\n     */\n    private Object[][] createListeDeroulanteFormation();\n\n    /**\n     * creation de la matrice pour la liste deroulante\n     * @return matrice pour la liste deroulante etudiant\n     */\n    private Object[][] createListeDeroulanteEtudiant();\n\n    /**\n     * creation de la barre d outil\n     * @return creation de la barre d outil\n     */\n    void buildBarreDOutil();\n\n    public void buildOnglet();\n\n    /*\n\t * \treunion des de la creation du premiere ongle\n\t */\n    JComponent makeFormulaireResponsable();\n\n    /*\n\t * \t\n\t * \n\t *\t\t|nom :    |\n\t *\t\t|prenom : |\n\t *\t\t|sexe :   |\n\t *\t\t|email :  |\n\t */\n    JComponent makeFormultext();\n\n    /*\n\t * \n\t * \t\t|textField|\n\t * \t\t|textField|\n\t * \t\t|textField|\n\t * \t\t|textField|\n\t * \n\t */\n    JComponent makeFormulTextField();\n\n    JComponent makeModifierResponsable();\n\n    JComponent makeFormulaireFormation();\n\n    JComponent makeFormultextFormation();\n\n    JComponent makeFormulTextFieldFormation();\n\n    JComponent makeDateDeLaFormation();\n\n    JComponent makeModifierFormation();\n\n    /*\n\t * \treunion des de la creation du troisieme ongle\n\t */\n    JComponent makeFormulaireEtudiant();\n\n    JComponent makeFormultextEtudiant();\n\n    JComponent makeFormulTextFieldEtudiant();\n\n    JComponent makeChargeImage();\n\n    JComponent makeDateDeNaissance();\n\n    JComponent makeValidation();\n\n    public void actionPerformed(ActionEvent e);\n\n    /**\n     * Lit les checkbox\n     */\n    public void itemStateChanged(ItemEvent e);\n\n    /**\n     * date de la formation\n     * @return la date de la formation sous forme de String\n     */\n    public String dateLimForm();\n\n    /**\n     * date de naissance\n     * @return la date de naissance sous form de String\n     */\n    public String dateDeNaiss();\n\n    /**\n     * pour l icone\n     * @return une image icon, ou null si le chemin est invalide\n     */\n    protected static ImageIcon createImageIcon(String path);\n\n    /**\n     * creation de la fenetre principale\n     */\n    private void build();\n\n    /**\n     * verification si les champ sont editable ou pas\n     */\n    public void afficheSiCelluleEditable();\n}\n",
    "test_prompt": "// FenetrePrincipale_0Test.java\npackage fr.unice.gfarce.interGraph;\n\n/**\n * classe qui dessine toute l interphace graphique\n */\nimport java.awt.Dimension;\nimport java.awt.FlowLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.ItemEvent;\nimport java.awt.event.ItemListener;\nimport java.awt.event.KeyEvent;\nimport java.util.Calendar;\nimport javax.swing.Box;\nimport javax.swing.ImageIcon;\nimport javax.swing.JButton;\nimport javax.swing.JCheckBox;\nimport javax.swing.JComboBox;\nimport javax.swing.JComponent;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JMenuItem;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTabbedPane;\nimport javax.swing.JTable;\nimport javax.swing.JTextArea;\nimport javax.swing.JTextField;\nimport javax.swing.ListSelectionModel;\nimport fr.unice.gfarce.identity.Candidat;\nimport fr.unice.gfarce.identity.Formation;\nimport fr.unice.gfarce.identity.Identite;\nimport fr.unice.gfarce.identity.RespFormation;\nimport fr.unice.gfarce.main.Controler;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link FenetrePrincipale}.\n* It contains one unit test case for the {@link FenetrePrincipale#dateLimForm()} method.\n*/\nclass FenetrePrincipale_0Test {",
    "time_taken": -1
},
{
    "choices": [
        {
            "finish_reason": "ERROR - CUDA error: device-side assert triggered\nCUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.",
            "text": ""
        }
    ],
    "id": "8ccc3905-d5e1-4c29-83fc-bd638cb13e40",
    "prompt_id": "/EvoSuiteBenchmark/original/8_gfarcegestionfa/src/main/java/fr/unice/gfarce/interGraph/FenetrePrincipale_1Test.java",
    "original_code": "// FenetrePrincipale.java\npackage fr.unice.gfarce.interGraph;\n\n/**\n * classe qui dessine toute l interphace graphique\n */\nimport java.awt.Dimension;\nimport java.awt.FlowLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.ItemEvent;\nimport java.awt.event.ItemListener;\nimport java.awt.event.KeyEvent;\nimport java.util.Calendar;\nimport javax.swing.Box;\nimport javax.swing.ImageIcon;\nimport javax.swing.JButton;\nimport javax.swing.JCheckBox;\nimport javax.swing.JComboBox;\nimport javax.swing.JComponent;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JMenuItem;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTabbedPane;\nimport javax.swing.JTable;\nimport javax.swing.JTextArea;\nimport javax.swing.JTextField;\nimport javax.swing.ListSelectionModel;\nimport fr.unice.gfarce.identity.Candidat;\nimport fr.unice.gfarce.identity.Formation;\nimport fr.unice.gfarce.identity.Identite;\nimport fr.unice.gfarce.identity.RespFormation;\nimport fr.unice.gfarce.main.Controler;\n\npublic class FenetrePrincipale extends JFrame implements ItemListener, ActionListener {\n\n    /**\n     */\n    private static final long serialVersionUID = 1L;\n\n    static JTextField textFieldNomResponsable;\n\n    static JTextField textFieldPrenomResponsable;\n\n    static JComboBox comboBoxSexeResponsable;\n\n    static JTextField textFieldEmailResponsable;\n\n    static JTextField textFieldTelResponsable;\n\n    static JTable tableResp;\n\n    static JTextField outputNomResp;\n\n    static JTextField outputPrenomResp;\n\n    static JTextField outputSexeResp;\n\n    static JTextField outputEmailResp;\n\n    static JTextField outputTelResp;\n\n    static JTextField textFieldTitreFormation;\n\n    static JComponent comboBoxDateLimiteFormation;\n\n    static JTextField textFieldPrixDeLaFormation;\n\n    static JComboBox comboBoxResponsableDeLaFormation;\n\n    static JComboBox comboBoxJourDLM;\n\n    static JComboBox comboBoxMoisDLM;\n\n    static JComboBox comboBoxAnneeDLM;\n\n    static JTable tableFormation;\n\n    static JTextField outputTitreFormation;\n\n    static JTextField outputDateLimiteFormation;\n\n    static JTextField outputPrixFormation;\n\n    static JTextField outputRespFormation;\n\n    ModifTableStockage modifTableStockage;\n\n    static JTextField textFieldNomEtudiant;\n\n    static JTextField textFieldPrenomEtudiant;\n\n    static JComboBox comboBoxSexeEtudiant;\n\n    static JTextField textFieldEmailEtudiant;\n\n    static JComponent textFieldPhotoEtudiants;\n\n    static JComponent comboBoxDateNaissanceEtudiant;\n\n    static JTextField textFieldDiplomeEtudiant;\n\n    static JTextField textFieldNationnaliteEtudiant;\n\n    static JTextField textFieldPhotoEtudiant;\n\n    static JComboBox comboBoxJourDDNEtu;\n\n    static JComboBox comboBoxMoisDDNEtu;\n\n    static JComboBox comboBoxAnneeDDNEtu;\n\n    static JComboBox comboBoxFormation1;\n\n    static JComboBox comboBoxFormation2;\n\n    static JTextArea outputRespArea;\n\n    static JLabel titreArea;\n\n    String[] columnNamesResp = { \"Nom\", \"Prenom\", \"Sexe\", \"Email\", \"Telephone\" };\n\n    static JTable tableEtu;\n\n    ListSelectionModel listSelectionModel;\n\n    static JTextField outputNom;\n\n    static JTextField outputPrenom;\n\n    static JTextField outputSexe;\n\n    static JTextField outputEmail;\n\n    static JTextField outputDateDeNaissance;\n\n    static JLabel outputPhoto;\n\n    static JTextField outputDiplome;\n\n    static JTextField outputNationalite;\n\n    static JTextField outputFormation;\n\n    static JCheckBox checkBoxAccept;\n\n    static JCheckBox checkBoxBourse;\n\n    static boolean accept;\n\n    static boolean bourse;\n\n    static JTextField montant;\n\n    Object[][] dataResp;\n\n    Zmodel modelResp;\n\n    Zmodel modelForm;\n\n    Zmodel modelEtu;\n\n    Controler c;\n\n    ImageIcon photoEtu;\n\n    String[] columnNamesFormation = { \"Titre de la formation\", \"Date limite\", \"Prix\", \"Responsable\" };\n\n    Object[][] dataFormation;\n\n    String[] columnNamesEtu = { \"Nom\", \"Prenom\", \"Sexe\", \"Email\", \"Date de naissance\", \"Photo\", \"Diplome\", \"Nationalite\", \"Formation\", \"Acceptation\", \"Bourse\" };\n\n    static Object[][] dataEtu;\n\n    /**\n     * constructeur qui cree l interface graphique\n     * @param c\n     */\n    public FenetrePrincipale(Controler c) {\n    }\n\n    /**\n     * creation de la matrice pour la liste deroulante\n     * @return matrice pour la liste deroulante responsable\n     */\n    private Object[][] createListeDeroulanteResponsable();\n\n    /**\n     * creation de la matrice pour la liste deroulante\n     * @return matrice pour la liste deroulante formation\n     */\n    private Object[][] createListeDeroulanteFormation();\n\n    /**\n     * creation de la matrice pour la liste deroulante\n     * @return matrice pour la liste deroulante etudiant\n     */\n    private Object[][] createListeDeroulanteEtudiant();\n\n    /**\n     * creation de la barre d outil\n     * @return creation de la barre d outil\n     */\n    void buildBarreDOutil();\n\n    public void buildOnglet();\n\n    /*\n\t * \treunion des de la creation du premiere ongle\n\t */\n    JComponent makeFormulaireResponsable();\n\n    /*\n\t * \t\n\t * \n\t *\t\t|nom :    |\n\t *\t\t|prenom : |\n\t *\t\t|sexe :   |\n\t *\t\t|email :  |\n\t */\n    JComponent makeFormultext();\n\n    /*\n\t * \n\t * \t\t|textField|\n\t * \t\t|textField|\n\t * \t\t|textField|\n\t * \t\t|textField|\n\t * \n\t */\n    JComponent makeFormulTextField();\n\n    JComponent makeModifierResponsable();\n\n    JComponent makeFormulaireFormation();\n\n    JComponent makeFormultextFormation();\n\n    JComponent makeFormulTextFieldFormation();\n\n    JComponent makeDateDeLaFormation();\n\n    JComponent makeModifierFormation();\n\n    /*\n\t * \treunion des de la creation du troisieme ongle\n\t */\n    JComponent makeFormulaireEtudiant();\n\n    JComponent makeFormultextEtudiant();\n\n    JComponent makeFormulTextFieldEtudiant();\n\n    JComponent makeChargeImage();\n\n    JComponent makeDateDeNaissance();\n\n    JComponent makeValidation();\n\n    public void actionPerformed(ActionEvent e);\n\n    /**\n     * Lit les checkbox\n     */\n    public void itemStateChanged(ItemEvent e);\n\n    /**\n     * date de la formation\n     * @return la date de la formation sous forme de String\n     */\n    public String dateLimForm();\n\n    /**\n     * date de naissance\n     * @return la date de naissance sous form de String\n     */\n    public String dateDeNaiss();\n\n    /**\n     * pour l icone\n     * @return une image icon, ou null si le chemin est invalide\n     */\n    protected static ImageIcon createImageIcon(String path);\n\n    /**\n     * creation de la fenetre principale\n     */\n    private void build();\n\n    /**\n     * verification si les champ sont editable ou pas\n     */\n    public void afficheSiCelluleEditable();\n}\n",
    "test_prompt": "// FenetrePrincipale_1Test.java\npackage fr.unice.gfarce.interGraph;\n\n/**\n * classe qui dessine toute l interphace graphique\n */\nimport java.awt.Dimension;\nimport java.awt.FlowLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.ItemEvent;\nimport java.awt.event.ItemListener;\nimport java.awt.event.KeyEvent;\nimport java.util.Calendar;\nimport javax.swing.Box;\nimport javax.swing.ImageIcon;\nimport javax.swing.JButton;\nimport javax.swing.JCheckBox;\nimport javax.swing.JComboBox;\nimport javax.swing.JComponent;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JMenuItem;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTabbedPane;\nimport javax.swing.JTable;\nimport javax.swing.JTextArea;\nimport javax.swing.JTextField;\nimport javax.swing.ListSelectionModel;\nimport fr.unice.gfarce.identity.Candidat;\nimport fr.unice.gfarce.identity.Formation;\nimport fr.unice.gfarce.identity.Identite;\nimport fr.unice.gfarce.identity.RespFormation;\nimport fr.unice.gfarce.main.Controler;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link FenetrePrincipale}.\n* It contains one unit test case for the {@link FenetrePrincipale#dateDeNaiss()} method.\n*/\nclass FenetrePrincipale_1Test {",
    "time_taken": -1
},
{
    "choices": [
        {
            "finish_reason": "ERROR - CUDA error: device-side assert triggered\nCUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.",
            "text": ""
        }
    ],
    "id": "8d3bb321-5955-4207-8ade-f288168caa5d",
    "prompt_id": "/EvoSuiteBenchmark/original/8_gfarcegestionfa/src/main/java/fr/unice/gfarce/interGraph/ModifTableStockage_0Test.java",
    "original_code": "// ModifTableStockage.java\npackage fr.unice.gfarce.interGraph;\n\nimport javax.swing.JOptionPane;\n\npublic class ModifTableStockage {\n\n    // dimension de la table\n    private int nbColonnes = 0;\n\n    // avec la ligne de description (les noms des colonnes)\n    private int nbLignes = 0;\n\n    // la table d'origine (String[] nomColonnes ; Object[][] matrice;)\n    private TableStockage ts;\n\n    /**\n     * Constructeur : recuperation de la TableStockage et initialisation\n     *\n     * @param ts\n     */\n    public ModifTableStockage(TableStockage ts) {\n    }\n\n    /**\n     * G&eacute;n&egrave;re en sortie une TableStockage &agrave; partir de la table d'origine, mais avec une colonne en plus.\n     * Nouvelle colonne de nom \"nomNouvelleColonne\" et de type \"type\"\n     * Colonne Ajoutee a la fin de la JTable\n     * @param nomNouvelleColonne\n     * @param type\n     * @return TableStockage\n     */\n    public TableStockage ajouterColonne(String nomNouvelleColonne, Class<?> type);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine, avec une ligne en plus.\n     * Ligne ajoutee a la fin de la JTable\n     * @return TableStockage\n     */\n    public TableStockage ajouterLigne();\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine\n     * avec la colonne selectionnee en moins\n     * colonne d'indice donne en parametre supprimee\n     * @param indice\n     * @return TableStockage\n     */\n    public TableStockage supprimerColonne(int indice);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine,\n     * avec la ligne selectionnee en moins.\n     * ligne d'indice donne en parametre supprimee\n     * @param indice\n     * @return TableStockage\n     */\n    public TableStockage supprimerLigne(int indice);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine,\n     * avec la colonne d'indice donne en parametre separee.\n     * @param indice\n     * @return TableStockage\n     */\n    public TableStockage separerColonne(int indice);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine,\n     * avec la colonne d'indice donne en parametre fusionnee avec la colonne voisine de droite.\n     * @param indice\n     * @return TableStockage\n     */\n    public TableStockage fusionnerColonnes(int indice);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine,\n     * avec une nouvelle colonne de nom \"E-Mail\"\n     * Permettra a l'utilisateur de choisir a qui envoyer un mail pour la suite.\n     * @return TableStockage\n     */\n    public TableStockage colonneMail();\n\n    /**\n     * G&eacute;n&egrave;re en sortie une TableStockage, &agrave; partir de la table d'origine,\n     * avec seulement les lignes o&ugrave; les E-Mails ont &eacute;t&eacute; s&eacute;lectionn&eacute;\n     * @return TableStockage\n     */\n    public TableStockage selectMail();\n}\n",
    "test_prompt": "// ModifTableStockage_0Test.java\npackage fr.unice.gfarce.interGraph;\n\nimport javax.swing.JOptionPane;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ModifTableStockage}.\n* It contains one unit test case for the {@link ModifTableStockage#ajouterLigne()} method.\n*/\nclass ModifTableStockage_0Test {",
    "time_taken": -1
},
{
    "choices": [
        {
            "finish_reason": "ERROR - CUDA error: device-side assert triggered\nCUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.",
            "text": ""
        }
    ],
    "id": "19e755d6-c450-4183-a4ba-f0a845f79093",
    "prompt_id": "/EvoSuiteBenchmark/original/8_gfarcegestionfa/src/main/java/fr/unice/gfarce/interGraph/ModifTableStockage_1Test.java",
    "original_code": "// ModifTableStockage.java\npackage fr.unice.gfarce.interGraph;\n\nimport javax.swing.JOptionPane;\n\npublic class ModifTableStockage {\n\n    // dimension de la table\n    private int nbColonnes = 0;\n\n    // avec la ligne de description (les noms des colonnes)\n    private int nbLignes = 0;\n\n    // la table d'origine (String[] nomColonnes ; Object[][] matrice;)\n    private TableStockage ts;\n\n    /**\n     * Constructeur : recuperation de la TableStockage et initialisation\n     *\n     * @param ts\n     */\n    public ModifTableStockage(TableStockage ts) {\n    }\n\n    /**\n     * G&eacute;n&egrave;re en sortie une TableStockage &agrave; partir de la table d'origine, mais avec une colonne en plus.\n     * Nouvelle colonne de nom \"nomNouvelleColonne\" et de type \"type\"\n     * Colonne Ajoutee a la fin de la JTable\n     * @param nomNouvelleColonne\n     * @param type\n     * @return TableStockage\n     */\n    public TableStockage ajouterColonne(String nomNouvelleColonne, Class<?> type);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine, avec une ligne en plus.\n     * Ligne ajoutee a la fin de la JTable\n     * @return TableStockage\n     */\n    public TableStockage ajouterLigne();\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine\n     * avec la colonne selectionnee en moins\n     * colonne d'indice donne en parametre supprimee\n     * @param indice\n     * @return TableStockage\n     */\n    public TableStockage supprimerColonne(int indice);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine,\n     * avec la ligne selectionnee en moins.\n     * ligne d'indice donne en parametre supprimee\n     * @param indice\n     * @return TableStockage\n     */\n    public TableStockage supprimerLigne(int indice);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine,\n     * avec la colonne d'indice donne en parametre separee.\n     * @param indice\n     * @return TableStockage\n     */\n    public TableStockage separerColonne(int indice);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine,\n     * avec la colonne d'indice donne en parametre fusionnee avec la colonne voisine de droite.\n     * @param indice\n     * @return TableStockage\n     */\n    public TableStockage fusionnerColonnes(int indice);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine,\n     * avec une nouvelle colonne de nom \"E-Mail\"\n     * Permettra a l'utilisateur de choisir a qui envoyer un mail pour la suite.\n     * @return TableStockage\n     */\n    public TableStockage colonneMail();\n\n    /**\n     * G&eacute;n&egrave;re en sortie une TableStockage, &agrave; partir de la table d'origine,\n     * avec seulement les lignes o&ugrave; les E-Mails ont &eacute;t&eacute; s&eacute;lectionn&eacute;\n     * @return TableStockage\n     */\n    public TableStockage selectMail();\n}\n",
    "test_prompt": "// ModifTableStockage_1Test.java\npackage fr.unice.gfarce.interGraph;\n\nimport javax.swing.JOptionPane;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ModifTableStockage}.\n* It contains one unit test case for the {@link ModifTableStockage#colonneMail()} method.\n*/\nclass ModifTableStockage_1Test {",
    "time_taken": -1
},
{
    "choices": [
        {
            "finish_reason": "ERROR - CUDA error: device-side assert triggered\nCUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.",
            "text": ""
        }
    ],
    "id": "08bd69b3-2a19-4b41-b16c-18c055ebd5b1",
    "prompt_id": "/EvoSuiteBenchmark/original/8_gfarcegestionfa/src/main/java/fr/unice/gfarce/interGraph/ModifTableStockage_2Test.java",
    "original_code": "// ModifTableStockage.java\npackage fr.unice.gfarce.interGraph;\n\nimport javax.swing.JOptionPane;\n\npublic class ModifTableStockage {\n\n    // dimension de la table\n    private int nbColonnes = 0;\n\n    // avec la ligne de description (les noms des colonnes)\n    private int nbLignes = 0;\n\n    // la table d'origine (String[] nomColonnes ; Object[][] matrice;)\n    private TableStockage ts;\n\n    /**\n     * Constructeur : recuperation de la TableStockage et initialisation\n     *\n     * @param ts\n     */\n    public ModifTableStockage(TableStockage ts) {\n    }\n\n    /**\n     * G&eacute;n&egrave;re en sortie une TableStockage &agrave; partir de la table d'origine, mais avec une colonne en plus.\n     * Nouvelle colonne de nom \"nomNouvelleColonne\" et de type \"type\"\n     * Colonne Ajoutee a la fin de la JTable\n     * @param nomNouvelleColonne\n     * @param type\n     * @return TableStockage\n     */\n    public TableStockage ajouterColonne(String nomNouvelleColonne, Class<?> type);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine, avec une ligne en plus.\n     * Ligne ajoutee a la fin de la JTable\n     * @return TableStockage\n     */\n    public TableStockage ajouterLigne();\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine\n     * avec la colonne selectionnee en moins\n     * colonne d'indice donne en parametre supprimee\n     * @param indice\n     * @return TableStockage\n     */\n    public TableStockage supprimerColonne(int indice);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine,\n     * avec la ligne selectionnee en moins.\n     * ligne d'indice donne en parametre supprimee\n     * @param indice\n     * @return TableStockage\n     */\n    public TableStockage supprimerLigne(int indice);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine,\n     * avec la colonne d'indice donne en parametre separee.\n     * @param indice\n     * @return TableStockage\n     */\n    public TableStockage separerColonne(int indice);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine,\n     * avec la colonne d'indice donne en parametre fusionnee avec la colonne voisine de droite.\n     * @param indice\n     * @return TableStockage\n     */\n    public TableStockage fusionnerColonnes(int indice);\n\n    /**\n     * Genere en sortie une TableStockage, a partir de la table d'origine,\n     * avec une nouvelle colonne de nom \"E-Mail\"\n     * Permettra a l'utilisateur de choisir a qui envoyer un mail pour la suite.\n     * @return TableStockage\n     */\n    public TableStockage colonneMail();\n\n    /**\n     * G&eacute;n&egrave;re en sortie une TableStockage, &agrave; partir de la table d'origine,\n     * avec seulement les lignes o&ugrave; les E-Mails ont &eacute;t&eacute; s&eacute;lectionn&eacute;\n     * @return TableStockage\n     */\n    public TableStockage selectMail();\n}\n",
    "test_prompt": "// ModifTableStockage_2Test.java\npackage fr.unice.gfarce.interGraph;\n\nimport javax.swing.JOptionPane;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ModifTableStockage}.\n* It contains one unit test case for the {@link ModifTableStockage#selectMail()} method.\n*/\nclass ModifTableStockage_2Test {",
    "time_taken": -1
},
{
    "choices": [
        {
            "finish_reason": "ERROR - CUDA error: device-side assert triggered\nCUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.\nFor debugging consider passing CUDA_LAUNCH_BLOCKING=1.",
            "text": ""
        }
    ],
    "id": "1382ee9c-eefc-4b98-8f74-d86f9f54bfaa",
    "prompt_id": "/EvoSuiteBenchmark/original/8_gfarcegestionfa/src/main/java/fr/unice/gfarce/main/Controler.java",
    "original_code": "// Controler.java\npackage fr.unice.gfarce.main;\n\nimport java.io.IOException;\nimport java.text.ParseException;\nimport java.util.Calendar;\nimport java.util.Collection;\nimport jxl.write.WriteException;\nimport jxl.write.biff.RowsExceededException;\nimport fr.unice.gfarce.dao.DaoFactory;\nimport fr.unice.gfarce.dao.DaoFactory.TypeFabrique;\nimport fr.unice.gfarce.dao.DaoFactoryException;\nimport fr.unice.gfarce.dao.FormationDao;\nimport fr.unice.gfarce.dao.IdentiteDao;\nimport fr.unice.gfarce.identity.Candidat;\nimport fr.unice.gfarce.identity.Formation;\nimport fr.unice.gfarce.identity.Identite;\nimport fr.unice.gfarce.identity.Identite.TypeIdentite;\nimport fr.unice.gfarce.identity.RespFormation;\nimport fr.unice.gfarce.interGraph.FenetreChoix;\nimport fr.unice.gfarce.xls.WritingXLS;\n\n/**\n * Fait la liaison entre l'interface graphique et le moteur de l'application\n * Rend comprehensible les requetes de l'interface graphique pour les bases de\n * donnees\n *\n * @author scarankle\n */\npublic class Controler {\n\n    DaoFactory df;\n\n    IdentiteDao idao;\n\n    FormationDao fdao;\n\n    Candidat[] tabcand;\n\n    String formationName;\n\n    TypeFabrique tf;\n\n    /**\n     * Constructeur initialisant les dao et le type de la base\n     * @param tf type de la base\n     * @throws DaoFactoryException\n     */\n    public Controler() throws DaoFactoryException {\n    }\n\n    public void setTypeDataBase(String type) throws DaoFactoryException;\n\n    public void launchDatabase() throws IOException;\n\n    /**\n     */\n    private void bdChoice(TypeFabrique tfab) throws DaoFactoryException;\n\n    /**\n     * Cree un candidat ou un responsable de formation et l'insert dans la base\n     * @param nom\n     * @param prenom\n     * @param sex\n     * @param email\n     * @param type\n     * @param date_naissance\n     * @param diplome\n     * @param photo\n     * @param nationalite\n     * @param telephone\n     * @param bourse\n     * @param acceptation\n     * @param formation\n     * @throws IOException\n     * @return le candidat ou le responsable de formation\n     */\n    public Identite createIdentite(String nom, String prenom, String sex, String email, TypeIdentite type, String date_naissance, String diplome, String photo, String nationalite, String telephone, int bourse, int acceptation, String formation) throws IOException;\n\n    /**\n     * cree un calendar a partir d'une string date de la forme dd/mm/yyyy\n     * @param date\n     * @return\n     */\n    private Calendar creerCalendar(String date);\n\n    /**\n     * cree une formation et l'enregistre dans la base\n     * @param titre\n     * @param date_limite\n     * @param montant\n     * @param responsable\n     * @return\n     */\n    public Formation createFormation(String titre, String date_limite, int montant, String responsable);\n\n    /**\n     * Cherche des candidats dans la base\n     * @param nom\n     * @param prenom\n     * @return un tableau contenant les candidats\n     */\n    public Candidat[] findCandidat(String nom, String prenom);\n\n    /**\n     * Cherche des responsables de formation dans la base\n     * @param nom\n     * @param prenom\n     * @return un tableau contenant les responsables de formation\n     */\n    public RespFormation[] findRespForm(String nom, String prenom);\n\n    /**\n     * Cherche des formations dans la base\n     * @param name\n     * @param date\n     * @return un tableau contenant les formations\n     */\n    public Formation[] findFormation(String name, String date);\n\n    /**\n     * Retourne toutes les formations\n     * @return un tableau contenant toutes les formations\n     */\n    public Formation[] findAllFormation();\n\n    /**\n     * Retourne tous les Candidats d'une formation donnee\n     * @param formation\n     * @param date\n     * @return tableau contenant tous les etudiants d'une formation donnee\n     */\n    public Candidat[] findCandidatInFormation(String formation, String date);\n\n    /**\n     * Exporte sous forme de fichier excel les candidats d'une formation\n     * @throws RowsExceededException\n     * @throws WriteException\n     * @throws IOException\n     * @throws ParseException\n     */\n    public void exportExcel(String form) throws RowsExceededException, WriteException, IOException, ParseException;\n\n    /**\n     * Fait un update d'un candidat\n     * @param nom\n     * @param prenom\n     * @param sex\n     * @param email\n     * @param date_naissance\n     * @param diplome\n     * @param photo\n     * @param nationalite\n     * @param bourse\n     * @param acceptation\n     * @param formation\n     * @throws Exception\n     */\n    public void updateCandidat(String nom, String prenom, String sex, String email, String date_naissance, String diplome, byte[] photo, String nationalite, int bourse, String acceptation, String formation) throws Exception;\n\n    /**\n     * Fait un update d'un responsable\n     * @param nom\n     * @param prenom\n     * @param sex\n     * @param email\n     * @param telephone\n     * @throws Exception\n     */\n    public void updateResponsable(String nom, String prenom, String sex, String email, String telephone) throws Exception;\n\n    /**\n     * Fait un update d'une formation\n     * @param titre\n     * @param date_limite\n     * @param montant\n     * @param responsable\n     */\n    public void updateFormation(String titre, String date_limite, int montant, String responsable);\n\n    /**\n     * Enleve un candidat ou un responsable de formation de la base\n     * @param nom\n     * @param prenom\n     */\n    public void deleteIdentite(String nom, String prenom, TypeIdentite type);\n\n    /**\n     * Enleve une formation de la base\n     * @param nom\n     * @param date\n     */\n    public void deleteFormation(String nom, String date);\n}\n",
    "test_prompt": "// ControlerTest.java\npackage fr.unice.gfarce.main;\n\nimport java.io.IOException;\nimport java.text.ParseException;\nimport java.util.Calendar;\nimport java.util.Collection;\nimport jxl.write.WriteException;\nimport jxl.write.biff.RowsExceededException;\nimport fr.unice.gfarce.dao.DaoFactory;\nimport fr.unice.gfarce.dao.DaoFactory.TypeFabrique;\nimport fr.unice.gfarce.dao.DaoFactoryException;\nimport fr.unice.gfarce.dao.FormationDao;\nimport fr.unice.gfarce.dao.IdentiteDao;\nimport fr.unice.gfarce.identity.Candidat;\nimport fr.unice.gfarce.identity.Formation;\nimport fr.unice.gfarce.identity.Identite;\nimport fr.unice.gfarce.identity.Identite.TypeIdentite;\nimport fr.unice.gfarce.identity.RespFormation;\nimport fr.unice.gfarce.interGraph.FenetreChoix;\nimport fr.unice.gfarce.xls.WritingXLS;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Controler}.\n* It contains one unit test case for the {@link Controler#findAllFormation()} method.\n*/\nclass ControlerTest {",
    "time_taken": -1
}
]