[
  {
    "numberTests": "ten",
    "original_code": "// DefaultFSPath.java\npackage net.sf.sugar.fspath;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.text.DateFormat;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.Map;\nimport javax.xml.namespace.QName;\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.parsers.ParserConfigurationException;\nimport javax.xml.xpath.XPath;\nimport javax.xml.xpath.XPathConstants;\nimport javax.xml.xpath.XPathExpressionException;\nimport javax.xml.xpath.XPathFactory;\nimport net.sf.sugar.fspath.xpath.RegexFunctionResolver;\nimport org.w3c.dom.Attr;\nimport org.w3c.dom.Document;\nimport org.w3c.dom.Element;\nimport org.w3c.dom.Node;\nimport org.w3c.dom.NodeList;\n\n/**\n *  The default implementation of the FSPath interface.\n *  This class uses the JDK\u0027s XPath implementation as the basis for\n *  FSPath queries.\n *  On instantiation, a DOM is created of the filesystem metadata starting form the \u003ccode\u003erootDirectory\u003c/code\u003e.\n *  This DOM can then be queried using standard XML tools.\n *  \u003cbr/\u003e\n *  Whilst this approach has been relatively quick to implement, it is still tied to the limitations of XPath.\n *  Future implementations of this class are likely to implement the FSPath language fully themselves wthout relying on XPath.\n *  \u003cbr/\u003e\n *  todo: develop some front end substitution to enable the short queries i.e. /var/www etc\n *\n * @author keith\n *  $Id$\n */\npublic class DefaultFSPath implements FSPath {\n\n    /**\n     *  Calls this.query(expression, XPathConstants.NODESET)\n     *\n     *  Note : This method MUST be passed an expression which returns a nodeset.\n     *\n     * @param expression the FSPath expression to execute.\n     * @returns \u003ccode\u003eFSPathResultList\u003c/code\u003e the FSPathResult objects contained\n     *  in this list will be of type \u003ccode\u003ejava.io.File\u003c/code\u003e,\n     *  \u003ccode\u003ejava.lang.Double\u003c/code\u003e, \u003ccode\u003ejava.lang.Boolean\u003c/code\u003e,\n     *  \u003ccode\u003ejava.lang.String\u003c/code\u003e\n     */\n    public FSPathResultList query(String expression) {\n        return this.query(expression, XPathConstants.NODESET);\n    }\n\n    /**\n     */\n    public FSPathResultList query(String expression, QName returnType);\n}\n",
    "package": "net.sf.sugar.fspath",
    "classname": "DefaultFSPath",
    "id": "/EvoSuiteBenchmark/original/60_sugar/src/main/java/net/sf/sugar/fspath/DefaultFSPath.java",
    "test_prompt": "// DefaultFSPathTest.java\npackage net.sf.sugar.fspath;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.text.DateFormat;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.Map;\nimport javax.xml.namespace.QName;\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.parsers.ParserConfigurationException;\nimport javax.xml.xpath.XPath;\nimport javax.xml.xpath.XPathConstants;\nimport javax.xml.xpath.XPathExpressionException;\nimport javax.xml.xpath.XPathFactory;\nimport net.sf.sugar.fspath.xpath.RegexFunctionResolver;\nimport org.w3c.dom.Attr;\nimport org.w3c.dom.Document;\nimport org.w3c.dom.Element;\nimport org.w3c.dom.Node;\nimport org.w3c.dom.NodeList;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link DefaultFSPath}.\n* It contains ten unit test cases for the {@link DefaultFSPath#query(String)} method.\n*/\nclass DefaultFSPathTest {",
    "method_signature": "query(String)",
    "suffix": ""
  },
  {
    "numberTests": "ten",
    "original_code": "// FSPathFactory.java\npackage net.sf.sugar.fspath;\n\nimport java.io.File;\n\n/**\n * @author kbishop\n */\npublic class FSPathFactory {\n\n    /**\n     * @returns FSPath a new DefaultFSPath instance which uses the current user directory (System.getProperty(\"user.dir\")) to search from.\n     */\n    public static FSPath newFSPath() {\n        return new DefaultFSPath(new File(System.getProperty(\"user.dir\")));\n    }\n}\n",
    "package": "net.sf.sugar.fspath",
    "classname": "FSPathFactory",
    "id": "/EvoSuiteBenchmark/original/60_sugar/src/main/java/net/sf/sugar/fspath/FSPathFactory.java",
    "test_prompt": "// FSPathFactoryTest.java\npackage net.sf.sugar.fspath;\n\nimport java.io.File;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link FSPathFactory}.\n* It contains ten unit test cases for the {@link FSPathFactory#newFSPath()} method.\n*/\nclass FSPathFactoryTest {",
    "method_signature": "newFSPath()",
    "suffix": ""
  },
  {
    "numberTests": "ten",
    "original_code": "// FSPathResultListImpl.java\npackage net.sf.sugar.fspath;\n\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\n/**\n * @author kbishop\n * @version $Id$\n */\npublic class FSPathResultListImpl extends ArrayList\u003cFSPathResult\u003e implements FSPathResultList {\n\n    /**\n     *  A convenience method for defining custom filesystem interaction\n     *  across the whole list of results.\n     *\n     *  This method loops through the results and calls the call(Result result)\n     *  method of the Callback class passed to it for each individual result.\n     *\n     * @param Callback - a custom implementation of the Callback interface.\n     * @throws IOException\n     */\n    public FSPathResultList each(Callback callback) throws IOException {\n        for (FSPathResult result : this) {\n            callback.call(result);\n        }\n        return this;\n    }\n}\n\n/**\n *  A general purpose interface for implementing a callback class.\n *\n *  Use of callbacks gives deveopers using this api a simple way of extending the\n *  functionality of the api, while preserving the simplicity of the api.\n *\n *  Calbacks are used in the each() method of FSPathResultList, and the onFailure() method\n *  of FSPathResultModificationList.\n *  \u003cbr/\u003e\n *  The simplest way to implement this interface is as an anonymous inner class.\n *\n *  For example :\n *  \u003cpre\u003e\n *  result \u003d fspath.query(\"/dir\")\n *                 .each(new Callback() {\n *                         public void call(FSPathResult result) {\n *                         File file \u003d result.getFile();\n *                         System.out.println(file.getName() + \" has : \"\n *                           + file.listFiles().size() + \" children\");\n *                         }\n *                        });\n * \u003c/pre\u003e\n * This would list the number of children of each directory below the current\n * directory.\n *\n * @author kbishop\n */\npublic interface Callback {\n\n    /**\n     *  This method will be called by any FSPathResultList implementation method\n     *  which takes a Callback implementation class as a parameter.\n     *\n     *  For instance the onFailure method of \u003ccode\u003eFSPathResultDeletionList\u003c/code\u003e will invoke\n     *  this call method once for every failed deletion.\n     *\n     * @param FSPathResult an FSPathResult object on which to operate on.\n     */\n    public void call(FSPathResult result);\n}\n",
    "package": "net.sf.sugar.fspath",
    "classname": "FSPathResultListImpl",
    "id": "/EvoSuiteBenchmark/original/60_sugar/src/main/java/net/sf/sugar/fspath/FSPathResultListImpl_0Test.java",
    "test_prompt": "// FSPathResultListImpl_0Test.java\npackage net.sf.sugar.fspath;\n\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link FSPathResultListImpl}.\n* It contains ten unit test cases for the {@link FSPathResultListImpl#each(Callback)} method.\n*/\nclass FSPathResultListImpl_0Test {",
    "method_signature": "each(Callback)",
    "suffix": "0"
  },
  {
    "numberTests": "ten",
    "original_code": "// FSPathResultListImpl.java\npackage net.sf.sugar.fspath;\n\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\n/**\n * This class is returned by the copy(), rename(), move() and delete() methods of FSPathResultList.\n *\n * @author kbishop\n */\npublic interface FSPathResultModificationList extends List\u003cFSPathResult\u003e {\n\n    public void addSuccess(FSPathResult successResult);\n\n    public void addFailure(FSPathResult failureResult);\n}\n\n/**\n * @author kbishop\n * @version $Id$\n */\npublic class FSPathResultListImpl extends ArrayList\u003cFSPathResult\u003e implements FSPathResultList {\n\n    /**\n     *  Deletes each file contained in this FSPathResultList.\n     *  \u003cbr/\u003e\n     *  \u003cpre\u003e\n     *  ************************************************************************\n     *  *               IMPORTANT !!!!!    Use with caution                    *\n     *  *   This method makes it extremely easy to trash your filesystem       *\n     *  *   Its advised that FSPath queries are tested thouroughly before use  *\n     *  *   in order to verify which files would be deleted                    *\n     *  *                                                                      *\n     *  ************************************************************************\n     *  \u003c/pre\u003e\n     *\n     * @returns FSPathResultModificationListImpl - all successfully deleted files\u003cbr/\u003e\n     *  will be added as a success, and the failures will be added as failures.\n     * @throws IOException - NOTE this method does not currently thrown an IOException\n     * @throws OperationNotPermittedException - this exception will be thrown if\u003cbr/\u003e\n     *  The FSPathResult objects contained in this FSPathResultList don\u0027t contain\u003cbr/\u003e\n     *  java.io.File objects\u003cbr/\u003e\n     *  (i.e the FSPath query was written to return Boolean, String nor numerical results).\n     */\n    public FSPathResultModificationList delete() throws IOException, OperationNotPermittedException {\n        if (!isListOfFiles()) {\n            throw new OperationNotPermittedException(\"Delete is only permitted on FSPathResult objects containing a File object\");\n        }\n        FSPathResultModificationList deletionList \u003d new FSPathResultModificationListImpl();\n        for (FSPathResult result : this) {\n            try {\n                File file \u003d result.getFile();\n                boolean success \u003d file.delete();\n                if (success) {\n                    deletionList.addSuccess(result);\n                } else {\n                    deletionList.addFailure(result);\n                }\n            } catch (Exception e) {\n                //todo: log this ?\n                deletionList.addFailure(result);\n            }\n        }\n        return deletionList;\n    }\n\n    public boolean isListOfFiles();\n}\n\n/**\n * This class is a simple wrapper for any of the possible result types\n * that may be returned by an FSPath query.\n *\n * Most FSPath queries are likely to return list of java.io.File object\n * which will be wrapped by an instance of this class.\n *\n * @author kbishop\n * @version $Id$\n */\npublic class FSPathResult {\n\n    public File getFile();\n}\n",
    "package": "net.sf.sugar.fspath",
    "classname": "FSPathResultListImpl",
    "id": "/EvoSuiteBenchmark/original/60_sugar/src/main/java/net/sf/sugar/fspath/FSPathResultListImpl_1Test.java",
    "test_prompt": "// FSPathResultListImpl_1Test.java\npackage net.sf.sugar.fspath;\n\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link FSPathResultListImpl}.\n* It contains ten unit test cases for the {@link FSPathResultListImpl#delete()} method.\n*/\nclass FSPathResultListImpl_1Test {",
    "method_signature": "delete()",
    "suffix": "1"
  }
]