[
  {
    "numberTests": "ten",
    "original_code": "// EnumeratedProperties.java\npackage ghm.follow.config;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Properties;\n\n/**\n * Extension of {@link java.util.Properties} which allows one to specify property values which are\n * Lists of Strings.\n *\n * @author \u003ca href\u003d\"mailto:greghmerrill@yahoo.com\"\u003eGreg Merrill\u003c/a\u003e\n */\npublic class EnumeratedProperties extends Properties {\n\n    /**\n     * Returns the List value of the property with the supplied key. Note that one can call\n     * getEnumeratedProperty() for a given key successfully if and only if setEnumeratedProperty()\n     * for that key was called some time beforehand. All members of the list returned will be\n     * Strings.\n     *\n     * @param key lookup of the enumerated property to be retrieved.\n     * @return list containing String values\n     */\n    public List\u003cString\u003e getEnumeratedProperty(String key);\n}\n",
    "package": "ghm.follow.config",
    "classname": "EnumeratedProperties",
    "id": "/EvoSuiteBenchmark/original/41_follow/src/main/java/ghm/follow/config/EnumeratedProperties.java",
    "test_prompt": "// EnumeratedPropertiesTest.java\npackage ghm.follow.config;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Properties;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link EnumeratedProperties}.\n* It contains ten unit test cases for the {@link EnumeratedProperties#getEnumeratedProperty(String)} method.\n*/\nclass EnumeratedPropertiesTest {",
    "method_signature": "getEnumeratedProperty(String)",
    "suffix": ""
  },
  {
    "numberTests": "ten",
    "original_code": "// JTextPaneDestination.java\npackage ghm.follow.io;\n\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JTextPane;\nimport javax.swing.text.BadLocationException;\n\n/**\n * Implementation of {@link OutputDestination} which appends Strings to a {@link JTextPane}.\n *\n * @see OutputDestination\n * @see JTextPane\n * @author \u003ca href\u003d\"mailto:carl.hall@gmail.com\"\u003eCarl Hall\u003c/a\u003e\n */\npublic class JTextPaneDestination implements OutputDestination {\n\n    /**\n     * @return whether caret will be automatically moved to the bottom of the text area when text is\n     *         appended\n     */\n    public boolean autoPositionCaret();\n}\n",
    "package": "ghm.follow.io",
    "classname": "JTextPaneDestination",
    "id": "/EvoSuiteBenchmark/original/41_follow/src/main/java/ghm/follow/io/JTextPaneDestination.java",
    "test_prompt": "// JTextPaneDestinationTest.java\npackage ghm.follow.io;\n\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JTextPane;\nimport javax.swing.text.BadLocationException;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link JTextPaneDestination}.\n* It contains ten unit test cases for the {@link JTextPaneDestination#autoPositionCaret()} method.\n*/\nclass JTextPaneDestinationTest {",
    "method_signature": "autoPositionCaret()",
    "suffix": ""
  },
  {
    "numberTests": "ten",
    "original_code": "// JTextComponentDestination.java\npackage ghm.follow.io;\n\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.text.BadLocationException;\nimport javax.swing.text.JTextComponent;\n\n/**\n * Implementation of {@link OutputDestination} which appends Strings to a {@link JTextComponent}.\n *\n * @see OutputDestination\n * @see JTextCompnent\n * @author \u003ca href\u003d\"mailto:carl.hall@gmail.com\"\u003eCarl Hall\u003c/a\u003e\n */\npublic class JTextComponentDestination extends FilterableOutputDestination {\n\n    /**\n     * @return whether caret will be automatically moved to the bottom of the text area when text is\n     *         appended\n     */\n    public boolean autoPositionCaret();\n}\n",
    "package": "ghm.follow.io",
    "classname": "JTextComponentDestination",
    "id": "/EvoSuiteBenchmark/original/41_follow/src/main/java/ghm/follow/io/JTextComponentDestination.java",
    "test_prompt": "// JTextComponentDestinationTest.java\npackage ghm.follow.io;\n\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.text.BadLocationException;\nimport javax.swing.text.JTextComponent;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link JTextComponentDestination}.\n* It contains ten unit test cases for the {@link JTextComponentDestination#autoPositionCaret()} method.\n*/\nclass JTextComponentDestinationTest {",
    "method_signature": "autoPositionCaret()",
    "suffix": ""
  },
  {
    "numberTests": "ten",
    "original_code": "// SearchableTextPane.java\npackage ghm.follow.search;\n\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Font;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JTextArea;\nimport javax.swing.plaf.ComponentUI;\nimport javax.swing.text.BadLocationException;\nimport javax.swing.text.Document;\nimport javax.swing.text.Element;\nimport javax.swing.text.Utilities;\nimport javax.swing.text.DefaultHighlighter.DefaultHighlightPainter;\n\npublic class SearchableTextPane extends JTextArea {\n\n    /**\n     * Searches for a term. If the term provided matches the last searched term, the last found\n     * position is used as a starting point.\u003cbr\u003e\n     * \u003cbr\u003e\n     * Developer note: this method isn\u0027t currently used.\n     *\n     * @param term The string for which to search.\n     * @return The position where the term was found.\u003cbr\u003e\n     *         If the term is null, empty or not found, -1 is returned.\n     */\n    public int search(String term);\n}\n",
    "package": "ghm.follow.search",
    "classname": "SearchableTextPane",
    "id": "/EvoSuiteBenchmark/original/41_follow/src/main/java/ghm/follow/search/SearchableTextPane_0Test.java",
    "test_prompt": "// SearchableTextPane_0Test.java\npackage ghm.follow.search;\n\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Font;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JTextArea;\nimport javax.swing.plaf.ComponentUI;\nimport javax.swing.text.BadLocationException;\nimport javax.swing.text.Document;\nimport javax.swing.text.Element;\nimport javax.swing.text.Utilities;\nimport javax.swing.text.DefaultHighlighter.DefaultHighlightPainter;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link SearchableTextPane}.\n* It contains ten unit test cases for the {@link SearchableTextPane#search(String)} method.\n*/\nclass SearchableTextPane_0Test {",
    "method_signature": "search(String)",
    "suffix": "0"
  },
  {
    "numberTests": "ten",
    "original_code": "// SearchableTextPane.java\npackage ghm.follow.search;\n\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Font;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JTextArea;\nimport javax.swing.plaf.ComponentUI;\nimport javax.swing.text.BadLocationException;\nimport javax.swing.text.Document;\nimport javax.swing.text.Element;\nimport javax.swing.text.Utilities;\nimport javax.swing.text.DefaultHighlighter.DefaultHighlightPainter;\n\npublic class SearchableTextPane extends JTextArea {\n\n    /**\n     * Searches for a term at the given starting position.\u003cbr\u003e\n     * \u003cbr\u003e\n     * Developer note: this method isn\u0027t currently used.\n     *\n     * @param term The string for which to search.\n     * @param startPos Where to start.\n     * @return The position where the term was found.\u003cbr\u003e\n     *         If the term is null, empty or not found, -1 is returned.\n     */\n    public int search(String term, int startPos);\n}\n",
    "package": "ghm.follow.search",
    "classname": "SearchableTextPane",
    "id": "/EvoSuiteBenchmark/original/41_follow/src/main/java/ghm/follow/search/SearchableTextPane_1Test.java",
    "test_prompt": "// SearchableTextPane_1Test.java\npackage ghm.follow.search;\n\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Font;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JTextArea;\nimport javax.swing.plaf.ComponentUI;\nimport javax.swing.text.BadLocationException;\nimport javax.swing.text.Document;\nimport javax.swing.text.Element;\nimport javax.swing.text.Utilities;\nimport javax.swing.text.DefaultHighlighter.DefaultHighlightPainter;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link SearchableTextPane}.\n* It contains ten unit test cases for the {@link SearchableTextPane#search(String, int)} method.\n*/\nclass SearchableTextPane_1Test {",
    "method_signature": "search(String, int)",
    "suffix": "1"
  },
  {
    "numberTests": "ten",
    "original_code": "// FileFollowingPane.java\npackage ghm.follow.gui;\n\nimport ghm.follow.FileFollower;\nimport ghm.follow.io.JTextComponentDestination;\nimport ghm.follow.io.OutputDestination;\nimport ghm.follow.search.SearchableTextPane;\nimport java.awt.Font;\nimport java.io.BufferedOutputStream;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JScrollPane;\nimport javax.swing.text.BadLocationException;\nimport javax.swing.text.Document;\n\n/**\n * A component which allows one to view a text file to which information is being asynchronously\n * appended.\n *\n * @author \u003ca href\u003d\"mailto:greghmerrill@yahoo.com\"\u003eGreg Merrill\u003c/a\u003e\n */\npublic class FileFollowingPane extends JScrollPane {\n\n    /**\n     * Returns whether caret is automatically repositioned to the end of the text area when text is\n     * appended to the followed file\n     *\n     * @return whether caret is automatically repositioned on append\n     */\n    public boolean autoPositionCaret();\n}\n",
    "package": "ghm.follow.gui",
    "classname": "FileFollowingPane",
    "id": "/EvoSuiteBenchmark/original/41_follow/src/main/java/ghm/follow/gui/FileFollowingPane.java",
    "test_prompt": "// FileFollowingPaneTest.java\npackage ghm.follow.gui;\n\nimport ghm.follow.FileFollower;\nimport ghm.follow.io.JTextComponentDestination;\nimport ghm.follow.io.OutputDestination;\nimport ghm.follow.search.SearchableTextPane;\nimport java.awt.Font;\nimport java.io.BufferedOutputStream;\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.swing.JScrollPane;\nimport javax.swing.text.BadLocationException;\nimport javax.swing.text.Document;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link FileFollowingPane}.\n* It contains ten unit test cases for the {@link FileFollowingPane#autoPositionCaret()} method.\n*/\nclass FileFollowingPaneTest {",
    "method_signature": "autoPositionCaret()",
    "suffix": ""
  },
  {
    "numberTests": "ten",
    "original_code": "// FileFollower.java\npackage ghm.follow;\n\nimport ghm.follow.io.OutputDestination;\nimport java.io.BufferedInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\n/**\n * Instances of this class \u0027follow\u0027 a particular text file, assmebling that\n * file\u0027s characters into Strings and sending them to instances of\n * {@link OutputDestination}. The name and behavior of this class are inspired\n * by the \u0027-f\u0027 (follow) flag of the UNIX command \u0027tail\u0027.\n *\n * @see OutputDestination\n * @author \u003ca href\u003d\"mailto:greghmerrill@yahoo.com\"\u003eGreg Merrill\u003c/a\u003e\n */\npublic class FileFollower {\n\n    /**\n     * Add another OutputDestination to which the followed file\u0027s contents\n     * should be printed.\n     *\n     * @param outputDestination OutputDestination to be added\n     */\n    public boolean addOutputDestination(OutputDestination outputDestination);\n}\n",
    "package": "ghm.follow",
    "classname": "FileFollower",
    "id": "/EvoSuiteBenchmark/original/41_follow/src/main/java/ghm/follow/FileFollower_0Test.java",
    "test_prompt": "// FileFollower_0Test.java\npackage ghm.follow;\n\nimport ghm.follow.io.OutputDestination;\nimport java.io.BufferedInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link FileFollower}.\n* It contains ten unit test cases for the {@link FileFollower#addOutputDestination(OutputDestination)} method.\n*/\nclass FileFollower_0Test {",
    "method_signature": "addOutputDestination(OutputDestination)",
    "suffix": "0"
  },
  {
    "numberTests": "ten",
    "original_code": "// FileFollower.java\npackage ghm.follow;\n\nimport ghm.follow.io.OutputDestination;\nimport java.io.BufferedInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\n/**\n * Instances of this class \u0027follow\u0027 a particular text file, assmebling that\n * file\u0027s characters into Strings and sending them to instances of\n * {@link OutputDestination}. The name and behavior of this class are inspired\n * by the \u0027-f\u0027 (follow) flag of the UNIX command \u0027tail\u0027.\n *\n * @see OutputDestination\n * @author \u003ca href\u003d\"mailto:greghmerrill@yahoo.com\"\u003eGreg Merrill\u003c/a\u003e\n */\npublic class FileFollower {\n\n    /**\n     * Remove the supplied OutputDestination from the list of OutputDestinations\n     * to which the followed file\u0027s contents should be printed.\n     *\n     * @param outputDestination OutputDestination to be removed\n     */\n    public boolean removeOutputDestination(OutputDestination outputDestination);\n}\n",
    "package": "ghm.follow",
    "classname": "FileFollower",
    "id": "/EvoSuiteBenchmark/original/41_follow/src/main/java/ghm/follow/FileFollower_1Test.java",
    "test_prompt": "// FileFollower_1Test.java\npackage ghm.follow;\n\nimport ghm.follow.io.OutputDestination;\nimport java.io.BufferedInputStream;\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link FileFollower}.\n* It contains ten unit test cases for the {@link FileFollower#removeOutputDestination(OutputDestination)} method.\n*/\nclass FileFollower_1Test {",
    "method_signature": "removeOutputDestination(OutputDestination)",
    "suffix": "1"
  },
  {
    "numberTests": "ten",
    "original_code": "// FollowApp.java\npackage ghm.follow;\n\nimport ghm.follow.config.Configure;\nimport ghm.follow.config.FollowAppAttributes;\nimport ghm.follow.event.WindowTracker;\nimport ghm.follow.gui.About;\nimport ghm.follow.gui.Clear;\nimport ghm.follow.gui.ClearAll;\nimport ghm.follow.gui.Close;\nimport ghm.follow.gui.Debug;\nimport ghm.follow.gui.Delete;\nimport ghm.follow.gui.DeleteAll;\nimport ghm.follow.gui.DndFileOpener;\nimport ghm.follow.gui.Edit;\nimport ghm.follow.gui.Exit;\nimport ghm.follow.gui.FileFollowingPane;\nimport ghm.follow.gui.FollowAppAction;\nimport ghm.follow.gui.Menu;\nimport ghm.follow.gui.ComponentBuilder;\nimport ghm.follow.gui.Open;\nimport ghm.follow.gui.Pause;\nimport ghm.follow.gui.PopupMenu;\nimport ghm.follow.gui.Reset;\nimport ghm.follow.gui.StartupStatus;\nimport ghm.follow.gui.TabbedPane;\nimport ghm.follow.gui.ToolBar;\nimport ghm.follow.gui.FollowAppAction.ActionContext;\nimport ghm.follow.nav.Bottom;\nimport ghm.follow.nav.NextTab;\nimport ghm.follow.nav.PreviousTab;\nimport ghm.follow.nav.Top;\nimport ghm.follow.search.ClearAllHighlights;\nimport ghm.follow.search.ClearHighlights;\nimport ghm.follow.search.Find;\nimport ghm.follow.search.SearchableTextPane;\nimport ghm.follow.systemInterface.DefaultSystemInterface;\nimport ghm.follow.systemInterface.SystemInterface;\nimport java.awt.BorderLayout;\nimport java.awt.Component;\nimport java.awt.Cursor;\nimport java.awt.Dimension;\nimport java.awt.GraphicsEnvironment;\nimport java.awt.Window;\nimport java.awt.dnd.DropTarget;\nimport java.awt.event.ComponentAdapter;\nimport java.awt.event.ComponentEvent;\nimport java.awt.event.MouseAdapter;\nimport java.awt.event.MouseEvent;\nimport java.awt.event.MouseListener;\nimport java.beans.PropertyChangeEvent;\nimport java.beans.PropertyChangeListener;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.lang.reflect.InvocationTargetException;\nimport java.net.URL;\nimport java.text.MessageFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.MissingResourceException;\nimport java.util.ResourceBundle;\nimport javax.swing.ImageIcon;\nimport javax.swing.JFrame;\nimport javax.swing.JMenuBar;\nimport javax.swing.JTabbedPane;\nimport javax.swing.SwingUtilities;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\n\n/**\n * This class\u0027 main() method is the entry point into the Follow application.\n *\n * @see #main(String[])\n * @author \u003ca href\u003d\"mailto:greghmerrill@yahoo.com\"\u003eGreg Merrill\u003c/a\u003e\n */\npublic class FollowApp {\n\n    /**\n     * Gets an image icon from the resource path.\n     *\n     * @param clazz The class to use as an entry point to the resource path. Image\n     *            path should be relative to this class.\n     * @param iconNameKey The resource key name where the image is defined.\n     * @return An image icon based on the URL generated from the value of\n     *         iconNameKey. null if no URL can be found.\n     */\n    public static ImageIcon getIcon(Class\u003c?\u003e clazz, String iconNameKey);\n}\n",
    "package": "ghm.follow",
    "classname": "FollowApp",
    "id": "/EvoSuiteBenchmark/original/41_follow/src/main/java/ghm/follow/FollowApp.java",
    "test_prompt": "// FollowAppTest.java\npackage ghm.follow;\n\nimport ghm.follow.config.Configure;\nimport ghm.follow.config.FollowAppAttributes;\nimport ghm.follow.event.WindowTracker;\nimport ghm.follow.gui.About;\nimport ghm.follow.gui.Clear;\nimport ghm.follow.gui.ClearAll;\nimport ghm.follow.gui.Close;\nimport ghm.follow.gui.Debug;\nimport ghm.follow.gui.Delete;\nimport ghm.follow.gui.DeleteAll;\nimport ghm.follow.gui.DndFileOpener;\nimport ghm.follow.gui.Edit;\nimport ghm.follow.gui.Exit;\nimport ghm.follow.gui.FileFollowingPane;\nimport ghm.follow.gui.FollowAppAction;\nimport ghm.follow.gui.Menu;\nimport ghm.follow.gui.ComponentBuilder;\nimport ghm.follow.gui.Open;\nimport ghm.follow.gui.Pause;\nimport ghm.follow.gui.PopupMenu;\nimport ghm.follow.gui.Reset;\nimport ghm.follow.gui.StartupStatus;\nimport ghm.follow.gui.TabbedPane;\nimport ghm.follow.gui.ToolBar;\nimport ghm.follow.gui.FollowAppAction.ActionContext;\nimport ghm.follow.nav.Bottom;\nimport ghm.follow.nav.NextTab;\nimport ghm.follow.nav.PreviousTab;\nimport ghm.follow.nav.Top;\nimport ghm.follow.search.ClearAllHighlights;\nimport ghm.follow.search.ClearHighlights;\nimport ghm.follow.search.Find;\nimport ghm.follow.search.SearchableTextPane;\nimport ghm.follow.systemInterface.DefaultSystemInterface;\nimport ghm.follow.systemInterface.SystemInterface;\nimport java.awt.BorderLayout;\nimport java.awt.Component;\nimport java.awt.Cursor;\nimport java.awt.Dimension;\nimport java.awt.GraphicsEnvironment;\nimport java.awt.Window;\nimport java.awt.dnd.DropTarget;\nimport java.awt.event.ComponentAdapter;\nimport java.awt.event.ComponentEvent;\nimport java.awt.event.MouseAdapter;\nimport java.awt.event.MouseEvent;\nimport java.awt.event.MouseListener;\nimport java.beans.PropertyChangeEvent;\nimport java.beans.PropertyChangeListener;\nimport java.io.File;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.lang.reflect.InvocationTargetException;\nimport java.net.URL;\nimport java.text.MessageFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.MissingResourceException;\nimport java.util.ResourceBundle;\nimport javax.swing.ImageIcon;\nimport javax.swing.JFrame;\nimport javax.swing.JMenuBar;\nimport javax.swing.JTabbedPane;\nimport javax.swing.SwingUtilities;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link FollowApp}.\n* It contains ten unit test cases for the {@link FollowApp#getIcon(Class, String)} method.\n*/\nclass FollowAppTest {",
    "method_signature": "getIcon(Class, String)",
    "suffix": ""
  }
]