[
  {
    "numberTests": "ten",
    "original_code": "// Manager.java\npackage net.sf.gaeappmanager.google.appengine;\n\nimport net.sf.gaeappmanager.google.LogonHelper;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.impl.client.DefaultHttpClient;\n\n/**\n * Google login helper.\n *\n * Based on work of Cheers Geoff.\n *\n * http://groups.google.com/group/google-appengine\n * -java/browse_thread/thread/c96d4fff73117e1d?pli\u003d1\n *\n * @author Alois Belaska\n */\npublic class LogonHelper {\n\n    /**\n     * Returns the ACSID string to be set as the Cookie field in the request\n     * header.\n     *\n     * @param userid full gmail address for user\n     * @param password password\n     * @param source name of application requesting quota details\n     * @return the ACSID field value\n     * @throws Exception if any error occurs getting the ACSID\n     */\n    public static String loginToGoogleAppEngine(String userid, String password, String source) throws Exception;\n}\n\n/**\n * Google App Engine application manager.\n *\n * @author Alois Belaska\n */\npublic class Manager {\n\n    /**\n     * Retrieve quota details of application deployed in Google App Engine.\n     *\n     * @param userid full gmail address for user\n     * @param password gmail account password\n     * @param source name of application requesting quota details\n     * @param application appspot application name\n     * @return quota details of application\n     * @throws Exception in case of failure\n     */\n    public static QuotaDetails retrieveAppQuotaDetails(String userid, String password, String source, String application) throws Exception {\n        String authCookie \u003d LogonHelper.loginToGoogleAppEngine(userid, password, source);\n        DefaultHttpClient client \u003d new DefaultHttpClient();\n        try {\n            HttpGet get \u003d new HttpGet(\"https://appengine.google.com/dashboard/quotadetails?\u0026app_id\u003d\" + application);\n            get.setHeader(\"Cookie\", \"ACSID\u003d\" + authCookie);\n            HttpResponse response \u003d client.execute(get);\n            return new QuotaDetailsParser().parse(response.getEntity().getContent());\n        } finally {\n            client.getConnectionManager().shutdown();\n        }\n    }\n}\n",
    "package": "net.sf.gaeappmanager.google.appengine",
    "classname": "Manager",
    "id": "/EvoSuiteBenchmark/original/67_gae-app-manager/src/main/java/net/sf/gaeappmanager/google/appengine/Manager.java",
    "test_prompt": "// ManagerTest.java\npackage net.sf.gaeappmanager.google.appengine;\n\nimport net.sf.gaeappmanager.google.LogonHelper;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Manager}.\n* It contains ten unit test cases for the {@link Manager#retrieveAppQuotaDetails(String, String, String, String)} method.\n*/\nclass ManagerTest {",
    "method_signature": "retrieveAppQuotaDetails(String, String, String, String)",
    "suffix": ""
  },
  {
    "numberTests": "ten",
    "original_code": "// LogonHelper.java\npackage net.sf.gaeappmanager.google;\n\nimport java.io.BufferedReader;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.LineNumberReader;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.client.entity.UrlEncodedFormEntity;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.cookie.Cookie;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.apache.http.message.BasicNameValuePair;\nimport org.apache.http.protocol.HTTP;\n\n/**\n * Google login helper.\n *\n * Based on work of Cheers Geoff.\n *\n * http://groups.google.com/group/google-appengine\n * -java/browse_thread/thread/c96d4fff73117e1d?pli\u003d1\n *\n * @author Alois Belaska\n */\npublic class LogonHelper {\n\n    /**\n     * Returns the ACSID string to be set as the Cookie field in the request\n     * header.\n     *\n     * @param userid full gmail address for user\n     * @param password password\n     * @param source name of application requesting quota details\n     * @return the ACSID field value\n     * @throws Exception if any error occurs getting the ACSID\n     */\n    public static String loginToGoogleAppEngine(String userid, String password, String source) throws Exception {\n        DefaultHttpClient client \u003d new DefaultHttpClient();\n        try {\n            List\u003cNameValuePair\u003e nvps \u003d new ArrayList\u003cNameValuePair\u003e();\n            nvps.add(new BasicNameValuePair(\"accountType\", \"HOSTED_OR_GOOGLE\"));\n            nvps.add(new BasicNameValuePair(\"Email\", userid));\n            nvps.add(new BasicNameValuePair(\"Passwd\", password));\n            nvps.add(new BasicNameValuePair(\"service\", \"ah\"));\n            nvps.add(new BasicNameValuePair(\"source\", source));\n            HttpPost post \u003d new HttpPost(\"https://www.google.com/accounts/ClientLogin\");\n            post.setEntity(new UrlEncodedFormEntity(nvps, HTTP.UTF_8));\n            HttpResponse response \u003d client.execute(post);\n            if (response.getStatusLine().getStatusCode() !\u003d 200) {\n                throw new Exception(\"Error obtaining ACSID\");\n            }\n            String authToken \u003d getAuthToken(response.getEntity().getContent());\n            post.abort();\n            HttpGet get \u003d new HttpGet(\"https://appengine.google.com/_ah/login?auth\u003d\" + authToken);\n            response \u003d client.execute(get);\n            for (Cookie cookie : client.getCookieStore().getCookies()) {\n                if (cookie.getName().startsWith(\"ACSID\")) {\n                    return cookie.getValue();\n                }\n            }\n            get.abort();\n            throw new Exception(\"Did not find ACSID cookie\");\n        } finally {\n            client.getConnectionManager().shutdown();\n        }\n    }\n}\n",
    "package": "net.sf.gaeappmanager.google",
    "classname": "LogonHelper",
    "id": "/EvoSuiteBenchmark/original/67_gae-app-manager/src/main/java/net/sf/gaeappmanager/google/LogonHelper.java",
    "test_prompt": "// LogonHelperTest.java\npackage net.sf.gaeappmanager.google;\n\nimport java.io.BufferedReader;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.LineNumberReader;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.client.entity.UrlEncodedFormEntity;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.cookie.Cookie;\nimport org.apache.http.impl.client.DefaultHttpClient;\nimport org.apache.http.message.BasicNameValuePair;\nimport org.apache.http.protocol.HTTP;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link LogonHelper}.\n* It contains ten unit test cases for the {@link LogonHelper#loginToGoogleAppEngine(String, String, String)} method.\n*/\nclass LogonHelperTest {",
    "method_signature": "loginToGoogleAppEngine(String, String, String)",
    "suffix": ""
  }
]