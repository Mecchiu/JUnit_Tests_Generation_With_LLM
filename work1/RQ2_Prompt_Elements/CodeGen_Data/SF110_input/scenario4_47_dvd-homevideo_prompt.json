[
  {
    "numberTests": "ten",
    "original_code": "// Burn.java\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStreamReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\n\n/**\n * @author Shane Santner\n * This class burns the DVD file structure previously created by\n * dvd-author to a DVD disc.\n */\npublic class Burn {\n\n    /**\n     * Creates a new instance of Burn\n     */\n    public Burn() {\n    }\n\n    /**\n     * Creates a new instance of Burn\n     * @param   burnToDVD   boolean value used to determine whether or not to burn to a DVD\n     *                      when dvd-homevideo completes\n     */\n    public Burn(boolean burnToDVD) {\n    }\n\n    /**\n     * Burn Member Variables\n     */\n    private boolean m_Burn;\n\n    private String m_growisofs \u003d \"growisofs -speed\u003d4 -Z /dev/dvd -dvd-video temp/DVD/\";\n\n    private String m_BaseErr \u003d \"Burn Error - \";\n\n    /**\n     * Optionally burn to DVD when complete and no errors, uses growisofs\n     * @param   DVD_GUI    This is the GUI object used to control the form\n     * return   A boolean to determine if an error occurred in the function\n     */\n    public boolean BurnToDVD(GUI DVD_GUI);\n}\n",
    "package": "",
    "classname": "Burn",
    "id": "/EvoSuiteBenchmark/original/47_dvd-homevideo/src/main/java/Burn.java",
    "test_prompt": "// BurnTest.java\n\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStreamReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Burn}.\n* It contains ten unit test cases for the {@link Burn#BurnToDVD(GUI)} method.\n*/\nclass BurnTest {",
    "method_signature": "BurnToDVD(GUI)",
    "suffix": ""
  },
  {
    "numberTests": "ten",
    "original_code": "// Menu.java\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileNotFoundException;\nimport java.io.InputStreamReader;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.FilenameFilter;\nimport java.util.StringTokenizer;\n\n/**\n * @author Shane Santner\n * This class creates a background menu for a DVD.  The user\n * can specify a background picture and audio to use for the\n * menu, or a default background can also be used.  The user\n * also has the option of specifying unique titles for each\n * chapter of the DVD.  If nothing is specified then the title\n * of the DVD will be used followed by an underscore and increasing\n * integer for each video clip.\n *\n * TODO - Can I use streams on dvd-menu?  Really need to standardize\n *        how I use streams across the board for all classes.\n */\npublic class Menu implements Runnable {\n\n    /**\n     * Creates a default instance of Menu\n     */\n    public Menu() {\n    }\n\n    /**\n     * Creates a new instance of Menu with the title, text file path and PAL/NTSC format\n     * passed as parameters.\n     * @param   title           The title of the DVD\n     * @param   TextFilePath    The path to the title file\n     * @param   isPAL           Is this a PAL or NTSC DVD\n     */\n    public Menu(String title, String TextFilePath, boolean isPAL, GUI DVD_GUI) {\n    }\n\n    /**\n     * Creates a new instance of Menu with the title, text file path, PAL/NTSC format,\n     * menu picture path and audio path passed as parameters.\n     * @param   title           The title of the DVD\n     * @param   picPath         The path to the background picture of the DVD Menu\n     * @param   audioPath       The path to the background audio of the DVD Menu\n     * @param   TextFilePath    The path to the title file\n     * @param   isPAL           Is this a PAL or NTSC DVD\n     */\n    public Menu(String title, String picPath, String audioPath, String TextFilePath, boolean isPAL, GUI DVD_GUI) {\n    }\n\n    /**\n     * Menu Member Variables\n     */\n    private String strTitle;\n\n    private String strPicPath;\n\n    private String strAudioPath;\n\n    private String strTextFilePath;\n\n    private String dvd_menu \u003d \"dvd-menu\";\n\n    private String[] titles \u003d new String[50];\n\n    private boolean pal_menu;\n\n    private String baseErr \u003d \"Menu Error - \";\n\n    private String[] video_files;\n\n    private GUI m_GUI;\n\n    private Thread m_Thread;\n\n    private boolean m_Error;\n\n    /**\n     * Used to instantiate a new thread and to perform error checking.\n     * @return  A boolean to determine if an error occurred in the function\n     */\n    public boolean init();\n\n    /**\n     * Implements the run() method of the Runnable interface.  Makes multi-threading\n     * possible.\n     */\n    public void run();\n\n    /**\n     * Creates DVD menu using optional picture and music by calling dvd-menu\n     * @param   m_GUI This is the GUI object used to control the form\n     * @return  A boolean to determine if an error occurred in the function\n     */\n    public void DVDMainMenu();\n\n    /**\n     * Creates the xml file to pass to dvdauthor\n     * @param   m_GUI This is the GUI object used to control the form\n     */\n    public boolean createXML();\n}\n",
    "package": "",
    "classname": "Menu",
    "id": "/EvoSuiteBenchmark/original/47_dvd-homevideo/src/main/java/Menu_0Test.java",
    "test_prompt": "// Menu_0Test.java\n\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileNotFoundException;\nimport java.io.InputStreamReader;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.FilenameFilter;\nimport java.util.StringTokenizer;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Menu}.\n* It contains ten unit test cases for the {@link Menu#init()} method.\n*/\nclass Menu_0Test {",
    "method_signature": "init()",
    "suffix": "0"
  },
  {
    "numberTests": "ten",
    "original_code": "// Menu.java\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileNotFoundException;\nimport java.io.InputStreamReader;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.FilenameFilter;\nimport java.util.StringTokenizer;\n\n/**\n * @author Shane Santner\n * This class creates a background menu for a DVD.  The user\n * can specify a background picture and audio to use for the\n * menu, or a default background can also be used.  The user\n * also has the option of specifying unique titles for each\n * chapter of the DVD.  If nothing is specified then the title\n * of the DVD will be used followed by an underscore and increasing\n * integer for each video clip.\n *\n * TODO - Can I use streams on dvd-menu?  Really need to standardize\n *        how I use streams across the board for all classes.\n */\npublic class Menu implements Runnable {\n\n    /**\n     * Creates a default instance of Menu\n     */\n    public Menu() {\n    }\n\n    /**\n     * Creates a new instance of Menu with the title, text file path and PAL/NTSC format\n     * passed as parameters.\n     * @param   title           The title of the DVD\n     * @param   TextFilePath    The path to the title file\n     * @param   isPAL           Is this a PAL or NTSC DVD\n     */\n    public Menu(String title, String TextFilePath, boolean isPAL, GUI DVD_GUI) {\n    }\n\n    /**\n     * Creates a new instance of Menu with the title, text file path, PAL/NTSC format,\n     * menu picture path and audio path passed as parameters.\n     * @param   title           The title of the DVD\n     * @param   picPath         The path to the background picture of the DVD Menu\n     * @param   audioPath       The path to the background audio of the DVD Menu\n     * @param   TextFilePath    The path to the title file\n     * @param   isPAL           Is this a PAL or NTSC DVD\n     */\n    public Menu(String title, String picPath, String audioPath, String TextFilePath, boolean isPAL, GUI DVD_GUI) {\n    }\n\n    /**\n     * Menu Member Variables\n     */\n    private String strTitle;\n\n    private String strPicPath;\n\n    private String strAudioPath;\n\n    private String strTextFilePath;\n\n    private String dvd_menu \u003d \"dvd-menu\";\n\n    private String[] titles \u003d new String[50];\n\n    private boolean pal_menu;\n\n    private String baseErr \u003d \"Menu Error - \";\n\n    private String[] video_files;\n\n    private GUI m_GUI;\n\n    private Thread m_Thread;\n\n    private boolean m_Error;\n\n    /**\n     * Used to instantiate a new thread and to perform error checking.\n     * @return  A boolean to determine if an error occurred in the function\n     */\n    public boolean init();\n\n    /**\n     * Implements the run() method of the Runnable interface.  Makes multi-threading\n     * possible.\n     */\n    public void run();\n\n    /**\n     * Creates DVD menu using optional picture and music by calling dvd-menu\n     * @param   m_GUI This is the GUI object used to control the form\n     * @return  A boolean to determine if an error occurred in the function\n     */\n    public void DVDMainMenu();\n\n    /**\n     * Creates the xml file to pass to dvdauthor\n     * @param   m_GUI This is the GUI object used to control the form\n     */\n    public boolean createXML();\n}\n",
    "package": "",
    "classname": "Menu",
    "id": "/EvoSuiteBenchmark/original/47_dvd-homevideo/src/main/java/Menu_1Test.java",
    "test_prompt": "// Menu_1Test.java\n\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileNotFoundException;\nimport java.io.InputStreamReader;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.FilenameFilter;\nimport java.util.StringTokenizer;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Menu}.\n* It contains ten unit test cases for the {@link Menu#createXML()} method.\n*/\nclass Menu_1Test {",
    "method_signature": "createXML()",
    "suffix": "1"
  },
  {
    "numberTests": "ten",
    "original_code": "// Author.java\nimport java.io.File;\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStreamReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.PrintStream;\nimport java.util.NoSuchElementException;\nimport java.util.StringTokenizer;\nimport java.lang.NullPointerException;\nimport java.lang.IllegalArgumentException;\n\n/**\n * @author Shane Santner\n * This class create the DVD filesystem that will be burned\n * to disc.\n *\n * TODO - Need to handle input, output and error streams\n *        more appropriatly.\n */\npublic class Author {\n\n    /**\n     * Creates a new instance of Author\n     */\n    public Author() {\n    }\n\n    /* Author Member Variables */\n    private String m_dvdauthor \u003d \"dvdauthor -x vmgm.xml\";\n\n    private String m_BaseErr \u003d \"Authoring Error - \";\n\n    /**\n     * Create a DVD filestructure necessary to play in dvd player using dvdauthor\n     * @param   DVD_GUI This is the GUI object used to control the form\n     * @return  A boolean to determine if an error occurred in the function\n     */\n    public boolean CreateDVDFileStructure(GUI DVD_GUI);\n}\n",
    "package": "",
    "classname": "Author",
    "id": "/EvoSuiteBenchmark/original/47_dvd-homevideo/src/main/java/Author.java",
    "test_prompt": "// AuthorTest.java\n\n\nimport java.io.File;\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStreamReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.PrintStream;\nimport java.util.NoSuchElementException;\nimport java.util.StringTokenizer;\nimport java.lang.NullPointerException;\nimport java.lang.IllegalArgumentException;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Author}.\n* It contains ten unit test cases for the {@link Author#CreateDVDFileStructure(GUI)} method.\n*/\nclass AuthorTest {",
    "method_signature": "CreateDVDFileStructure(GUI)",
    "suffix": ""
  },
  {
    "numberTests": "ten",
    "original_code": "// Capture.java\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStreamReader;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.util.StringTokenizer;\nimport javax.swing.JOptionPane;\n\n/**\n * @author Shane Santner\n * The Capture class utilizes dvgrab to capture audio and video\n * data from a dv camcorder.  It captures for the amount of time\n * specified by the user.\n *\n * TODO - Is there a way to get the camcorder time from dvgrab?\n *        This would be a more accurate way of determining when\n *        to stop the camcorder.  Also need to handle input, output\n *        and error streams more appropriatly.\n */\npublic class Capture implements Runnable {\n\n    /**\n     * Creates a default instance of Capture\n     */\n    public Capture() {\n    }\n\n    /**\n     * Creates a new instance of Capture\n     * @param   min         The amount of time in minutes to capture audio/video\n     * @param   sec         The amount of time in seconds to capture audio/video\n     * @param   DVD_GUI     This is the GUI object used to control the form\n     */\n    public Capture(int min, int sec, GUI DVD_GUI) {\n    }\n\n    /**\n     * Capture Member Variables\n     */\n    private int m_Minutes;\n\n    private int m_Seconds;\n\n    private GUI m_GUI;\n\n    private Thread m_Thread;\n\n    private boolean m_Error;\n\n    private String m_BaseErr \u003d \"Capture Error - \";\n\n    private String m_dvgrab \u003d \"dvgrab --autosplit --size 0 --format raw --opendml\" + \" --buffers 200 dv/dv_file-\";\n\n    /**\n     * Used to instantiate a new thread and to perform error checking.\n     * @return  A boolean to determine if an error occurred in the function\n     */\n    public boolean init();\n\n    /**\n     * Implements the run() method of the Runnable interface.  Makes multi-threading\n     * possible.\n     */\n    public void run();\n\n    /**\n     * Captures audio and video from a dv camcorder by calling dvgrab\n     */\n    public void DV_Capture();\n}\n",
    "package": "",
    "classname": "Capture",
    "id": "/EvoSuiteBenchmark/original/47_dvd-homevideo/src/main/java/Capture.java",
    "test_prompt": "// CaptureTest.java\n\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStreamReader;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.util.StringTokenizer;\nimport javax.swing.JOptionPane;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Capture}.\n* It contains ten unit test cases for the {@link Capture#init()} method.\n*/\nclass CaptureTest {",
    "method_signature": "init()",
    "suffix": ""
  },
  {
    "numberTests": "ten",
    "original_code": "// GUI.java\n//import com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\nimport java.io.FileNotFoundException;\nimport java.io.File;\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.FileFilter;\nimport java.awt.Color;\nimport javax.swing.JFileChooser;\nimport javax.swing.JOptionPane;\nimport java.util.StringTokenizer;\n\n/**\n * @author Shane Santner\n * This class provides the GUI for dvd-homevideo.\n */\npublic class GUI extends javax.swing.JFrame {\n\n    /* \n     * Creates a new form, probably the most compilcated - or\n     * messiest constructor I have ever developed.\n     */\n    public GUI() {\n    }\n\n    javax.swing.ImageIcon image \u003d new javax.swing.ImageIcon(getClass().getResource(\"/logo_32x32.png\"));\n\n    protected String strOutputDir;\n\n    protected boolean blnBegin;\n\n    /* My list of dependent programs for dvd-homevideo */\n    protected String[] DependentPrograms \u003d { \"dvgrab\", \"transcode\", \"mplex\", \"dvd-menu\", \"dvdauthor\", \"growisofs\", \"ffmpeg\", \"lame\", \"sox\" };\n\n    // \u003ceditor-fold defaultstate\u003d\"collapsed\" desc\u003d\" Generated Code \"\u003e//GEN-BEGIN:initComponents\n    private void initComponents();\n\n    private //GEN-FIRST:event_menuRd_IgnoreNoneStateChanged\n    void //GEN-FIRST:event_menuRd_IgnoreNoneStateChanged\n    menuRd_IgnoreNoneStateChanged(//GEN-FIRST:event_menuRd_IgnoreNoneStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_menuRd_IgnoreCapConvMenuStateChanged\n    void //GEN-FIRST:event_menuRd_IgnoreCapConvMenuStateChanged\n    menuRd_IgnoreCapConvMenuStateChanged(//GEN-FIRST:event_menuRd_IgnoreCapConvMenuStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_menuRd_IgnoreCapConvStateChanged\n    void //GEN-FIRST:event_menuRd_IgnoreCapConvStateChanged\n    menuRd_IgnoreCapConvStateChanged(//GEN-FIRST:event_menuRd_IgnoreCapConvStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_menuRd_IgnoreCapStateChanged\n    void //GEN-FIRST:event_menuRd_IgnoreCapStateChanged\n    menuRd_IgnoreCapStateChanged(//GEN-FIRST:event_menuRd_IgnoreCapStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_txtOutputDirFocusLost\n    void //GEN-FIRST:event_txtOutputDirFocusLost\n    txtOutputDirFocusLost(//GEN-FIRST:event_txtOutputDirFocusLost\n    java.awt.event.FocusEvent evt);\n\n    private //GEN-FIRST:event_txtTitleFocusLost\n    void //GEN-FIRST:event_txtTitleFocusLost\n    txtTitleFocusLost(//GEN-FIRST:event_txtTitleFocusLost\n    java.awt.event.FocusEvent evt);\n\n    private //GEN-FIRST:event_btnOpen_OutputDirKeyTyped\n    void //GEN-FIRST:event_btnOpen_OutputDirKeyTyped\n    btnOpen_OutputDirKeyTyped(//GEN-FIRST:event_btnOpen_OutputDirKeyTyped\n    java.awt.event.KeyEvent evt);\n\n    private //GEN-FIRST:event_btnOpen_OutputDirMouseClicked\n    void //GEN-FIRST:event_btnOpen_OutputDirMouseClicked\n    btnOpen_OutputDirMouseClicked(//GEN-FIRST:event_btnOpen_OutputDirMouseClicked\n    java.awt.event.MouseEvent evt);\n\n    private //GEN-FIRST:event_spnSecondsStateChanged\n    void //GEN-FIRST:event_spnSecondsStateChanged\n    spnSecondsStateChanged(//GEN-FIRST:event_spnSecondsStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_spnMinutesStateChanged\n    void //GEN-FIRST:event_spnMinutesStateChanged\n    spnMinutesStateChanged(//GEN-FIRST:event_spnMinutesStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private void btnStartKeyTyped(java.awt.event.KeyEvent evt);\n\n    private void btnExitKeyTyped(java.awt.event.KeyEvent evt);\n\n    private void menuChkThreadItemStateChanged(java.awt.event.ItemEvent evt);\n\n    private void menuAboutMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Exit button.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void btnExitMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user changing the state of one\n     * of the menu radio buttions.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void menuRd_16_9ItemStateChanged(java.awt.event.ItemEvent evt);\n\n    /**\n     * This is the code that handles the user changing the state of one\n     * of the menu radio buttions.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void menuRd_4_3ItemStateChanged(java.awt.event.ItemEvent evt);\n\n    /**\n     * This is the code that handles the user changing the state of one\n     * of the menu radio buttions.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void menuRdPALItemStateChanged(java.awt.event.ItemEvent evt);\n\n    /**\n     * This is the code that handles the user changing the state of one\n     * of the menu radio buttions.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void menuRdNTSCItemStateChanged(java.awt.event.ItemEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Play button.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void btnPlayMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the SubmitBug button\n     * in the Help menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuBugMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Open button\n     * from the File menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuOpenMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Save button\n     * from the File menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuSaveMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the dvd-homevideo website\n     * button from the Help menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuInternetMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the README file\n     * button from the Help menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuREADMEMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Exit button\n     * from the File menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuExitMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Start button.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void btnStartMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user typing Return on the\n     * Open button to search for a title file to use for dvd-menu.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_TextFileKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user typing Return on the\n     * Open button to search for an output directory to locate an\n     * audio file.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_AudioKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user typing Return on the\n     * Open button to search for an output directory to locate a\n     * picture in.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_PictureKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user typing the Space bar\n     * on the check box for the menu\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void chkMenuKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user typing the Space bar\n     * on the check box for the quality group of radio buttons\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void chkQualityKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * Open button to search for an output directory to locate a\n     * picture in.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_PictureMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * Open button to search for an output directory to locate an\n     * audio file in.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_AudioMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * Open button to search for a title file to be used for\n     * the background menu of the DVD\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_TextFileMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * check box to select the quality of video conversion for\n     * their DVD\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void chkQualityMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * check box to specify details for the DVD menu\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void chkMenuMouseClicked(java.awt.event.MouseEvent evt);\n\n    public void enableStartButton();\n\n    /**\n     * On startup, checks to ensure that the raw1394 module is loaded.\n     * This module is only needed to capture audio and video from the\n     * dv camcorder.\n     * return   A boolean indicating if the module is present\n     */\n    public boolean checkForModules();\n\n    /**\n     * On startup, checks to ensure that all dependent programs are installed\n     * @param   Prog[]  List of dependent programs needed for dvd-homevideo\n     * @return  A boolean to determine if an error occurred in the function\n     */\n    public boolean checkForProg(String[] Prog);\n\n    /**\n     * Displays a message box with the supplied text and yes/no options\n     * @param   message    The message to display in the box\n     */\n    public int MessageBox(String message);\n\n    /**\n     * Displays a message box with the supplied text and type\n     * @param   message    The message to display in the box\n     * @param   type       The type of message (Info, Warning or Error)\n     */\n    public void MessageBox(String message, int type);\n\n    /**\n     * Displays a message box with the supplied text and type\n     * @param   message    The message to display in the box\n     * @param   type       The type of message (Info, Warning or Error)\n     * @param   picture    Picture to display in the MessageBox\n     */\n    public void MessageBox(String message, int type, String picture);\n\n    /**\n     * Check dvd-homevideo for runtime errors\n     * @param   fileName    This is a log file to parse through, looking for\n     *                      the keyword \"Error\"\n     * @return   A boolean indicating if an error was found\n     */\n    public boolean ErrorCheck(String fileName);\n\n    /**\n     * Update the Status textbox\n     * @param   typeColor   red, green, or grey\n     * @param   typeUpdate  Values should be PASS, FAIL, Status\n     */\n    public void UpdateStatus(Color typeColor, String typeUpdate);\n\n    /**\n     * This method should be called every time the application exits normally.  This allows the\n     * current session to be saved before quiting dvd-homevideo.\n     */\n    public void ExitDVDHomevideo();\n\n    /**\n     * This method retrieves user specific information from the\n     * properties xml file in the users ~/.dvd-homevideo directory\n     */\n    public void ReadProjProperties();\n\n    /**\n     * This method stores user specific information in a properties xml file\n     * in the users ~/.dvd-homevideo directory\n     */\n    public void WriteProjProperties();\n\n    /**\n     * Opens a previous dvd-homevideo session by reading an xml file\n     * @param   xmlPath    Path to the xml file\n     */\n    public void ReadSession(String xmlPath);\n\n    /**\n     * Saves the state of all widgets on the GUI form in an xml file\n     * in the users ~/.dvd-homevideo directory\n     */\n    public void WriteSession() throws IOException;\n\n    // Variables declaration - do not modify//GEN-BEGIN:variables\n    private javax.swing.JButton btnExit;\n\n    private javax.swing.JButton btnOpen_Audio;\n\n    private javax.swing.JButton btnOpen_OutputDir;\n\n    private javax.swing.JButton btnOpen_Picture;\n\n    private javax.swing.JButton btnOpen_TextFile;\n\n    protected javax.swing.JButton btnPlay;\n\n    private javax.swing.JButton btnStart;\n\n    protected javax.swing.JCheckBox chkBurn;\n\n    protected javax.swing.JCheckBox chkMenu;\n\n    protected javax.swing.JCheckBox chkQuality;\n\n    private javax.swing.JFileChooser fcMenuOpen;\n\n    private javax.swing.JFileChooser fcOpen;\n\n    private javax.swing.ButtonGroup grpAspectRatio;\n\n    private javax.swing.ButtonGroup grpFormat;\n\n    private javax.swing.ButtonGroup grpMenuAspectRatio;\n\n    private javax.swing.ButtonGroup grpMenuFormat;\n\n    private javax.swing.ButtonGroup grpMenuIgnore;\n\n    private javax.swing.ButtonGroup grpMenuMode;\n\n    private javax.swing.ButtonGroup grpQuality;\n\n    private javax.swing.JLabel lblAspectRatio;\n\n    private javax.swing.JLabel lblAudio;\n\n    protected javax.swing.JLabel lblAuthor;\n\n    protected javax.swing.JLabel lblAuthorProg;\n\n    protected javax.swing.JLabel lblCapture;\n\n    protected javax.swing.JLabel lblCaptureProg;\n\n    protected javax.swing.JLabel lblConvert;\n\n    protected javax.swing.JLabel lblConvertProg;\n\n    private javax.swing.JLabel lblFormat;\n\n    private javax.swing.JLabel lblMinutes;\n\n    private javax.swing.JLabel lblOutputDir;\n\n    private javax.swing.JLabel lblPicture;\n\n    private javax.swing.JLabel lblSeconds;\n\n    private javax.swing.JLabel lblTextFile;\n\n    private javax.swing.JLabel lblTitle;\n\n    private javax.swing.JMenuItem menuAbout;\n\n    protected javax.swing.JMenuBar menuBarMain;\n\n    private javax.swing.JMenuItem menuBug;\n\n    protected javax.swing.JCheckBoxMenuItem menuChkThread;\n\n    protected javax.swing.JMenuItem menuExit;\n\n    protected javax.swing.JMenu menuFile;\n\n    protected javax.swing.JMenu menuHelp;\n\n    protected javax.swing.JMenuItem menuInternet;\n\n    protected javax.swing.JMenuItem menuOpen;\n\n    private javax.swing.JMenu menuProjProp;\n\n    protected javax.swing.JMenuItem menuREADME;\n\n    private javax.swing.JRadioButtonMenuItem menuRdNTSC;\n\n    private javax.swing.JRadioButtonMenuItem menuRdPAL;\n\n    private javax.swing.JRadioButtonMenuItem menuRd_16_9;\n\n    private javax.swing.JRadioButtonMenuItem menuRd_4_3;\n\n    protected javax.swing.JRadioButtonMenuItem menuRd_IgnoreCap;\n\n    protected javax.swing.JRadioButtonMenuItem menuRd_IgnoreCapConv;\n\n    protected javax.swing.JRadioButtonMenuItem menuRd_IgnoreCapConvMenu;\n\n    protected javax.swing.JRadioButtonMenuItem menuRd_IgnoreNone;\n\n    protected javax.swing.JMenuItem menuSave;\n\n    protected javax.swing.JMenu menuTools;\n\n    private javax.swing.JPanel pnlGUI;\n\n    protected javax.swing.JProgressBar prgAuthor;\n\n    protected javax.swing.JProgressBar prgCapture;\n\n    protected javax.swing.JProgressBar prgConvert;\n\n    protected javax.swing.JRadioButton rd16_9;\n\n    protected javax.swing.JRadioButton rd4_3;\n\n    protected javax.swing.JRadioButton rdAverage;\n\n    protected javax.swing.JRadioButton rdGood;\n\n    protected javax.swing.JRadioButton rdNTSC;\n\n    protected javax.swing.JRadioButton rdPAL;\n\n    protected javax.swing.JRadioButton rdSuper;\n\n    private javax.swing.JScrollPane spTextArea;\n\n    protected javax.swing.JSpinner spnMinutes;\n\n    protected javax.swing.JSpinner spnSeconds;\n\n    private javax.swing.JSeparator sprAspectRatio;\n\n    private javax.swing.JSeparator sprCapConvert;\n\n    private javax.swing.JSeparator sprIgnore;\n\n    private javax.swing.JSeparator sprMenuAuthor;\n\n    private javax.swing.JSeparator sprMenuFormatAspect;\n\n    private javax.swing.JSeparator sprMenuThread;\n\n    protected javax.swing.JSeparator sprOpen;\n\n    protected javax.swing.JSeparator sprSave;\n\n    protected javax.swing.JTextArea txtAreaOutput;\n\n    protected javax.swing.JTextField txtAudio;\n\n    protected javax.swing.JTextField txtOutputDir;\n\n    protected javax.swing.JTextField txtPicture;\n\n    protected javax.swing.JTextField txtStatus;\n\n    protected javax.swing.JTextField txtTextFile;\n\n    protected javax.swing.JTextField txtTitle;\n\n    /* My GUI variable declarations */\n    protected javax.swing.SpinnerNumberModel spnSecondsSize \u003d new javax.swing.SpinnerNumberModel(0, 0, 59, 1);\n\n    protected javax.swing.SpinnerNumberModel spnMinutesSize \u003d new javax.swing.SpinnerNumberModel(0, 0, 64, 1);\n}\n",
    "package": "",
    "classname": "GUI",
    "id": "/EvoSuiteBenchmark/original/47_dvd-homevideo/src/main/java/GUI_0Test.java",
    "test_prompt": "// GUI_0Test.java\n\n\n//import com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\nimport java.io.FileNotFoundException;\nimport java.io.File;\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.FileFilter;\nimport java.awt.Color;\nimport javax.swing.JFileChooser;\nimport javax.swing.JOptionPane;\nimport java.util.StringTokenizer;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link GUI}.\n* It contains ten unit test cases for the {@link GUI#checkForModules()} method.\n*/\nclass GUI_0Test {",
    "method_signature": "checkForModules()",
    "suffix": "0"
  },
  {
    "numberTests": "ten",
    "original_code": "// GUI.java\n//import com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\nimport java.io.FileNotFoundException;\nimport java.io.File;\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.FileFilter;\nimport java.awt.Color;\nimport javax.swing.JFileChooser;\nimport javax.swing.JOptionPane;\nimport java.util.StringTokenizer;\n\n/**\n * @author Shane Santner\n * This class provides the GUI for dvd-homevideo.\n */\npublic class GUI extends javax.swing.JFrame {\n\n    /* \n     * Creates a new form, probably the most compilcated - or\n     * messiest constructor I have ever developed.\n     */\n    public GUI() {\n    }\n\n    javax.swing.ImageIcon image \u003d new javax.swing.ImageIcon(getClass().getResource(\"/logo_32x32.png\"));\n\n    protected String strOutputDir;\n\n    protected boolean blnBegin;\n\n    /* My list of dependent programs for dvd-homevideo */\n    protected String[] DependentPrograms \u003d { \"dvgrab\", \"transcode\", \"mplex\", \"dvd-menu\", \"dvdauthor\", \"growisofs\", \"ffmpeg\", \"lame\", \"sox\" };\n\n    // \u003ceditor-fold defaultstate\u003d\"collapsed\" desc\u003d\" Generated Code \"\u003e//GEN-BEGIN:initComponents\n    private void initComponents();\n\n    private //GEN-FIRST:event_menuRd_IgnoreNoneStateChanged\n    void //GEN-FIRST:event_menuRd_IgnoreNoneStateChanged\n    menuRd_IgnoreNoneStateChanged(//GEN-FIRST:event_menuRd_IgnoreNoneStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_menuRd_IgnoreCapConvMenuStateChanged\n    void //GEN-FIRST:event_menuRd_IgnoreCapConvMenuStateChanged\n    menuRd_IgnoreCapConvMenuStateChanged(//GEN-FIRST:event_menuRd_IgnoreCapConvMenuStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_menuRd_IgnoreCapConvStateChanged\n    void //GEN-FIRST:event_menuRd_IgnoreCapConvStateChanged\n    menuRd_IgnoreCapConvStateChanged(//GEN-FIRST:event_menuRd_IgnoreCapConvStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_menuRd_IgnoreCapStateChanged\n    void //GEN-FIRST:event_menuRd_IgnoreCapStateChanged\n    menuRd_IgnoreCapStateChanged(//GEN-FIRST:event_menuRd_IgnoreCapStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_txtOutputDirFocusLost\n    void //GEN-FIRST:event_txtOutputDirFocusLost\n    txtOutputDirFocusLost(//GEN-FIRST:event_txtOutputDirFocusLost\n    java.awt.event.FocusEvent evt);\n\n    private //GEN-FIRST:event_txtTitleFocusLost\n    void //GEN-FIRST:event_txtTitleFocusLost\n    txtTitleFocusLost(//GEN-FIRST:event_txtTitleFocusLost\n    java.awt.event.FocusEvent evt);\n\n    private //GEN-FIRST:event_btnOpen_OutputDirKeyTyped\n    void //GEN-FIRST:event_btnOpen_OutputDirKeyTyped\n    btnOpen_OutputDirKeyTyped(//GEN-FIRST:event_btnOpen_OutputDirKeyTyped\n    java.awt.event.KeyEvent evt);\n\n    private //GEN-FIRST:event_btnOpen_OutputDirMouseClicked\n    void //GEN-FIRST:event_btnOpen_OutputDirMouseClicked\n    btnOpen_OutputDirMouseClicked(//GEN-FIRST:event_btnOpen_OutputDirMouseClicked\n    java.awt.event.MouseEvent evt);\n\n    private //GEN-FIRST:event_spnSecondsStateChanged\n    void //GEN-FIRST:event_spnSecondsStateChanged\n    spnSecondsStateChanged(//GEN-FIRST:event_spnSecondsStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_spnMinutesStateChanged\n    void //GEN-FIRST:event_spnMinutesStateChanged\n    spnMinutesStateChanged(//GEN-FIRST:event_spnMinutesStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private void btnStartKeyTyped(java.awt.event.KeyEvent evt);\n\n    private void btnExitKeyTyped(java.awt.event.KeyEvent evt);\n\n    private void menuChkThreadItemStateChanged(java.awt.event.ItemEvent evt);\n\n    private void menuAboutMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Exit button.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void btnExitMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user changing the state of one\n     * of the menu radio buttions.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void menuRd_16_9ItemStateChanged(java.awt.event.ItemEvent evt);\n\n    /**\n     * This is the code that handles the user changing the state of one\n     * of the menu radio buttions.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void menuRd_4_3ItemStateChanged(java.awt.event.ItemEvent evt);\n\n    /**\n     * This is the code that handles the user changing the state of one\n     * of the menu radio buttions.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void menuRdPALItemStateChanged(java.awt.event.ItemEvent evt);\n\n    /**\n     * This is the code that handles the user changing the state of one\n     * of the menu radio buttions.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void menuRdNTSCItemStateChanged(java.awt.event.ItemEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Play button.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void btnPlayMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the SubmitBug button\n     * in the Help menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuBugMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Open button\n     * from the File menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuOpenMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Save button\n     * from the File menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuSaveMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the dvd-homevideo website\n     * button from the Help menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuInternetMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the README file\n     * button from the Help menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuREADMEMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Exit button\n     * from the File menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuExitMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Start button.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void btnStartMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user typing Return on the\n     * Open button to search for a title file to use for dvd-menu.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_TextFileKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user typing Return on the\n     * Open button to search for an output directory to locate an\n     * audio file.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_AudioKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user typing Return on the\n     * Open button to search for an output directory to locate a\n     * picture in.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_PictureKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user typing the Space bar\n     * on the check box for the menu\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void chkMenuKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user typing the Space bar\n     * on the check box for the quality group of radio buttons\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void chkQualityKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * Open button to search for an output directory to locate a\n     * picture in.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_PictureMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * Open button to search for an output directory to locate an\n     * audio file in.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_AudioMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * Open button to search for a title file to be used for\n     * the background menu of the DVD\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_TextFileMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * check box to select the quality of video conversion for\n     * their DVD\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void chkQualityMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * check box to specify details for the DVD menu\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void chkMenuMouseClicked(java.awt.event.MouseEvent evt);\n\n    public void enableStartButton();\n\n    /**\n     * On startup, checks to ensure that the raw1394 module is loaded.\n     * This module is only needed to capture audio and video from the\n     * dv camcorder.\n     * return   A boolean indicating if the module is present\n     */\n    public boolean checkForModules();\n\n    /**\n     * On startup, checks to ensure that all dependent programs are installed\n     * @param   Prog[]  List of dependent programs needed for dvd-homevideo\n     * @return  A boolean to determine if an error occurred in the function\n     */\n    public boolean checkForProg(String[] Prog);\n\n    /**\n     * Displays a message box with the supplied text and yes/no options\n     * @param   message    The message to display in the box\n     */\n    public int MessageBox(String message);\n\n    /**\n     * Displays a message box with the supplied text and type\n     * @param   message    The message to display in the box\n     * @param   type       The type of message (Info, Warning or Error)\n     */\n    public void MessageBox(String message, int type);\n\n    /**\n     * Displays a message box with the supplied text and type\n     * @param   message    The message to display in the box\n     * @param   type       The type of message (Info, Warning or Error)\n     * @param   picture    Picture to display in the MessageBox\n     */\n    public void MessageBox(String message, int type, String picture);\n\n    /**\n     * Check dvd-homevideo for runtime errors\n     * @param   fileName    This is a log file to parse through, looking for\n     *                      the keyword \"Error\"\n     * @return   A boolean indicating if an error was found\n     */\n    public boolean ErrorCheck(String fileName);\n\n    /**\n     * Update the Status textbox\n     * @param   typeColor   red, green, or grey\n     * @param   typeUpdate  Values should be PASS, FAIL, Status\n     */\n    public void UpdateStatus(Color typeColor, String typeUpdate);\n\n    /**\n     * This method should be called every time the application exits normally.  This allows the\n     * current session to be saved before quiting dvd-homevideo.\n     */\n    public void ExitDVDHomevideo();\n\n    /**\n     * This method retrieves user specific information from the\n     * properties xml file in the users ~/.dvd-homevideo directory\n     */\n    public void ReadProjProperties();\n\n    /**\n     * This method stores user specific information in a properties xml file\n     * in the users ~/.dvd-homevideo directory\n     */\n    public void WriteProjProperties();\n\n    /**\n     * Opens a previous dvd-homevideo session by reading an xml file\n     * @param   xmlPath    Path to the xml file\n     */\n    public void ReadSession(String xmlPath);\n\n    /**\n     * Saves the state of all widgets on the GUI form in an xml file\n     * in the users ~/.dvd-homevideo directory\n     */\n    public void WriteSession() throws IOException;\n\n    // Variables declaration - do not modify//GEN-BEGIN:variables\n    private javax.swing.JButton btnExit;\n\n    private javax.swing.JButton btnOpen_Audio;\n\n    private javax.swing.JButton btnOpen_OutputDir;\n\n    private javax.swing.JButton btnOpen_Picture;\n\n    private javax.swing.JButton btnOpen_TextFile;\n\n    protected javax.swing.JButton btnPlay;\n\n    private javax.swing.JButton btnStart;\n\n    protected javax.swing.JCheckBox chkBurn;\n\n    protected javax.swing.JCheckBox chkMenu;\n\n    protected javax.swing.JCheckBox chkQuality;\n\n    private javax.swing.JFileChooser fcMenuOpen;\n\n    private javax.swing.JFileChooser fcOpen;\n\n    private javax.swing.ButtonGroup grpAspectRatio;\n\n    private javax.swing.ButtonGroup grpFormat;\n\n    private javax.swing.ButtonGroup grpMenuAspectRatio;\n\n    private javax.swing.ButtonGroup grpMenuFormat;\n\n    private javax.swing.ButtonGroup grpMenuIgnore;\n\n    private javax.swing.ButtonGroup grpMenuMode;\n\n    private javax.swing.ButtonGroup grpQuality;\n\n    private javax.swing.JLabel lblAspectRatio;\n\n    private javax.swing.JLabel lblAudio;\n\n    protected javax.swing.JLabel lblAuthor;\n\n    protected javax.swing.JLabel lblAuthorProg;\n\n    protected javax.swing.JLabel lblCapture;\n\n    protected javax.swing.JLabel lblCaptureProg;\n\n    protected javax.swing.JLabel lblConvert;\n\n    protected javax.swing.JLabel lblConvertProg;\n\n    private javax.swing.JLabel lblFormat;\n\n    private javax.swing.JLabel lblMinutes;\n\n    private javax.swing.JLabel lblOutputDir;\n\n    private javax.swing.JLabel lblPicture;\n\n    private javax.swing.JLabel lblSeconds;\n\n    private javax.swing.JLabel lblTextFile;\n\n    private javax.swing.JLabel lblTitle;\n\n    private javax.swing.JMenuItem menuAbout;\n\n    protected javax.swing.JMenuBar menuBarMain;\n\n    private javax.swing.JMenuItem menuBug;\n\n    protected javax.swing.JCheckBoxMenuItem menuChkThread;\n\n    protected javax.swing.JMenuItem menuExit;\n\n    protected javax.swing.JMenu menuFile;\n\n    protected javax.swing.JMenu menuHelp;\n\n    protected javax.swing.JMenuItem menuInternet;\n\n    protected javax.swing.JMenuItem menuOpen;\n\n    private javax.swing.JMenu menuProjProp;\n\n    protected javax.swing.JMenuItem menuREADME;\n\n    private javax.swing.JRadioButtonMenuItem menuRdNTSC;\n\n    private javax.swing.JRadioButtonMenuItem menuRdPAL;\n\n    private javax.swing.JRadioButtonMenuItem menuRd_16_9;\n\n    private javax.swing.JRadioButtonMenuItem menuRd_4_3;\n\n    protected javax.swing.JRadioButtonMenuItem menuRd_IgnoreCap;\n\n    protected javax.swing.JRadioButtonMenuItem menuRd_IgnoreCapConv;\n\n    protected javax.swing.JRadioButtonMenuItem menuRd_IgnoreCapConvMenu;\n\n    protected javax.swing.JRadioButtonMenuItem menuRd_IgnoreNone;\n\n    protected javax.swing.JMenuItem menuSave;\n\n    protected javax.swing.JMenu menuTools;\n\n    private javax.swing.JPanel pnlGUI;\n\n    protected javax.swing.JProgressBar prgAuthor;\n\n    protected javax.swing.JProgressBar prgCapture;\n\n    protected javax.swing.JProgressBar prgConvert;\n\n    protected javax.swing.JRadioButton rd16_9;\n\n    protected javax.swing.JRadioButton rd4_3;\n\n    protected javax.swing.JRadioButton rdAverage;\n\n    protected javax.swing.JRadioButton rdGood;\n\n    protected javax.swing.JRadioButton rdNTSC;\n\n    protected javax.swing.JRadioButton rdPAL;\n\n    protected javax.swing.JRadioButton rdSuper;\n\n    private javax.swing.JScrollPane spTextArea;\n\n    protected javax.swing.JSpinner spnMinutes;\n\n    protected javax.swing.JSpinner spnSeconds;\n\n    private javax.swing.JSeparator sprAspectRatio;\n\n    private javax.swing.JSeparator sprCapConvert;\n\n    private javax.swing.JSeparator sprIgnore;\n\n    private javax.swing.JSeparator sprMenuAuthor;\n\n    private javax.swing.JSeparator sprMenuFormatAspect;\n\n    private javax.swing.JSeparator sprMenuThread;\n\n    protected javax.swing.JSeparator sprOpen;\n\n    protected javax.swing.JSeparator sprSave;\n\n    protected javax.swing.JTextArea txtAreaOutput;\n\n    protected javax.swing.JTextField txtAudio;\n\n    protected javax.swing.JTextField txtOutputDir;\n\n    protected javax.swing.JTextField txtPicture;\n\n    protected javax.swing.JTextField txtStatus;\n\n    protected javax.swing.JTextField txtTextFile;\n\n    protected javax.swing.JTextField txtTitle;\n\n    /* My GUI variable declarations */\n    protected javax.swing.SpinnerNumberModel spnSecondsSize \u003d new javax.swing.SpinnerNumberModel(0, 0, 59, 1);\n\n    protected javax.swing.SpinnerNumberModel spnMinutesSize \u003d new javax.swing.SpinnerNumberModel(0, 0, 64, 1);\n}\n",
    "package": "",
    "classname": "GUI",
    "id": "/EvoSuiteBenchmark/original/47_dvd-homevideo/src/main/java/GUI_1Test.java",
    "test_prompt": "// GUI_1Test.java\n\n\n//import com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\nimport java.io.FileNotFoundException;\nimport java.io.File;\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.FileFilter;\nimport java.awt.Color;\nimport javax.swing.JFileChooser;\nimport javax.swing.JOptionPane;\nimport java.util.StringTokenizer;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link GUI}.\n* It contains ten unit test cases for the {@link GUI#MessageBox(String)} method.\n*/\nclass GUI_1Test {",
    "method_signature": "MessageBox(String)",
    "suffix": "1"
  },
  {
    "numberTests": "ten",
    "original_code": "// GUI.java\n//import com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\nimport java.io.FileNotFoundException;\nimport java.io.File;\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.FileFilter;\nimport java.awt.Color;\nimport javax.swing.JFileChooser;\nimport javax.swing.JOptionPane;\nimport java.util.StringTokenizer;\n\n/**\n * @author Shane Santner\n * This class provides the GUI for dvd-homevideo.\n */\npublic class GUI extends javax.swing.JFrame {\n\n    /* \n     * Creates a new form, probably the most compilcated - or\n     * messiest constructor I have ever developed.\n     */\n    public GUI() {\n    }\n\n    javax.swing.ImageIcon image \u003d new javax.swing.ImageIcon(getClass().getResource(\"/logo_32x32.png\"));\n\n    protected String strOutputDir;\n\n    protected boolean blnBegin;\n\n    /* My list of dependent programs for dvd-homevideo */\n    protected String[] DependentPrograms \u003d { \"dvgrab\", \"transcode\", \"mplex\", \"dvd-menu\", \"dvdauthor\", \"growisofs\", \"ffmpeg\", \"lame\", \"sox\" };\n\n    // \u003ceditor-fold defaultstate\u003d\"collapsed\" desc\u003d\" Generated Code \"\u003e//GEN-BEGIN:initComponents\n    private void initComponents();\n\n    private //GEN-FIRST:event_menuRd_IgnoreNoneStateChanged\n    void //GEN-FIRST:event_menuRd_IgnoreNoneStateChanged\n    menuRd_IgnoreNoneStateChanged(//GEN-FIRST:event_menuRd_IgnoreNoneStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_menuRd_IgnoreCapConvMenuStateChanged\n    void //GEN-FIRST:event_menuRd_IgnoreCapConvMenuStateChanged\n    menuRd_IgnoreCapConvMenuStateChanged(//GEN-FIRST:event_menuRd_IgnoreCapConvMenuStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_menuRd_IgnoreCapConvStateChanged\n    void //GEN-FIRST:event_menuRd_IgnoreCapConvStateChanged\n    menuRd_IgnoreCapConvStateChanged(//GEN-FIRST:event_menuRd_IgnoreCapConvStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_menuRd_IgnoreCapStateChanged\n    void //GEN-FIRST:event_menuRd_IgnoreCapStateChanged\n    menuRd_IgnoreCapStateChanged(//GEN-FIRST:event_menuRd_IgnoreCapStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_txtOutputDirFocusLost\n    void //GEN-FIRST:event_txtOutputDirFocusLost\n    txtOutputDirFocusLost(//GEN-FIRST:event_txtOutputDirFocusLost\n    java.awt.event.FocusEvent evt);\n\n    private //GEN-FIRST:event_txtTitleFocusLost\n    void //GEN-FIRST:event_txtTitleFocusLost\n    txtTitleFocusLost(//GEN-FIRST:event_txtTitleFocusLost\n    java.awt.event.FocusEvent evt);\n\n    private //GEN-FIRST:event_btnOpen_OutputDirKeyTyped\n    void //GEN-FIRST:event_btnOpen_OutputDirKeyTyped\n    btnOpen_OutputDirKeyTyped(//GEN-FIRST:event_btnOpen_OutputDirKeyTyped\n    java.awt.event.KeyEvent evt);\n\n    private //GEN-FIRST:event_btnOpen_OutputDirMouseClicked\n    void //GEN-FIRST:event_btnOpen_OutputDirMouseClicked\n    btnOpen_OutputDirMouseClicked(//GEN-FIRST:event_btnOpen_OutputDirMouseClicked\n    java.awt.event.MouseEvent evt);\n\n    private //GEN-FIRST:event_spnSecondsStateChanged\n    void //GEN-FIRST:event_spnSecondsStateChanged\n    spnSecondsStateChanged(//GEN-FIRST:event_spnSecondsStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private //GEN-FIRST:event_spnMinutesStateChanged\n    void //GEN-FIRST:event_spnMinutesStateChanged\n    spnMinutesStateChanged(//GEN-FIRST:event_spnMinutesStateChanged\n    javax.swing.event.ChangeEvent evt);\n\n    private void btnStartKeyTyped(java.awt.event.KeyEvent evt);\n\n    private void btnExitKeyTyped(java.awt.event.KeyEvent evt);\n\n    private void menuChkThreadItemStateChanged(java.awt.event.ItemEvent evt);\n\n    private void menuAboutMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Exit button.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void btnExitMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user changing the state of one\n     * of the menu radio buttions.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void menuRd_16_9ItemStateChanged(java.awt.event.ItemEvent evt);\n\n    /**\n     * This is the code that handles the user changing the state of one\n     * of the menu radio buttions.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void menuRd_4_3ItemStateChanged(java.awt.event.ItemEvent evt);\n\n    /**\n     * This is the code that handles the user changing the state of one\n     * of the menu radio buttions.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void menuRdPALItemStateChanged(java.awt.event.ItemEvent evt);\n\n    /**\n     * This is the code that handles the user changing the state of one\n     * of the menu radio buttions.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void menuRdNTSCItemStateChanged(java.awt.event.ItemEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Play button.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void btnPlayMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the SubmitBug button\n     * in the Help menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuBugMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Open button\n     * from the File menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuOpenMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Save button\n     * from the File menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuSaveMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the dvd-homevideo website\n     * button from the Help menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuInternetMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the README file\n     * button from the Help menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuREADMEMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Exit button\n     * from the File menu.\n     * @param   evt    The mousePressed event handled by this method\n     */\n    private void menuExitMousePressed(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking the Start button.\n     * @param   evt    The mouseClicked event handled by this method\n     */\n    private void btnStartMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user typing Return on the\n     * Open button to search for a title file to use for dvd-menu.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_TextFileKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user typing Return on the\n     * Open button to search for an output directory to locate an\n     * audio file.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_AudioKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user typing Return on the\n     * Open button to search for an output directory to locate a\n     * picture in.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_PictureKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user typing the Space bar\n     * on the check box for the menu\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void chkMenuKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user typing the Space bar\n     * on the check box for the quality group of radio buttons\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void chkQualityKeyTyped(java.awt.event.KeyEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * Open button to search for an output directory to locate a\n     * picture in.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_PictureMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * Open button to search for an output directory to locate an\n     * audio file in.\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_AudioMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * Open button to search for a title file to be used for\n     * the background menu of the DVD\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void btnOpen_TextFileMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * check box to select the quality of video conversion for\n     * their DVD\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void chkQualityMouseClicked(java.awt.event.MouseEvent evt);\n\n    /**\n     * This is the code that handles the user clicking on the\n     * check box to specify details for the DVD menu\n     * @param   evt    The KeyTyped event handled by this method\n     */\n    private void chkMenuMouseClicked(java.awt.event.MouseEvent evt);\n\n    public void enableStartButton();\n\n    /**\n     * On startup, checks to ensure that the raw1394 module is loaded.\n     * This module is only needed to capture audio and video from the\n     * dv camcorder.\n     * return   A boolean indicating if the module is present\n     */\n    public boolean checkForModules();\n\n    /**\n     * On startup, checks to ensure that all dependent programs are installed\n     * @param   Prog[]  List of dependent programs needed for dvd-homevideo\n     * @return  A boolean to determine if an error occurred in the function\n     */\n    public boolean checkForProg(String[] Prog);\n\n    /**\n     * Displays a message box with the supplied text and yes/no options\n     * @param   message    The message to display in the box\n     */\n    public int MessageBox(String message);\n\n    /**\n     * Displays a message box with the supplied text and type\n     * @param   message    The message to display in the box\n     * @param   type       The type of message (Info, Warning or Error)\n     */\n    public void MessageBox(String message, int type);\n\n    /**\n     * Displays a message box with the supplied text and type\n     * @param   message    The message to display in the box\n     * @param   type       The type of message (Info, Warning or Error)\n     * @param   picture    Picture to display in the MessageBox\n     */\n    public void MessageBox(String message, int type, String picture);\n\n    /**\n     * Check dvd-homevideo for runtime errors\n     * @param   fileName    This is a log file to parse through, looking for\n     *                      the keyword \"Error\"\n     * @return   A boolean indicating if an error was found\n     */\n    public boolean ErrorCheck(String fileName);\n\n    /**\n     * Update the Status textbox\n     * @param   typeColor   red, green, or grey\n     * @param   typeUpdate  Values should be PASS, FAIL, Status\n     */\n    public void UpdateStatus(Color typeColor, String typeUpdate);\n\n    /**\n     * This method should be called every time the application exits normally.  This allows the\n     * current session to be saved before quiting dvd-homevideo.\n     */\n    public void ExitDVDHomevideo();\n\n    /**\n     * This method retrieves user specific information from the\n     * properties xml file in the users ~/.dvd-homevideo directory\n     */\n    public void ReadProjProperties();\n\n    /**\n     * This method stores user specific information in a properties xml file\n     * in the users ~/.dvd-homevideo directory\n     */\n    public void WriteProjProperties();\n\n    /**\n     * Opens a previous dvd-homevideo session by reading an xml file\n     * @param   xmlPath    Path to the xml file\n     */\n    public void ReadSession(String xmlPath);\n\n    /**\n     * Saves the state of all widgets on the GUI form in an xml file\n     * in the users ~/.dvd-homevideo directory\n     */\n    public void WriteSession() throws IOException;\n\n    // Variables declaration - do not modify//GEN-BEGIN:variables\n    private javax.swing.JButton btnExit;\n\n    private javax.swing.JButton btnOpen_Audio;\n\n    private javax.swing.JButton btnOpen_OutputDir;\n\n    private javax.swing.JButton btnOpen_Picture;\n\n    private javax.swing.JButton btnOpen_TextFile;\n\n    protected javax.swing.JButton btnPlay;\n\n    private javax.swing.JButton btnStart;\n\n    protected javax.swing.JCheckBox chkBurn;\n\n    protected javax.swing.JCheckBox chkMenu;\n\n    protected javax.swing.JCheckBox chkQuality;\n\n    private javax.swing.JFileChooser fcMenuOpen;\n\n    private javax.swing.JFileChooser fcOpen;\n\n    private javax.swing.ButtonGroup grpAspectRatio;\n\n    private javax.swing.ButtonGroup grpFormat;\n\n    private javax.swing.ButtonGroup grpMenuAspectRatio;\n\n    private javax.swing.ButtonGroup grpMenuFormat;\n\n    private javax.swing.ButtonGroup grpMenuIgnore;\n\n    private javax.swing.ButtonGroup grpMenuMode;\n\n    private javax.swing.ButtonGroup grpQuality;\n\n    private javax.swing.JLabel lblAspectRatio;\n\n    private javax.swing.JLabel lblAudio;\n\n    protected javax.swing.JLabel lblAuthor;\n\n    protected javax.swing.JLabel lblAuthorProg;\n\n    protected javax.swing.JLabel lblCapture;\n\n    protected javax.swing.JLabel lblCaptureProg;\n\n    protected javax.swing.JLabel lblConvert;\n\n    protected javax.swing.JLabel lblConvertProg;\n\n    private javax.swing.JLabel lblFormat;\n\n    private javax.swing.JLabel lblMinutes;\n\n    private javax.swing.JLabel lblOutputDir;\n\n    private javax.swing.JLabel lblPicture;\n\n    private javax.swing.JLabel lblSeconds;\n\n    private javax.swing.JLabel lblTextFile;\n\n    private javax.swing.JLabel lblTitle;\n\n    private javax.swing.JMenuItem menuAbout;\n\n    protected javax.swing.JMenuBar menuBarMain;\n\n    private javax.swing.JMenuItem menuBug;\n\n    protected javax.swing.JCheckBoxMenuItem menuChkThread;\n\n    protected javax.swing.JMenuItem menuExit;\n\n    protected javax.swing.JMenu menuFile;\n\n    protected javax.swing.JMenu menuHelp;\n\n    protected javax.swing.JMenuItem menuInternet;\n\n    protected javax.swing.JMenuItem menuOpen;\n\n    private javax.swing.JMenu menuProjProp;\n\n    protected javax.swing.JMenuItem menuREADME;\n\n    private javax.swing.JRadioButtonMenuItem menuRdNTSC;\n\n    private javax.swing.JRadioButtonMenuItem menuRdPAL;\n\n    private javax.swing.JRadioButtonMenuItem menuRd_16_9;\n\n    private javax.swing.JRadioButtonMenuItem menuRd_4_3;\n\n    protected javax.swing.JRadioButtonMenuItem menuRd_IgnoreCap;\n\n    protected javax.swing.JRadioButtonMenuItem menuRd_IgnoreCapConv;\n\n    protected javax.swing.JRadioButtonMenuItem menuRd_IgnoreCapConvMenu;\n\n    protected javax.swing.JRadioButtonMenuItem menuRd_IgnoreNone;\n\n    protected javax.swing.JMenuItem menuSave;\n\n    protected javax.swing.JMenu menuTools;\n\n    private javax.swing.JPanel pnlGUI;\n\n    protected javax.swing.JProgressBar prgAuthor;\n\n    protected javax.swing.JProgressBar prgCapture;\n\n    protected javax.swing.JProgressBar prgConvert;\n\n    protected javax.swing.JRadioButton rd16_9;\n\n    protected javax.swing.JRadioButton rd4_3;\n\n    protected javax.swing.JRadioButton rdAverage;\n\n    protected javax.swing.JRadioButton rdGood;\n\n    protected javax.swing.JRadioButton rdNTSC;\n\n    protected javax.swing.JRadioButton rdPAL;\n\n    protected javax.swing.JRadioButton rdSuper;\n\n    private javax.swing.JScrollPane spTextArea;\n\n    protected javax.swing.JSpinner spnMinutes;\n\n    protected javax.swing.JSpinner spnSeconds;\n\n    private javax.swing.JSeparator sprAspectRatio;\n\n    private javax.swing.JSeparator sprCapConvert;\n\n    private javax.swing.JSeparator sprIgnore;\n\n    private javax.swing.JSeparator sprMenuAuthor;\n\n    private javax.swing.JSeparator sprMenuFormatAspect;\n\n    private javax.swing.JSeparator sprMenuThread;\n\n    protected javax.swing.JSeparator sprOpen;\n\n    protected javax.swing.JSeparator sprSave;\n\n    protected javax.swing.JTextArea txtAreaOutput;\n\n    protected javax.swing.JTextField txtAudio;\n\n    protected javax.swing.JTextField txtOutputDir;\n\n    protected javax.swing.JTextField txtPicture;\n\n    protected javax.swing.JTextField txtStatus;\n\n    protected javax.swing.JTextField txtTextFile;\n\n    protected javax.swing.JTextField txtTitle;\n\n    /* My GUI variable declarations */\n    protected javax.swing.SpinnerNumberModel spnSecondsSize \u003d new javax.swing.SpinnerNumberModel(0, 0, 59, 1);\n\n    protected javax.swing.SpinnerNumberModel spnMinutesSize \u003d new javax.swing.SpinnerNumberModel(0, 0, 64, 1);\n}\n",
    "package": "",
    "classname": "GUI",
    "id": "/EvoSuiteBenchmark/original/47_dvd-homevideo/src/main/java/GUI_2Test.java",
    "test_prompt": "// GUI_2Test.java\n\n\n//import com.sun.corba.se.impl.protocol.giopmsgheaders.Message;\nimport java.io.FileNotFoundException;\nimport java.io.File;\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.FileFilter;\nimport java.awt.Color;\nimport javax.swing.JFileChooser;\nimport javax.swing.JOptionPane;\nimport java.util.StringTokenizer;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link GUI}.\n* It contains ten unit test cases for the {@link GUI#ErrorCheck(String)} method.\n*/\nclass GUI_2Test {",
    "method_signature": "ErrorCheck(String)",
    "suffix": "2"
  },
  {
    "numberTests": "ten",
    "original_code": "// Convert.java\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStreamReader;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.lang.StringIndexOutOfBoundsException;\nimport java.util.StringTokenizer;\n\n/**\n * @author Shane Santner\n * This class is used to transcode the video captured\n * from the digital camcorder into mpeg4, the DVD compatible\n * format.  It explicitly calls the transcode command\n * after meticulously preparing the options that can be passed\n * to transcode.\n *\n * TODO - Break mplex out into its own class.\n *        Figure out how to calculate remaining time even if\n *        video was not captured from the camcorder during the\n *        current session.\n *        Need to handle input, output and error streams\n *        more appropriatly.\n */\npublic class Convert implements Runnable {\n\n    /**\n     * Creates a new instance of Convert based on the video\n     * format and aspect ratio specified.\n     * @param   format      This specifies either PAL or NTSC\n     * @param   aspectRatio This can be either 4:3 or 16:9\n     * @param   DVD_GUI     This is the GUI object used to control the form\n     */\n    public Convert(String format, String aspectRatio, GUI DVD_GUI) {\n    }\n\n    /**\n     * Overloaded Constructor - accounts for quality being selected\n     * @param   quality     The quality of the video compression\n     * @param   format      This specifies either PAL or NTSC\n     * @param   aspectRatio This can be either 4:3 or 16:9\n     * @param   DVD_GUI     This is the GUI object used to control the form\n     */\n    public Convert(int quality, String format, String aspectRatio, GUI DVD_GUI) {\n    }\n\n    /**\n     * Convert Member Variables\n     */\n    private int m_Quality;\n\n    private double m_fps;\n\n    private String m_Format;\n\n    private String m_AspectRatio;\n\n    private String m_flags;\n\n    private String m_bitrate \u003d \"8500\";\n\n    protected String[] video_files;\n\n    private GUI m_GUI;\n\n    private Thread m_Thread;\n\n    private boolean m_Error;\n\n    private int thread_track;\n\n    private String m_BaseErr \u003d \"Transcoding Error - \";\n\n    private String m_transcode \u003d \"transcode -i dv/inp -m test1.ac3 -o test1 -w bitr -x dv,dv\" + \" -F flags -y mpeg2enc,raw -N 0x2000 -b 256 --encode_fields b\" + \" -E 48000,16,2 -J resample\" + \" --export_prof format --export_fps frames/s --export_asr aspectRatio\" + \" -j 0,8,0,8 --print_status 30\";\n\n    private String mplex \u003d \"mplex -f 8 -V -o inp.vob inp.m2v inp.ac3\";\n\n    /**\n     * Used to instantiate a new thread and to perform error checking.\n     * @return  A boolean to determine if an error occurred in the function\n     */\n    public boolean init();\n\n    /**\n     * Implements the run() method of the Runnable interface.  Makes multi-threading\n     * possible.\n     */\n    public void run();\n\n    /**\n     * Encodes dv files to mpeg using transcode, then uses mplex to combine\n     * the .ac3 audio and .m2v video files into a DVD compatible .vob file\n     */\n    public void Transcode();\n\n    /**\n     * Outputs a text file to be used by mpeg2enc for encoding\n     * @param   m_GUI This is the GUI object used to control the form\n     */\n    public void matrix();\n}\n",
    "package": "",
    "classname": "Convert",
    "id": "/EvoSuiteBenchmark/original/47_dvd-homevideo/src/main/java/Convert.java",
    "test_prompt": "// ConvertTest.java\n\n\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.InputStreamReader;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.lang.StringIndexOutOfBoundsException;\nimport java.util.StringTokenizer;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Convert}.\n* It contains ten unit test cases for the {@link Convert#init()} method.\n*/\nclass ConvertTest {",
    "method_signature": "init()",
    "suffix": ""
  }
]