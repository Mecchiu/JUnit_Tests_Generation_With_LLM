ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
cmpl-6wiA6aZ8tNfc8Me9F3129BJeEi8H2,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main0.java,53.39420676231384,length,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static ColorModel getColorModel() {
        return colorModel;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getColorModel()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getColorModel()} method.
*/
class MainTest {

	/**
	* Test case for {@link Main#getColorModel()} method.
	*/
	@Test
	void testGetColorModel() {
		// TODO: implement test
		fail(""Not yet implemented"");
	}
}

// MouseController.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.model.PlayerEvent;
import visu.handball.moves.model.PlayerEventType;
import visu.handball.moves.model.PlayerPosition;
import visu.handball.moves.model.PlayerPositionType;
import visu.handball.moves.model.Sequence;
import visu.handball.moves.views.Field;

/**
 * Controller f√ºr die Maus-Eingaben
 *
 * @author tommy
 */
public class MouseController implements MouseListener, MouseMotionListener {

    private final HandballModel model;
    private final Field field;
    private final PlayerToolBar playerToolBar;
    private final JMenuHelper menuHelper;
    private final CommentController commentController;
    private final StatusBar statusBar;
    private final TableSelectionListener tableSelectionListener;
    private final TableHandballModel tableHandballModel;

    public MouseController(HandballModel model, Field field, PlayerToolBar playerToolBar, JMenuHelper menuHelper, CommentController commentController, StatusBar statusBar, TableSelectionListener tableSelectionListener, TableHandballModel tableHandballModel) {
        this.model = model;
        this.field = field;
        this.playerToolBar = playerToolBar;
        this.menuHelper = menuHelper;
        this.commentController = commentController;
        this.statusBar = statusBar;
        this.tableSelectionListener = tableSelectionListener;
        this.tableHandballModel = tableHandballModel;
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        if (e.getButton() == MouseEvent.BUTTON1) {
            if (e.getClickCount() == 2) {
                if (model.getSelectedPlayer() != null) {
                    PlayerEventType eventType = playerToolBar.getSelectedEventType();
                    if (eventType != null) {
                        PlayerEvent event = new PlayerEvent(eventType, model.getSelectedPlayer(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer().getPosition(), model.getSelectedPlayer"
cmpl-6wiB9vbTOtmbDYWYa5E4OyP6O2AbB,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main1.java,58.249401330947876,length,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static JFrame getWindow() {
        return window;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getWindow()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getWindow()} method.
*/
class MainTest {

	/**
	* Test case for the {@link Main#getWindow()} method.
	*/
	@Test
	void testGetWindow() {
		assertNotNull(Main.getWindow());
	}
}

// MouseController.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.views.Field;

/**
 * Controller f√ºr die Maus-Events
 *
 * @author tommy
 */
public class MouseController implements MouseListener, MouseMotionListener, MouseWheelListener {

    private Field field;
    private HandballModel model;

    public MouseController(Field field, HandballModel model) {
        this.field = field;
        this.model = model;
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        if (e.getButton() == MouseEvent.BUTTON1) {
            model.setBallPosition(e.getX(), e.getY());
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }

    @Override
    public void mouseDragged(MouseEvent e) {
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        model.setBallPosition(e.getX(), e.getY());
    }

    @Override
    public void mouseWheelMoved(MouseWheelEvent e) {
        if (e.getWheelRotation() < 0) {
            field.zoomIn();
        } else {
            field.zoomOut();
        }
    }
}

// MouseControllerTest.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseWheelEvent;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.views.Field;

/**
* Test class of {@link MouseController}.
* It contains ten unit test cases for the {@link MouseController#mouseClicked(MouseEvent)} method.
*/
class MouseControllerTest {
		
	/**
	* Test case for the {@link MouseController#mouseClicked(MouseEvent)} method.
	*/
	@Test
	void testMouseClicked() {
		MouseController mouseController = new MouseController(new Field(), new HandballModel());
		mouseController.mouseClicked(new MouseEvent(new Object(), 0, 0, 0, 0, 0, 0, false));
	}
}

// NewAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;

/**
 * Action zum Erstellen einer neuen Sequenz
 *
 * @author tommy
 */
public class NewAction extends AbstractAction {

    private HandballModel model;

    public NewAction(HandballModel model) {
        this.model = model;
        putValue(Action.NAME, ""Neu"");
        putValue(Action.SMALL_ICON, new ImageIcon(getClass().getResource(""/images/new.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_N, KeyEvent.CTRL_DOWN_MASK));
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        model.newSequence();
    }
}

// NewActionTest.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import visu.handball.moves.model.HandballModel;

/**
* Test class of {@link NewAction}.
* It contains ten unit test cases for the {@link NewAction#actionPerformed(ActionEvent)} method.
*/
class NewActionTest {
		
	/**
	* Test case for the {@link NewAction#actionPerformed(ActionEvent)} method.
	*/
	@Test
	void testActionPerformed() {
		NewAction newAction = new NewAction(new HandballModel());
		newAction.actionPerformed(new ActionEvent(new Object(), 0, """"));
	}
}

// NewMoveEventAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;

/**
 * Action zum Erstellen eines neuen Move-Events
 *
 * @author tommy
 */
public class NewMoveEventAction extends AbstractAction {

    private HandballModel model;

    public NewMoveEventAction(HandballModel model) {
        this.model = model;
        putValue(Action.NAME, ""Move"");
        putValue(Action.SMALL_ICON, new ImageIcon(getClass().getResource(""/images/move.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_M, KeyEvent.CTRL_DOWN_MASK));
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        model.newMoveEvent();
    }
}

// NewMoveEventActionTest.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import visu.handball.moves.model.HandballModel;

/**
* Test class of {@link NewMoveEventAction}.
* It contains ten unit test cases for the {@link NewMoveEventAction#actionPerformed(ActionEvent)} method.
*/
class NewMoveEventActionTest {
		
	/**
	* Test case for the {@link NewMoveEventAction#actionPerformed(ActionEvent)} method.
	*/
	@Test
	void testActionPerformed() {
		NewMoveEventAction newMoveEventAction = new NewMoveEventAction(new HandballModel());
		newMoveEventAction.actionPerformed(new ActionEvent(new Object(), 0, """"));
	}
}

// NewPassEventAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;

/**
 * Action zum Erstellen eines neuen Pass-Events
 *
 * @author tommy
 */
public class NewPassEventAction extends AbstractAction {

    private HandballModel model;

    public NewPassEventAction(HandballModel model) {
        this.model = model;
        put"
cmpl-6wiCC5ymkeRfq0Gpgs6RQqGPyvezz,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main2.java,69.25195860862732,length,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static Field getField() {
        return field;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getField()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getField()} method.
*/
class MainTest {

	/**
	* Test case for the {@link Main#getField()} method.
	*/
	@Test
	void testGetField() {
		// TODO: implement this test case
		fail(""Not yet implemented"");
	}
}

// MouseController.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.model.PlayerEvent;
import visu.handball.moves.model.PlayerEvent.EventType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType"
cmpl-6wiDJrK264D9CtzSyDuO3B3lo3HSR,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main3.java,79.20904755592346,length,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static SaveAction getSaveAction() {
        return saveAction;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getSaveAction()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getSaveAction()} method.
*/
class MainTest {

	/**
	* Test case for the {@link Main#getSaveAction()} method.
	*/
	@Test
	void testGetSaveAction() {
		// TODO: implement this test case
		fail(""Not yet implemented"");
	}
}

// MouseController.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.model.PlayerEvent;
import visu.handball.moves.model.PlayerEventType;
import visu.handball.moves.model.PlayerPosition;
import visu.handball.moves.model.PlayerPositionType;
import visu.handball.moves.model.Sequence;
import visu.handball.moves.views.Field;

/**
 * Controller f√ºr die Maus-Eingaben
 *
 * @author tommy
 */
public class MouseController implements MouseListener, MouseMotionListener {

    private final HandballModel model;
    private final Field field;
    private final PlayerToolBar playerToolBar;
    private final JMenuHelper menuHelper;
    private final CommentController commentController;
    private final StatusBar statusBar;
    private final ColorModel colorModel;
    private final TableHandballModel tableHandballModel;
    private final TableSelectionListener tableSelectionListener;
    private final PlayerPositionType playerPositionType;
    private final PlayerEventType playerEventType;
    private final PlayerPosition playerPosition;
    private final PlayerEvent playerEvent;
    private final Player player;
    private final Sequence sequence;

    public MouseController(HandballModel model, Field field, PlayerToolBar playerToolBar, JMenuHelper menuHelper, CommentController commentController, StatusBar statusBar, ColorModel colorModel, TableHandballModel tableHandballModel, TableSelectionListener tableSelectionListener, PlayerPositionType playerPositionType, PlayerEventType playerEventType, PlayerPosition playerPosition, PlayerEvent playerEvent, Player player, Sequence sequence) {
        this.model = model;
        this.field = field;
        this.playerToolBar = playerToolBar;
        this.menuHelper = menuHelper;
        this.commentController = commentController;
        this.statusBar = statusBar;
        this.colorModel = colorModel;
        this.tableHandballModel = tableHandballModel;
        this.tableSelectionListener = tableSelectionListener;
        this.playerPositionType = playerPositionType;
        this.playerEventType = playerEventType;
        this.playerPosition = playerPosition;
        this.playerEvent = playerEvent;
        this.player = player;
        this.sequence = sequence;
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        if (e.getButton() == MouseEvent.BUTTON1) {
            if (playerToolBar.getSelectedPlayerPositionType() != null) {
                if (playerToolBar.getSelectedPlayerEventType() != null) {
                    PlayerPosition playerPosition = new PlayerPosition(playerToolBar.getSelectedPlayerPositionType(), e.getX(), e.getY());
                    PlayerEvent playerEvent = new PlayerEvent(playerToolBar.getSelectedPlayerEventType(), playerPosition);
                    Player player = new Player(playerToolBar.getSelectedPlayerNumber(), playerEvent);
                    Sequence sequence = model.getSequence();
                    sequence.addPlayer(player);
                    tableHandballModel.fireTableDataChanged();
                    tableSelectionListener.setSelectedRow(sequence.getPlayers().size() - 1);
                    field.repaint();
                    menuHelper.setEnabled(true);
                    commentController.setEnabled(true);
                    statusBar.setText(""Spieler "" + player.getNumber() + "" wurde hinzugef√ºgt"");
                } else {
                    statusBar.setText(""Kein Spieler-Event ausgew√§hlt"");
                }
            } else {
                statusBar.setText(""Kein Spieler-Position ausgew√§hlt"");
            }
        } else if (e.getButton() == MouseEvent.BUTTON3) {
            Sequence sequence = model.getSequence();
            if (sequence.getPlayers().size() > 0) {
                sequence.removePlayer(sequence.getPlayers().size() - 1);
                tableHandballModel.fireTableDataChanged();
                tableSelectionListener.setSelectedRow(sequence.getPlayers().size() - 1);
                field.repaint();
                menuHelper.setEnabled(true);
                commentController.setEnabled(true);
                statusBar.setText(""Spieler wurde entfernt"");
            } else {
                statusBar.setText(""Kein Spieler vorhanden"");
            }
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }

    @Override
    public void mouseDragged(MouseEvent e) {
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        statusBar.setText(""X: "" + e.getX() + "" Y: "" + e.getY());
    }
}

// MouseControllerTest.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.model.PlayerEvent;
import visu.handball.moves.model.PlayerEventType;
import visu.handball.moves.model.PlayerPosition;
import visu.handball.moves.model.PlayerPositionType;
import visu.handball.moves.model.Sequence;
import visu.handball.moves.views.Field;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link MouseController}.
* It contains ten unit test cases for the {@link MouseController#mouseClicked(MouseEvent)} method.
*/
class MouseControllerTest {
		
	/**
	* Test case for the {@link MouseController#mouseClicked(MouseEvent)} method.
	*/
	@Test
	void testMouseClicked() {
		// TODO: implement this test case
		fail(""Not yet implemented"");
	}
}

// NewAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.resources.Resources;

/**
 * Action zum Erstellen einer neuen Sequenz
 *
 * @author tommy
 */
public class NewAction extends AbstractAction {

    private final HandballModel model;

    public NewAction(HandballModel model) {
        this.model = model;
        putValue(Action.NAME, ""Neu"");
        putValue(Action.SMALL_ICON, new ImageIcon(Resources.getImage(""new.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_N, ActionEvent.CTRL_MASK));
        putValue(Action.SHORT_DESCRIPTION, ""Neue Sequenz erstellen"");
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        model.setSequence(new Sequence());
    }
}

// NewActionTest.java
package vis"
cmpl-6wiEaArdoEI2YM7XZmlZoiXOHAY0O,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main4.java,72.34701085090637,length,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static CloseAction getCloseAction() {
        return closeAction;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getCloseAction()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getCloseAction()} method.
*/
class MainTest {

	/**
	* Test case for the {@link Main#getCloseAction()} method.
	*/
	@Test
	void testGetCloseAction() {
		// TODO: implement this test case
		fail(""Not yet implemented"");
	}
}

// MouseController.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.model.PlayerEvent;
import visu.handball.moves.model.PlayerEvent.EventType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType"
cmpl-6wiFlC4T16uSq7vCwxQ6uaTXDI4vT,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main5.java,45.00940203666687,stop,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static Object deepCopy(Object oldObj) throws Exception {
        Object clone = null;
        try {
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(baos);
            oos.writeObject(oldObj);
            oos.flush();
            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));
            clone = ois.readObject();
            oos.close();
            ois.close();
        } catch (Exception e) {
            //$NON-NLS-1$
            System.out.println(""Exception in ObjectCloner = "" + e);
            throw (e);
        }
        return clone;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#deepCopy(Object)} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#deepCopy(Object)} method.
*/
class MainTest {

	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_1() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_2() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_3() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_4() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_5() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_6() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_7() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_8() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_9() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_10() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
}"
cmpl-6wiGoyvmvzl6tcPXelM841xB7b1v3,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main6.java,2.435781240463257,stop,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static String getVersion() {
        //$NON-NLS-1$
        return ""1.0.5"";
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getVersion()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getVersion()} method.
*/
class MainTest {

	/**
	* Test case for {@link Main#getVersion()}.
	*/
	@Test
	void testGetVersion() {
		assertEquals(""1.0.5"", Main.getVersion());
	}
}"
cmpl-6wiHrVH60aQT03kX1C2WIwIHzWmN6,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/controller/JMenuHelper.java,44.63859462738037,,"// JMenuHelper.java
package visu.handball.moves.controller;

import java.awt.event.*;
import javax.swing.*;

public class JMenuHelper {

    public static JMenu addMenuBarItem(JMenuBar menuBar, String s) {
        JMenu menu;
        /**
         * Suche nach '_' und nimm das n√§chste Zeichen als Mnemonic,
         * sonst: normales Menu
         */
        if (s.indexOf(""_"") > -1) {
            int pos = s.indexOf(""_"");
            char c = s.charAt(pos + 1);
            StringBuffer sb = new StringBuffer(s).delete(pos, pos + 1);
            menu = new JMenu(sb.toString());
            menu.setMnemonic(c);
        } else
            menu = new JMenu(s);
        menuBar.add(menu);
        return menu;
    }
}
","// JMenuHelperTest.java
package visu.handball.moves.controller;

import java.awt.event.*;
import javax.swing.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link JMenuHelper}.
* It contains ten unit test cases for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
*/
class JMenuHelperTest {","// JMenuHelperTest.java
package visu.handball.moves.controller;

import java.awt.event.*;
import javax.swing.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link JMenuHelper}.
* It contains ten unit test cases for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
*/
class JMenuHelperTest {

	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the normal case.
	*/
	@Test
	void testAddMenuBarItem_NormalCase() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""Test"");
		assertEquals(""Test"", menu.getText());
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is null.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsNull() {
		JMenuBar menuBar = null;
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""Test"");
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is empty.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsEmpty() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, """");
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is null and the menu is empty.
	*/
	@Test
	void testAddMenuBarItem_MenuBarAndMenuAreEmpty() {
		JMenuBar menuBar = null;
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, """");
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is empty and the menu is null.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsEmptyAndMenuIsNull() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, null);
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is null and the menu is null.
	*/
	@Test
	void testAddMenuBarItem_MenuBarAndMenuAreNull() {
		JMenuBar menuBar = null;
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, null);
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is empty and the menu is null.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsEmptyAndMenuIsNull() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, null);
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is null and the menu is empty.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsNullAndMenuIsEmpty() {
		JMenuBar menuBar = null;
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, """");
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is null and the menu is null.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsNullAndMenuIsNull() {
		JMenuBar menuBar = null;
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, null);
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is empty and the menu is empty.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsEmptyAndMenuIsEmpty() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, """");
		assertNull(menu);
	}
}"
