[
    {
        "id": "cmpl-6xA7hZYLUKdxUJosYj6M4UPznDbuR",
        "object": "text_completion",
        "created": 1679558285,
        "model": "code-davinci-002",
        "choices": [
            {
                "text": "// HSSFDataFormatTest.java\n/*\n * HSSFDataFormat.java\n *\n * Created on December 18, 2001, 12:42 PM\n */\npackage org.apache.poi.hssf.usermodel;\n\nimport org.apache.poi.hssf.model.Workbook;\nimport org.apache.poi.hssf.record.FormatRecord;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.ListIterator;\nimport java.util.Vector;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HSSFDataFormat}.\n* It contains ten unit test cases for the {@link HSSFDataFormat#getFormat(String)} method.\n*/\nclass HSSFDataFormatTest {\n\t\t\n\t/**\n\t * Test case for {@link HSSFDataFormat#getFormat(String)}\n\t * \n\t * @author Andrew C. Oliver (acoliver at apache dot org)\n\t */\n\t@Test\n\tpublic void testGetFormat() {\n\t\tHSSFWorkbook wb = new HSSFWorkbook();\n\t\tHSSFDataFormat df = wb.createDataFormat();\n\t\tassertEquals(0, df.getFormat(\"text\"));\n\t\tassertEquals(1, df.getFormat(\"0\"));\n\t\tassertEquals(2, df.getFormat(\"0.00\"));\n\t\tassertEquals(3, df.getFormat(\"#,##0\"));\n\t\tassertEquals(4, df.getFormat(\"#,##0.00\"));\n\t\tassertEquals(5, df.getFormat(\"($#,##0_);($#,##0)\"));\n\t\tassertEquals(6, df.getFormat(\"($#,##0_);[Red]($#,##0)\"));\n\t\tassertEquals(7, df.getFormat(\"($#,##0.00_);($#,##0.00)\"));\n\t\tassertEquals(8, df.getFormat(\"($#,##0.00_);[Red]($#,##0.00)\"));\n\t\tassertEquals(9, df.getFormat(\"0%\"));\n\t\tassertEquals(10, df.getFormat(\"0.00%\"));\n\t\tassertEquals(11, df.getFormat(\"0.00E+00\"));\n\t\tassertEquals(12, df.getFormat(\"# ?/?\"));\n\t\tassertEquals(13, df.getFormat(\"# ??/??\"));\n\t\tassertEquals(14, df.getFormat(\"mm-dd-yy\"));\n\t\tassertEquals(15, df.getFormat(\"d-mmm-yy\"));\n\t\tassertEquals(16, df.getFormat(\"d-mmm\"));\n\t\tassertEquals(17, df.getFormat(\"mmm-yy\"));\n\t\tassertEquals(18, df.getFormat(\"h:mm AM/PM\"));\n\t\tassertEquals(19, df.getFormat(\"h:mm:ss AM/PM\"));\n\t\tassertEquals(20, df.getFormat(\"h:mm\"));\n\t\tassertEquals(21, df.getFormat(\"h:mm:ss\"));\n\t\tassertEquals(22, df.getFormat(\"m/d/yy h:mm\"));\n\t\tassertEquals(37, df.getFormat(\"#,##0 ;(#,##0)\"));\n\t\tassertEquals(38, df.getFormat(\"#,##0 ;[Red](#,##0)\"));\n\t\tassertEquals(39, df.getFormat(\"#,##0.00;(#,##0.00)\"));\n\t\tassertEquals(40, df.getFormat(\"#,##0.00;[Red](#,##0.00)\"));\n\t\tassertEquals(45, df.getFormat(\"mm:ss\"));\n\t\tassertEquals(46, df.getFormat(\"[h]:mm:ss\"));\n\t\tassertEquals(47, df.getFormat(\"mmss.0\"));\n\t\tassertEquals(48, df.getFormat(\"##0.0E+0\"));\n\t\tassertEquals(49, df.getFormat(\"@\"));\n\t\tassertEquals(27, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(30, df.getFormat(\"m/d/yy\"));\n\t\tassertEquals(36, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(50, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(57, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(59, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(32, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(33, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(44, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(31, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(35, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(58, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(56, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(55, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(52, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(53, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(54, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(26, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(29, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(28, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(34, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(51, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(23, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(24, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(25, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(41, df.getFormat(\"_(* #,##0_);_(* (#,##0);_(* \\\"-\\\"_);_(@_)\"));\n\t\tassertEquals(42, df.getFormat(\"_($* #,##0_);_($* (#,##0);_($* \\\"-\\\"_);_(@_)\"));\n\t\tassertEquals(43, df.getFormat(\"_(* #,##0.00_);_(* (#,##0.00);_(* \\\"-\\\"??_);_(@_)\"));\n\t\tassertEquals(61, df.getFormat(\"_(\\\"$\\\"* #,##0.00_);_(\\\"$\\\"* (#,##0.00);_(\\\"$\\\"* \\\"-\\\"??_);_(@_)\"));\n\t\tassertEquals(62, df.getFormat(\"mm:ss.0\"));\n\t\tassertEquals(63, df.getFormat(\"##0.0E+0\"));\n\t\tassertEquals(64, df.getFormat(\"@\"));\n\t\tassertEquals(65, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(66, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(67, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(68, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(69, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(70, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(71, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(72, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(73, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(74, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(75, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(76, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(77, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(78, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(79, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(80, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(81, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(82, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(83, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(84, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(85, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(86, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(87, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(88, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(89, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(90, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(91, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(92, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(93, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(94, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(95, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(96, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(97, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(98, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(99, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(100, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(101, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(102, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(103, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(104, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(105, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(106, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(107, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(108, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(109, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(110, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(111, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(112, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(113, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(114, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(115, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(116, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(117, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(118, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(119, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(120, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(121, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(122, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(123, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(124, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(125, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(126, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(127, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(128, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(129, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(130, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(131, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(132, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(133, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(134, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(135, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(136, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(137, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(138, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(139, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(140, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(141, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(142, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(143, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(144, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(145, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(146, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(147, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(148, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(149, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(150, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(151, df.getFormat(\"[$-404]e/m/d\"));\n}\n}",
                "index": 0,
                "logprobs": null,
                "finish_reason": "length"
            }
        ],
        "usage": {
            "prompt_tokens": 622,
            "completion_tokens": 4000,
            "total_tokens": 4622
        },
        "time_taken": 119.07212781906128,
        "prompt_id": "/EvoSuiteBenchmark/original/5_templateit/src/main/java/org/apache/poi/hssf/usermodel/HSSFDataFormat.java",
        "original_code": "// HSSFDataFormat.java\n/*\n * HSSFDataFormat.java\n *\n * Created on December 18, 2001, 12:42 PM\n */\npackage org.apache.poi.hssf.usermodel;\n\nimport org.apache.poi.hssf.model.Workbook;\nimport org.apache.poi.hssf.record.FormatRecord;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.ListIterator;\nimport java.util.Vector;\n\npublic class HSSFDataFormat {\n\n    private static List builtinFormats = createBuiltinFormats();\n\n    private Vector formats = new Vector();\n\n    private Workbook workbook;\n\n    // Flag to see if need to\n    private boolean movedBuiltins = false;\n\n    /**\n     * Construncts a new data formatter.  It takes a workbook to have\n     * access to the workbooks format records.\n     * @param workbook the workbook the formats are tied to.\n     */\n    public HSSFDataFormat(Workbook workbook) {\n    }\n\n    private static synchronized List createBuiltinFormats();\n\n    public static List getBuiltinFormats();\n\n    public static short getBuiltinFormat(String format);\n\n    /**\n     * Get the format index that matches the given format\n     *  string, creating a new format entry if required.\n     * Aliases text to the proper format as required.\n     * @param format string matching a built in format\n     * @return index of format.\n     */\n    public short getFormat(String format);\n\n    public String getFormat(short index);\n\n    public static String getBuiltinFormat(short index);\n\n    public static int getNumberOfBuiltinBuiltinFormats();\n}\n",
        "test_prompt": "// HSSFDataFormatTest.java\n/*\n * HSSFDataFormat.java\n *\n * Created on December 18, 2001, 12:42 PM\n */\npackage org.apache.poi.hssf.usermodel;\n\nimport org.apache.poi.hssf.model.Workbook;\nimport org.apache.poi.hssf.record.FormatRecord;\nimport java.util.Iterator;\nimport java.util.List;\nimport java.util.ListIterator;\nimport java.util.Vector;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HSSFDataFormat}.\n* It contains ten unit test cases for the {@link HSSFDataFormat#getFormat(String)} method.\n*/\nclass HSSFDataFormatTest {",
        "original_generated_code": "\n\t/**\n\t * Test case for {@link HSSFDataFormat#getFormat(String)}\n\t * \n\t * @author Andrew C. Oliver (acoliver at apache dot org)\n\t */\n\t@Test\n\tpublic void testGetFormat() {\n\t\tHSSFWorkbook wb = new HSSFWorkbook();\n\t\tHSSFDataFormat df = wb.createDataFormat();\n\t\tassertEquals(0, df.getFormat(\"text\"));\n\t\tassertEquals(1, df.getFormat(\"0\"));\n\t\tassertEquals(2, df.getFormat(\"0.00\"));\n\t\tassertEquals(3, df.getFormat(\"#,##0\"));\n\t\tassertEquals(4, df.getFormat(\"#,##0.00\"));\n\t\tassertEquals(5, df.getFormat(\"($#,##0_);($#,##0)\"));\n\t\tassertEquals(6, df.getFormat(\"($#,##0_);[Red]($#,##0)\"));\n\t\tassertEquals(7, df.getFormat(\"($#,##0.00_);($#,##0.00)\"));\n\t\tassertEquals(8, df.getFormat(\"($#,##0.00_);[Red]($#,##0.00)\"));\n\t\tassertEquals(9, df.getFormat(\"0%\"));\n\t\tassertEquals(10, df.getFormat(\"0.00%\"));\n\t\tassertEquals(11, df.getFormat(\"0.00E+00\"));\n\t\tassertEquals(12, df.getFormat(\"# ?/?\"));\n\t\tassertEquals(13, df.getFormat(\"# ??/??\"));\n\t\tassertEquals(14, df.getFormat(\"mm-dd-yy\"));\n\t\tassertEquals(15, df.getFormat(\"d-mmm-yy\"));\n\t\tassertEquals(16, df.getFormat(\"d-mmm\"));\n\t\tassertEquals(17, df.getFormat(\"mmm-yy\"));\n\t\tassertEquals(18, df.getFormat(\"h:mm AM/PM\"));\n\t\tassertEquals(19, df.getFormat(\"h:mm:ss AM/PM\"));\n\t\tassertEquals(20, df.getFormat(\"h:mm\"));\n\t\tassertEquals(21, df.getFormat(\"h:mm:ss\"));\n\t\tassertEquals(22, df.getFormat(\"m/d/yy h:mm\"));\n\t\tassertEquals(37, df.getFormat(\"#,##0 ;(#,##0)\"));\n\t\tassertEquals(38, df.getFormat(\"#,##0 ;[Red](#,##0)\"));\n\t\tassertEquals(39, df.getFormat(\"#,##0.00;(#,##0.00)\"));\n\t\tassertEquals(40, df.getFormat(\"#,##0.00;[Red](#,##0.00)\"));\n\t\tassertEquals(45, df.getFormat(\"mm:ss\"));\n\t\tassertEquals(46, df.getFormat(\"[h]:mm:ss\"));\n\t\tassertEquals(47, df.getFormat(\"mmss.0\"));\n\t\tassertEquals(48, df.getFormat(\"##0.0E+0\"));\n\t\tassertEquals(49, df.getFormat(\"@\"));\n\t\tassertEquals(27, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(30, df.getFormat(\"m/d/yy\"));\n\t\tassertEquals(36, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(50, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(57, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(59, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(32, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(33, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(44, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(31, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(35, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(58, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(56, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(55, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(52, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(53, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(54, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(26, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(29, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(28, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(34, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(51, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(23, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(24, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(25, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(41, df.getFormat(\"_(* #,##0_);_(* (#,##0);_(* \\\"-\\\"_);_(@_)\"));\n\t\tassertEquals(42, df.getFormat(\"_($* #,##0_);_($* (#,##0);_($* \\\"-\\\"_);_(@_)\"));\n\t\tassertEquals(43, df.getFormat(\"_(* #,##0.00_);_(* (#,##0.00);_(* \\\"-\\\"??_);_(@_)\"));\n\t\tassertEquals(61, df.getFormat(\"_(\\\"$\\\"* #,##0.00_);_(\\\"$\\\"* (#,##0.00);_(\\\"$\\\"* \\\"-\\\"??_);_(@_)\"));\n\t\tassertEquals(62, df.getFormat(\"mm:ss.0\"));\n\t\tassertEquals(63, df.getFormat(\"##0.0E+0\"));\n\t\tassertEquals(64, df.getFormat(\"@\"));\n\t\tassertEquals(65, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(66, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(67, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(68, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(69, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(70, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(71, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(72, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(73, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(74, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(75, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(76, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(77, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(78, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(79, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(80, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(81, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(82, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(83, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(84, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(85, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(86, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(87, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(88, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(89, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(90, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(91, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(92, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(93, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(94, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(95, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(96, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(97, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(98, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(99, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(100, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(101, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(102, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(103, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(104, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(105, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(106, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(107, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(108, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(109, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(110, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(111, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(112, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(113, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(114, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(115, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(116, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(117, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(118, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(119, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(120, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(121, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(122, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(123, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(124, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(125, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(126, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(127, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(128, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(129, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(130, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(131, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(132, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(133, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(134, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(135, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(136, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(137, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(138, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(139, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(140, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(141, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(142, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(143, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(144, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(145, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(146, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(147, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(148, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(149, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(150, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(151, df.getFormat(\"[$-404]e/m/d\"));\n\t\tassertEquals(152, df.",
        "applied_heuristics": "H7"
    }
]