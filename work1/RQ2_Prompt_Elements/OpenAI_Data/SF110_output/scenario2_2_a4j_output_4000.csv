ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
cmpl-6x55y4anQzcuu72MyvONXc8IVUyCZ,/EvoSuiteBenchmark/scenario2/2_a4j/src/main/java/net/kencochrane/a4j/A4j0.java,187.78515100479126,,"// A4j.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class A4j {

    /**
     * With a single query, developers can retrieve results across all the different product categories,
     * sorted by relevance.  For a blended search, you pass in search keywords but no mode or page parameter.
     * This will return up to 3 results for each of the product categories currently available.
     * This can currently mean up to 45 results for a single query.
     *
     * @since 1.0
     * @param searchTerm the term you want to search for
     * @param type heavy or lite
     * @return BlendedSearch
     */
    public BlendedSearch BlendedSearch(String searchTerm, String type) {
        Search search = new Search();
        return search.Blended(searchTerm, type);
    }
}
","// A4jTest.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains ten unit test cases for the {@link A4j#BlendedSearch(String, String)} method.
*/
class A4jTest {","// A4jTest.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains ten unit test cases for the {@link A4j#BlendedSearch(String, String)} method.
*/
class A4jTest {

	/**
	* Test case for {@link A4j#BlendedSearch(String, String)} method.
	* It tests the case when the search term is null.
	*/
	@Test
	void testBlendedSearch_NullSearchTerm() {
		A4j a4j = new A4j();
		BlendedSearch blendedSearch = a4j.BlendedSearch(null, ""lite"");
		assertNull(blendedSearch);
	}
	
	/**
	* Test case for {@link A4j#BlendedSearch(String, String)} method.
	* It tests the case when the search term is empty.
	*/
	@Test
	void testBlendedSearch_EmptySearchTerm() {
		A4j a4j = new A4j();
		BlendedSearch blendedSearch = a4j.BlendedSearch("""", ""lite"");
		assertNull(blendedSearch);
	}
	
	/**
	* Test case for {@link A4j#BlendedSearch(String, String)} method.
	* It tests the case when the search term is invalid.
	*/
	@Test
	void testBlendedSearch_InvalidSearchTerm() {
		A4j a4j = new A4j();
		BlendedSearch blendedSearch = a4j.BlendedSearch(""invalid"", ""lite"");
		assertNull(blendedSearch);
	}
	
	/**
	* Test case for {@link A4j#BlendedSearch(String, String)} method.
	* It tests the case when the search term is valid.
	*/
	@Test
	void testBlendedSearch_ValidSearchTerm() {
		A4j a4j = new A4j();
		BlendedSearch blendedSearch = a4j.BlendedSearch(""valid"", ""lite"");
		assertNotNull(blendedSearch);
	}
	
	/**
	* Test case for {@link A4j#BlendedSearch(String, String)} method.
	* It tests the case when the search term is valid and the type is null.
	*/
	@Test
	void testBlendedSearch_ValidSearchTerm_NullType() {
		A4j a4j = new A4j();
		BlendedSearch blendedSearch = a4j.BlendedSearch(""valid"", null);
		assertNull(blendedSearch);
	}
	
	/**
	* Test case for {@link A4j#BlendedSearch(String, String)} method.
	* It tests the case when the search term is valid and the type is empty.
	*/
	@Test
	void testBlendedSearch_ValidSearchTerm_EmptyType() {
		A4j a4j = new A4j();
		BlendedSearch blendedSearch = a4j.BlendedSearch(""valid"", """");
		assertNull(blendedSearch);
	}
	
	/**
	* Test case for {@link A4j#BlendedSearch(String, String)} method.
	* It tests the case when the search term is valid and the type is invalid.
	*/
	@Test
	void testBlendedSearch_ValidSearchTerm_InvalidType() {
		A4j a4j = new A4j();
		BlendedSearch blendedSearch = a4j.BlendedSearch(""valid"", ""invalid"");
		assertNull(blendedSearch);
	}
	
	/**
	* Test case for {@link A4j#BlendedSearch(String, String)} method.
	* It tests the case when the search term is valid and the type is valid.
	*/
	@Test
	void testBlendedSearch_ValidSearchTerm_ValidType() {
		A4j a4j = new A4j();
		BlendedSearch blendedSearch = a4j.BlendedSearch(""valid"", ""lite"");
		assertNotNull(blendedSearch);
	}
	
	/**
	* Test case for {@link A4j#BlendedSearch(String, String)} method.
	* It tests the case when the search term is valid and the type is valid.
	*/
	@Test
	void testBlendedSearch_ValidSearchTerm_ValidType2() {
		A4j a4j = new A4j();
		BlendedSearch blendedSearch = a4j.BlendedSearch(""valid"", ""heavy"");
		assertNotNull(blendedSearch);
	}
	
	/**
	* Test case for {@link A4j#BlendedSearch(String, String)} method.
	* It tests the case when the search term is valid and the type is valid.
	*/
	@Test
	void testBlendedSearch_ValidSearchTerm_ValidType3() {
		A4j a4j = new A4j();
		BlendedSearch blendedSearch = a4j.BlendedSearch(""valid"", ""lite"");
		assertNotNull(blendedSearch);
	}
	
	/**
	* Test case for {@link A4j#BlendedSearch(String, String)} method.
	* It tests the case when the search term is valid and the type is valid.
	*/
	@Test
	void testBlendedSearch_ValidSearchTerm_ValidType4() {
		A4j a4j = new A4j();
		BlendedSearch blendedSearch = a4j.BlendedSearch(""valid"", ""heavy"");
		assertNotNull(blendedSearch);
	}
}

// BlendedSearch.java
package net.kencochrane.a4j.beans;

import java.util.ArrayList;
import java.util.List;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class BlendedSearch {
    private List<Product> products = new ArrayList<Product>();
    private List<Cart> carts = new ArrayList<Cart>();
    private List<Search> searches = new ArrayList<Search>();

    public List<Product> getProducts() {
        return products;
    }

    public void setProducts(List<Product> products) {
        this.products = products;
    }

    public List<Cart> getCarts() {
        return carts;
    }

    public void setCarts(List<Cart> carts) {
        this.carts = carts;
    }

    public List<Search> getSearches() {
        return searches;
    }

    public void setSearches(List<Search> searches) {
        this.searches = searches;
    }
}

// Cart.java
package net.kencochrane.a4j.DAO;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class Cart {
    private String name;
    private String url;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }
}

// Product.java
package net.kencochrane.a4j.DAO;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class Product {
    private String name;
    private String url;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }
}

// Search.java
package net.kencochrane.a4j.DAO;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class Search {
    private String name;
    private String url;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }
}"
cmpl-6x57CJHmWguX6pTsloIRFiITmo42T,/EvoSuiteBenchmark/scenario2/2_a4j/src/main/java/net/kencochrane/a4j/A4j1.java,51.058491706848145,stop,"// A4j.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class A4j {

    /**
     * A keyword is a general search term that is used to find products in the Amazon.com
     * catalog. Often, more than one keyword is used at the same time to form a short phrase
     * (such as finance software).
     *
     * @since 1.0
     * @param searchTerm the term you want to search for
     * @param productLine books, dvd, etc
     * @param type heavy or lite
     * @param page 1 2 3 etc
     * @return ProductInfo
     */
    public ProductInfo KeywordSearch(String searchTerm, String productLine, String type, String page) {
        Search search = new Search();
        return search.Keyword(searchTerm, productLine, type, page);
    }
}
","// A4jTest.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains ten unit test cases for the {@link A4j#KeywordSearch(String, String, String, String)} method.
*/
class A4jTest {","// A4jTest.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains ten unit test cases for the {@link A4j#KeywordSearch(String, String, String, String)} method.
*/
class A4jTest {

	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the search term is null.
	*/
	@Test
	void testKeywordSearch_searchTermIsNull() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(null, ""books"", ""lite"", ""1"");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the search term is empty.
	*/
	@Test
	void testKeywordSearch_searchTermIsEmpty() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch("""", ""books"", ""lite"", ""1"");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the search term is invalid.
	*/
	@Test
	void testKeywordSearch_searchTermIsInvalid() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""invalid"", ""books"", ""lite"", ""1"");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the search term is valid.
	*/
	@Test
	void testKeywordSearch_searchTermIsValid() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""java"", ""books"", ""lite"", ""1"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the product line is null.
	*/
	@Test
	void testKeywordSearch_productLineIsNull() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""java"", null, ""lite"", ""1"");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the product line is empty.
	*/
	@Test
	void testKeywordSearch_productLineIsEmpty() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""java"", """", ""lite"", ""1"");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the product line is invalid.
	*/
	@Test
	void testKeywordSearch_productLineIsInvalid() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""java"", ""invalid"", ""lite"", ""1"");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the product line is valid.
	*/
	@Test
	void testKeywordSearch_productLineIsValid() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""java"", ""books"", ""lite"", ""1"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the type is null.
	*/
	@Test
	void testKeywordSearch_typeIsNull() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""java"", ""books"", null, ""1"");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the type is empty.
	*/
	@Test
	void testKeywordSearch_typeIsEmpty() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""java"", ""books"", """", ""1"");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the type is invalid.
	*/
	@Test
	void testKeywordSearch_typeIsInvalid() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""java"", ""books"", ""invalid"", ""1"");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the type is valid.
	*/
	@Test
	void testKeywordSearch_typeIsValid() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""java"", ""books"", ""lite"", ""1"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the page is null.
	*/
	@Test
	void testKeywordSearch_pageIsNull() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""java"", ""books"", ""lite"", null);
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the page is empty.
	*/
	@Test
	void testKeywordSearch_pageIsEmpty() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""java"", ""books"", ""lite"", """");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the page is invalid.
	*/
	@Test
	void testKeywordSearch_pageIsInvalid() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""java"", ""books"", ""lite"", ""invalid"");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#KeywordSearch(String, String, String, String)} method.
	* It tests the case when the page is valid.
	*/
	@Test
	void testKeywordSearch_pageIsValid() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.KeywordSearch(""java"", ""books"", ""lite"", ""1"");
		assertNotNull(productInfo);
	}
}"
cmpl-6x58FdKkuT6XGI9J4Qz1yQelPbjX3,/EvoSuiteBenchmark/scenario2/2_a4j/src/main/java/net/kencochrane/a4j/A4j2.java,127.92990708351135,length,"// A4j.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class A4j {

    /**
     * Search for an actor
     *
     * @since 1.0
     * @param actorName - actor or actresses name to search for
     * @param mode (dvd, vhs, video)
     * @param page 1 2 3 etc
     * @return ProductInfo
     */
    public ProductInfo ActorSearch(String actorName, String mode, String page) {
        Search search = new Search();
        return search.ActorSearch(actorName, mode, page);
    }
}
","// A4jTest.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains ten unit test cases for the {@link A4j#ActorSearch(String, String, String)} method.
*/
class A4jTest {","// A4jTest.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains ten unit test cases for the {@link A4j#ActorSearch(String, String, String)} method.
*/
class A4jTest {

	/**
	* Test case for the {@link A4j#ActorSearch(String, String, String)} method.
	* It tests the method with the following parameters:
	* <ul>
	* <li>actorName: ""Tom Hanks""</li>
	* <li>mode: ""dvd""</li>
	* <li>page: ""1""</li>
	* </ul>
	* The expected result is that the method returns a {@link ProductInfo} object.
	*/
	@Test
	public void testActorSearch1() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ActorSearch(""Tom Hanks"", ""dvd"", ""1"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ActorSearch(String, String, String)} method.
	* It tests the method with the following parameters:
	* <ul>
	* <li>actorName: ""Tom Hanks""</li>
	* <li>mode: ""dvd""</li>
	* <li>page: ""2""</li>
	* </ul>
	* The expected result is that the method returns a {@link ProductInfo} object.
	*/
	@Test
	public void testActorSearch2() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ActorSearch(""Tom Hanks"", ""dvd"", ""2"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ActorSearch(String, String, String)} method.
	* It tests the method with the following parameters:
	* <ul>
	* <li>actorName: ""Tom Hanks""</li>
	* <li>mode: ""dvd""</li>
	* <li>page: ""3""</li>
	* </ul>
	* The expected result is that the method returns a {@link ProductInfo} object.
	*/
	@Test
	public void testActorSearch3() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ActorSearch(""Tom Hanks"", ""dvd"", ""3"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ActorSearch(String, String, String)} method.
	* It tests the method with the following parameters:
	* <ul>
	* <li>actorName: ""Tom Hanks""</li>
	* <li>mode: ""dvd""</li>
	* <li>page: ""4""</li>
	* </ul>
	* The expected result is that the method returns a {@link ProductInfo} object.
	*/
	@Test
	public void testActorSearch4() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ActorSearch(""Tom Hanks"", ""dvd"", ""4"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ActorSearch(String, String, String)} method.
	* It tests the method with the following parameters:
	* <ul>
	* <li>actorName: ""Tom Hanks""</li>
	* <li>mode: ""dvd""</li>
	* <li>page: ""5""</li>
	* </ul>
	* The expected result is that the method returns a {@link ProductInfo} object.
	*/
	@Test
	public void testActorSearch5() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ActorSearch(""Tom Hanks"", ""dvd"", ""5"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ActorSearch(String, String, String)} method.
	* It tests the method with the following parameters:
	* <ul>
	* <li>actorName: ""Tom Hanks""</li>
	* <li>mode: ""dvd""</li>
	* <li>page: ""6""</li>
	* </ul>
	* The expected result is that the method returns a {@link ProductInfo} object.
	*/
	@Test
	public void testActorSearch6() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ActorSearch(""Tom Hanks"", ""dvd"", ""6"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ActorSearch(String, String, String)} method.
	* It tests the method with the following parameters:
	* <ul>
	* <li>actorName: ""Tom Hanks""</li>
	* <li>mode: ""dvd""</li>
	* <li>page: ""7""</li>
	* </ul>
	* The expected result is that the method returns a {@link ProductInfo} object.
	*/
	@Test
	public void testActorSearch7() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ActorSearch(""Tom Hanks"", ""dvd"", ""7"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ActorSearch(String, String, String)} method.
	* It tests the method with the following parameters:
	* <ul>
	* <li>actorName: ""Tom Hanks""</li>
	* <li>mode: ""dvd""</li>
	* <li>page: ""8""</li>
	* </ul>
	* The expected result is that the method returns a {@link ProductInfo} object.
	*/
	@Test
	public void testActorSearch8() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ActorSearch(""Tom Hanks"", ""dvd"", ""8"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ActorSearch(String, String, String)} method.
	* It tests the method with the following parameters:
	* <ul>
	* <li>actorName: ""Tom Hanks""</li>
	* <li>mode: ""dvd""</li>
	* <li>page: ""9""</li>
	* </ul>
	* The expected result is that the method returns a {@link ProductInfo} object.
	*/
	@Test
	public void testActorSearch9() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ActorSearch(""Tom Hanks"", ""dvd"", ""9"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ActorSearch(String, String, String)} method.
	* It tests the method with the following parameters:
	* <ul>
	* <li>actorName: ""Tom Hanks""</li>
	* <li>mode: ""dvd""</li>
	* <li>page: ""10""</li>
	* </ul>
	* The expected result is that the method returns a {@link ProductInfo} object.
	*/
	@Test
	public void testActorSearch10() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ActorSearch(""Tom Hanks"", ""dvd"", ""10"");
		assertNotNull(productInfo);
	}
}

// Cart.java
package net.kencochrane.a4j.DAO;

import net.kencochrane.a4j.beans.*;

import java.util.ArrayList;
import java.util.List;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class Cart {

    /**
     * Add a product to the cart
     *
     * @since 1.0
     * @param productId - product to add
     * @return CartInfo
     */
    public CartInfo AddProduct(String productId) {
        CartInfo cartInfo = new CartInfo();
        cartInfo.setCartId(""12345"");
        cartInfo.setCartTotal(""$10.00"");
        cartInfo.setCartItems(new ArrayList());
        return cartInfo;
    }

    /**
     * Remove a product from the cart
     *
     * @since 1.0
     * @param productId - product to remove
     * @return CartInfo
     */
    public CartInfo RemoveProduct(String productId) {
        CartInfo cartInfo = new CartInfo();
        cartInfo.setCartId(""12345"");
        cartInfo.setCartTotal(""$10.00"");
        cartInfo.setCartItems(new ArrayList());
        return cartInfo;
    }

    /**
     * Get the cart
     *
     * @since 1.0
     * @return CartInfo
     */
    public CartInfo GetCart() {
        CartInfo cartInfo = new CartInfo();
        cartInfo.setCartId(""12345"");
        cartInfo.setCartTotal(""$10.00"");
        cartInfo.setCartItems(new ArrayList());
        return cartInfo;
    }
}

// CartInfo.java
package net.kencochrane.a4j.beans;

import java.util.List;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class CartInfo {
    private String cartId;
    private String cartTotal;
    private List cartItems;

    public String getCartId() {
        return cartId;
    }

    public void setCartId(String cartId) {
        this.cartId = cartId;
    }

    public String getCartTotal() {
        return cartTotal;
    }

    public void setCartTotal(String cartTotal) {
        this.cartTotal = cartTotal;
    }

    public List getCartItems() {
        return cartItems;
    }

    public void setCartItems(List cartItems) {
        this.cartItems = cartItems;
    }
}

// CartItem.java
package net.kencochrane.a4j.beans;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class CartItem {
    private String productId;
    private String productName;
    private String productPrice;

    public String getProductId() {
        return productId;
    }

    public void setProductId(String productId) {
        this.productId = productId;
    }

    public String getProductName() {
        return productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    public String getProductPrice() {
        return productPrice;
    }

    public void setProductPrice(String productPrice) {
        this.productPrice = productPrice;
    }
}

// Product.java
package net.kencochrane.a4j.DAO;

import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class Product {

    /**
     * Get a product
     *
     * @since 1.0
     * @param productId - product to get
     * @return ProductInfo
     */
    public ProductInfo GetProduct(String productId) {
        ProductInfo productInfo = new ProductInfo();
        productInfo.setProductId(""12345"");
        productInfo.setProductName(""The Matrix"");
        productInfo.setProductPrice(""$10.00"");
        productInfo.setProductDescription(""The Matrix is a 1999 science fiction action film written and directed by The Wachowski Brothers, starring Keanu Reeves, Laurence Fishburne, Carrie-Anne Moss, Hugo Weaving, and Joe Pantoliano. It was first released in the USA on March 31, 1999, and is the first part of The Matrix series of films, comics and video games. The film's premise was both original and influential, and the film was generally well-received by critics. It was successful at the box office, and won and was nominated for several awards. The film's mainstream success had a strong influence on popular culture, and it is often regarded as one of the greatest science fiction films of all time. The film has had a strong influence on action films and science fiction films that were released thereafter. The Matrix franchise was further expanded through the production of comic books, video games and animated short films, with which the Wachowski Brothers were heavily involved. The Matrix itself has been added to the Library of Congress' National Film Registry for being culturally, historically and aesthetically significant. The success of the film led to the release of two feature film sequels, both written and directed by the Wachowski Brothers: The Matrix Reloaded and The Matrix Revolutions. The Matrix franchise was further expanded through the production of comic books, video games and animated short films, with which the Wachowski Brothers were heavily involved. The Matrix itself has been added to the Library of Congress' National Film Registry for being culturally, historically and aesthetically significant. The success of the film led to the release of two feature film sequels, both written and directed by the Wachowski Brothers: The Matrix Reloaded and The Matrix Revolutions."");
        productInfo.setProductActors(new ArrayList());
        return productInfo;
    }
}

// ProductInfo.java
package net.kencochrane.a4j.beans;

import java.util.List;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class ProductInfo {
    private String productId;
    private String productName;
    private String productPrice;
    private String productDescription;
    private List productActors;

    public String getProductId() {
        return productId;
    }

    public void setProductId(String productId) {
        this.productId = productId;
    }

    public String getProductName() {
        return productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    public String getProductPrice() {
        return productPrice;
    }

    public void setProductPrice(String productPrice) {
        this.productPrice = productPrice;
    }

    public String getProductDescription() {
        return productDescription;
    }

    public void setProductDescription(String productDescription) {
        this.productDescription = productDescription;
    }

    public List getProductActors() {
        return productActors;
    }

    public void setProductActors(List productActors) {
        this.productActors = productActors;
    }
}

// ProductActor.java
package net.kencochrane.a4j.beans;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class ProductActor {
    private String actorId;
    private String actorName;

    public String getActorId() {
        return actorId;
    }

    public void setActorId(String actorId) {
        this.actorId = actorId;
    }

    public String getActorName() {
        return actorName;
    }

    public void setActorName(String actorName) {
        this.actorName = actorName;
    }
}

// Search.java
package net.kencochrane.a4j.DAO;

import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class Search {

    /**
     * Search for a product
     *
     * @since 1.0
     *"
cmpl-6x5AJbjBrp5zR5NFgdNpgfDbcvjAQ,/EvoSuiteBenchmark/scenario2/2_a4j/src/main/java/net/kencochrane/a4j/A4j3.java,34.34221792221069,stop,"// A4j.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class A4j {

    /**
     * Search for an artist
     *
     * @since 1.0
     * @param artistName - artist name to search for.
     * @param mode (music, classical)
     * @param page 1 2 3 etc.
     * @return ProductInfo
     */
    public ProductInfo ArtistSearch(String artistName, String mode, String page) {
        Search search = new Search();
        return search.ArtistSearch(artistName, mode, page);
    }
}
","// A4jTest.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains ten unit test cases for the {@link A4j#ArtistSearch(String, String, String)} method.
*/
class A4jTest {","// A4jTest.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains ten unit test cases for the {@link A4j#ArtistSearch(String, String, String)} method.
*/
class A4jTest {

	/**
	* Test case for the {@link A4j#ArtistSearch(String, String, String)} method.
	* It tests the case when the artist name is null.
	*/
	@Test
	void testArtistSearch_1() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ArtistSearch(null, ""music"", ""1"");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ArtistSearch(String, String, String)} method.
	* It tests the case when the artist name is empty.
	*/
	@Test
	void testArtistSearch_2() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ArtistSearch("""", ""music"", ""1"");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ArtistSearch(String, String, String)} method.
	* It tests the case when the artist name is invalid.
	*/
	@Test
	void testArtistSearch_3() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ArtistSearch(""abc"", ""music"", ""1"");
		assertNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ArtistSearch(String, String, String)} method.
	* It tests the case when the artist name is valid.
	*/
	@Test
	void testArtistSearch_4() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ArtistSearch(""Michael Jackson"", ""music"", ""1"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ArtistSearch(String, String, String)} method.
	* It tests the case when the artist name is valid.
	*/
	@Test
	void testArtistSearch_5() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ArtistSearch(""Michael Jackson"", ""music"", ""1"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ArtistSearch(String, String, String)} method.
	* It tests the case when the artist name is valid.
	*/
	@Test
	void testArtistSearch_6() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ArtistSearch(""Michael Jackson"", ""music"", ""1"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ArtistSearch(String, String, String)} method.
	* It tests the case when the artist name is valid.
	*/
	@Test
	void testArtistSearch_7() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ArtistSearch(""Michael Jackson"", ""music"", ""1"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ArtistSearch(String, String, String)} method.
	* It tests the case when the artist name is valid.
	*/
	@Test
	void testArtistSearch_8() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ArtistSearch(""Michael Jackson"", ""music"", ""1"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ArtistSearch(String, String, String)} method.
	* It tests the case when the artist name is valid.
	*/
	@Test
	void testArtistSearch_9() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ArtistSearch(""Michael Jackson"", ""music"", ""1"");
		assertNotNull(productInfo);
	}
	
	/**
	* Test case for the {@link A4j#ArtistSearch(String, String, String)} method.
	* It tests the case when the artist name is valid.
	*/
	@Test
	void testArtistSearch_10() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.ArtistSearch(""Michael Jackson"", ""music"", ""1"");
		assertNotNull(productInfo);
	}
}"
cmpl-6x5BMffMxFAbhi2u9pS8Zu8XBdqJw,/EvoSuiteBenchmark/scenario2/2_a4j/src/main/java/net/kencochrane/a4j/A4j4.java,55.16244840621948,stop,"// A4j.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class A4j {

    /**
     * Search books for an author
     *
     * @since 1.0
     * @param authorName author to search for
     * @param page 1 2 3 etc.
     * @return ProductInfo
     */
    public ProductInfo AuthorSearch(String authorName, String page) {
        Search search = new Search();
        return search.AuthorSearch(authorName, page);
    }
}
","// A4jTest.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains ten unit test cases for the {@link A4j#AuthorSearch(String, String)} method.
*/
class A4jTest {","// A4jTest.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains ten unit test cases for the {@link A4j#AuthorSearch(String, String)} method.
*/
class A4jTest {

	/**
	* Test case for the {@link A4j#AuthorSearch(String, String)} method.
	* It tests the case when the author name is null.
	*/
	@Test
	void testAuthorSearch_1() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.AuthorSearch(null, ""1"");
		assertEquals(0, productInfo.getTotalResults());
	}
	
	/**
	* Test case for the {@link A4j#AuthorSearch(String, String)} method.
	* It tests the case when the author name is empty.
	*/
	@Test
	void testAuthorSearch_2() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.AuthorSearch("""", ""1"");
		assertEquals(0, productInfo.getTotalResults());
	}
	
	/**
	* Test case for the {@link A4j#AuthorSearch(String, String)} method.
	* It tests the case when the author name is not empty and the page number is null.
	*/
	@Test
	void testAuthorSearch_3() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.AuthorSearch(""Ken Cochrane"", null);
		assertEquals(0, productInfo.getTotalResults());
	}
	
	/**
	* Test case for the {@link A4j#AuthorSearch(String, String)} method.
	* It tests the case when the author name is not empty and the page number is empty.
	*/
	@Test
	void testAuthorSearch_4() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.AuthorSearch(""Ken Cochrane"", """");
		assertEquals(0, productInfo.getTotalResults());
	}
	
	/**
	* Test case for the {@link A4j#AuthorSearch(String, String)} method.
	* It tests the case when the author name is not empty and the page number is not empty.
	*/
	@Test
	void testAuthorSearch_5() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.AuthorSearch(""Ken Cochrane"", ""1"");
		assertEquals(0, productInfo.getTotalResults());
	}
	
	/**
	* Test case for the {@link A4j#AuthorSearch(String, String)} method.
	* It tests the case when the author name is not empty and the page number is not empty.
	*/
	@Test
	void testAuthorSearch_6() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.AuthorSearch(""Ken Cochrane"", ""2"");
		assertEquals(0, productInfo.getTotalResults());
	}
	
	/**
	* Test case for the {@link A4j#AuthorSearch(String, String)} method.
	* It tests the case when the author name is not empty and the page number is not empty.
	*/
	@Test
	void testAuthorSearch_7() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.AuthorSearch(""Ken Cochrane"", ""3"");
		assertEquals(0, productInfo.getTotalResults());
	}
	
	/**
	* Test case for the {@link A4j#AuthorSearch(String, String)} method.
	* It tests the case when the author name is not empty and the page number is not empty.
	*/
	@Test
	void testAuthorSearch_8() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.AuthorSearch(""Ken Cochrane"", ""4"");
		assertEquals(0, productInfo.getTotalResults());
	}
	
	/**
	* Test case for the {@link A4j#AuthorSearch(String, String)} method.
	* It tests the case when the author name is not empty and the page number is not empty.
	*/
	@Test
	void testAuthorSearch_9() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.AuthorSearch(""Ken Cochrane"", ""5"");
		assertEquals(0, productInfo.getTotalResults());
	}
	
	/**
	* Test case for the {@link A4j#AuthorSearch(String, String)} method.
	* It tests the case when the author name is not empty and the page number is not empty.
	*/
	@Test
	void testAuthorSearch_10() {
		A4j a4j = new A4j();
		ProductInfo productInfo = a4j.AuthorSearch(""Ken Cochrane"", ""6"");
		assertEquals(0, productInfo.getTotalResults());
	}
}

// Cart.java
package net.kencochrane.a4j.DAO;

import net.kencochrane.a4j.beans.ProductInfo;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class Cart {
    public Cart() {
    }

    public ProductInfo getCart() {
        return null;
    }

    public void addToCart(String productId) {
    }

    public void removeFromCart(String productId) {
    }
}

// Product.java
package net.kencochrane.a4j.DAO;

import net.kencochrane.a4j.beans.ProductInfo;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class Product {
    public Product() {
    }

    public ProductInfo getProduct(String productId) {
        return null;
    }
}

// Search.java
package net.kencochrane.a4j.DAO;

import net.kencochrane.a4j.beans.ProductInfo;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class Search {
    public Search() {
    }

    public ProductInfo AuthorSearch(String authorName, String page) {
        return null;
    }
}

// ProductInfo.java
package net.kencochrane.a4j.beans;

import java.util.List;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class ProductInfo {
    private List products;
    private int totalResults;

    public ProductInfo() {
    }

    public List getProducts() {
        return products;
    }

    public void setProducts(List products) {
        this.products = products;
    }

    public int getTotalResults() {
        return totalResults;
    }

    public void setTotalResults(int totalResults) {
        this.totalResults = totalResults;
    }
}"
cmpl-6x5CPhc6vGmBSTXyr5wKfv0r6A52O,/EvoSuiteBenchmark/scenario2/2_a4j/src/main/java/net/kencochrane/a4j/A4j5.java,34.25345182418823,stop,"// A4j.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class A4j {

    /**
     * Add to product to your Shopping cart
     *
     * @since 1.0
     * @param asin amazon id for the product
     * @param quantity number of items to add
     * @return ShoppingCart
     */
    public ShoppingCart AddtoCart(String asin, String quantity) {
        Cart cart = new Cart();
        return cart.AddtoCart(asin, quantity);
    }
}
","// A4jTest.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains ten unit test cases for the {@link A4j#AddtoCart(String, String)} method.
*/
class A4jTest {","// A4jTest.java
package net.kencochrane.a4j;

import net.kencochrane.a4j.DAO.Cart;
import net.kencochrane.a4j.DAO.Product;
import net.kencochrane.a4j.DAO.Search;
import net.kencochrane.a4j.beans.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link A4j}.
* It contains ten unit test cases for the {@link A4j#AddtoCart(String, String)} method.
*/
class A4jTest {

	@Test
	void testAddtoCart() {
		A4j a4j = new A4j();
		ShoppingCart cart = a4j.AddtoCart(""B00005JKJI"", ""1"");
		assertNotNull(cart);
		assertEquals(1, cart.getCartItems().size());
		assertEquals(""B00005JKJI"", cart.getCartItems().get(0).getAsin());
		assertEquals(""1"", cart.getCartItems().get(0).getQuantity());
	}
}

// Cart.java
package net.kencochrane.a4j.DAO;

import net.kencochrane.a4j.beans.CartItem;
import net.kencochrane.a4j.beans.ShoppingCart;

import java.util.ArrayList;
import java.util.List;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class Cart {
    /**
     * Add to product to your Shopping cart
     *
     * @since 1.0
     * @param asin amazon id for the product
     * @param quantity number of items to add
     * @return ShoppingCart
     */
    public ShoppingCart AddtoCart(String asin, String quantity) {
        ShoppingCart cart = new ShoppingCart();
        List<CartItem> cartItems = new ArrayList<CartItem>();
        CartItem cartItem = new CartItem();
        cartItem.setAsin(asin);
        cartItem.setQuantity(quantity);
        cartItems.add(cartItem);
        cart.setCartItems(cartItems);
        return cart;
    }
}

// Product.java
package net.kencochrane.a4j.DAO;

import net.kencochrane.a4j.beans.ProductInfo;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class Product {
    /**
     * Get product information
     *
     * @since 1.0
     * @param asin amazon id for the product
     * @return ProductInfo
     */
    public ProductInfo GetProductInfo(String asin) {
        ProductInfo productInfo = new ProductInfo();
        productInfo.setAsin(asin);
        return productInfo;
    }
}

// Search.java
package net.kencochrane.a4j.DAO;

import net.kencochrane.a4j.beans.SearchResults;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class Search {
    /**
     * Search for products
     *
     * @since 1.0
     * @param keywords keywords to search for
     * @return SearchResults
     */
    public SearchResults Search(String keywords) {
        SearchResults searchResults = new SearchResults();
        searchResults.setKeywords(keywords);
        return searchResults;
    }
}

// CartItem.java
package net.kencochrane.a4j.beans;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class CartItem {
    private String asin;
    private String quantity;

    public String getAsin() {
        return asin;
    }

    public void setAsin(String asin) {
        this.asin = asin;
    }

    public String getQuantity() {
        return quantity;
    }

    public void setQuantity(String quantity) {
        this.quantity = quantity;
    }
}

// ProductInfo.java
package net.kencochrane.a4j.beans;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class ProductInfo {
    private String asin;

    public String getAsin() {
        return asin;
    }

    public void setAsin(String asin) {
        this.asin = asin;
    }
}

// SearchResults.java
package net.kencochrane.a4j.beans;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class SearchResults {
    private String keywords;

    public String getKeywords() {
        return keywords;
    }

    public void setKeywords(String keywords) {
        this.keywords = keywords;
    }
}

// ShoppingCart.java
package net.kencochrane.a4j.beans;

import java.util.List;

/**
 * http://www.KenCochrane.net
 * User: Ken Cochrane
 * Date: Aug 1, 2003
 * Time: 7:39:44 PM
 */
public class ShoppingCart {
    private List<CartItem> cartItems;

    public List<CartItem> getCartItems() {
        return cartItems;
    }

    public void setCartItems(List<CartItem> cartItems) {
        this.cartItems = cartItems;
    }
}"
