[
{
    "id": "cmpl-6wnBZxuLZG1ob8I7gAlCoQaBQVLND",
    "object": "text_completion",
    "created": 1679470113,
    "model": "code-davinci-002",
    "choices": [
        {
            "text": "\n\t/**\n\t * Test case 1:\n\t * \n\t * Test the {@link TXTCharacter#load()} method with a valid character file.\n\t * \n\t * @throws IOException\n\t */\n\t@Test\n\tvoid testLoadValidCharacter() throws IOException {\n\t\t\n\t\t// Create a new instance of TXTCharacter\n\t\tTXTCharacter txtCharacter = new TXTCharacter();\n\t\t\n\t\t// Create a new instance of IndexedFastMap\n\t\tIndexedFastMap<Integer, ROCharacter> indexedChar = new IndexedFastMap<Integer, ROCharacter>();\n\t\t\n\t\t// Create a new instance of ROCharacter\n\t\tROCharacter character = new ROCharacter();\n\t\t\n\t\t// Create a new instance of File\n\t\tFile file = new File(\"test/org/character/data/test_character.txt\");\n\t\t\n\t\t// Create a new instance of BufferedReader\n\t\tBufferedReader br = new BufferedReader(new FileReader(file));\n\t\t\n\t\t// Create a new instance of String\n\t\tString line = br.readLine();\n\t\t\n\t\t// Create a new instance of String[]\n\t\tString[] split = line.split(\"\\t\");\n\t\t\n\t\t// Set the character's account id\n\t\tcharacter.account_id = Integer.parseInt(split[0]);\n\t\t\n\t\t// Set the character's char id\n\t\tcharacter.char_id = Integer.parseInt(split[1]);\n\t\t\n\t\t// Set the character's name\n\t\tcharacter.name = split[2];\n\t\t\n\t\t// Set the character's class\n\t\tcharacter.clazz = JOB.valueOf(split[3]);\n\t\t\n\t\t// Set the character's base level\n\t\tcharacter.base_level = Integer.parseInt(split[4]);\n\t\t\n\t\t// Set the character's job level\n\t\tcharacter.job_level = Integer.parseInt(split[5]);\n\t\t\n\t\t// Set the character's base experience\n\t\tcharacter.base_exp = Integer.parseInt(split[6]);\n\t\t\n\t\t// Set the character's job experience\n\t\tcharacter.job_exp = Integer.parseInt(split[7]);\n\t\t\n\t\t// Set the character's zeny\n\t\tcharacter.zeny = Integer.parseInt(split[8]);\n\t\t\n\t\t// Set the character's str\n\t\tcharacter.str = Integer.parseInt(split[9]);\n\t\t\n\t\t// Set the character's agi\n\t\tcharacter.agi = Integer.parseInt(split[10]);\n\t\t\n\t\t// Set the character's vit\n\t\tcharacter.vit = Integer.parseInt(split[11]);\n\t\t\n\t\t// Set the character's int\n\t\tcharacter.int_ = Integer.parseInt(split[12]);\n\t\t\n\t\t// Set the character's dex\n\t\tcharacter.dex = Integer.parseInt(split[13]);\n\t\t\n\t\t// Set the character's luk\n\t\tcharacter.luk = Integer.parseInt(split[14]);\n\t\t\n\t\t// Set the character's max hp\n\t\tcharacter.max_hp = Integer.parseInt(split[15]);\n\t\t\n\t\t// Set the character's hp\n\t\tcharacter.hp = Integer.parseInt(split[16]);\n\t\t\n\t\t// Set the character's max sp\n\t\tcharacter.max_sp = Integer.parseInt(split[17]);\n\t\t\n\t\t// Set the character's sp\n\t\tcharacter.sp = Integer.parseInt(split[18]);\n\t\t\n\t\t// Set the character's status point\n\t\tcharacter.status_point = Integer.parseInt(split[19]);\n\t\t\n\t\t// Set the character's skill point\n\t\tcharacter.skill_point = Integer.parseInt(split[20]);\n\t\t\n\t\t// Set the character's option\n\t\tcharacter.option = Integer.parseInt(split[21]);\n\t\t\n\t\t// Set the character's karma\n\t\tcharacter.karma = Integer.parseInt(split[22]);\n\t\t\n\t\t// Set the character's manner\n\t\tcharacter.manner = Integer.parseInt(split[23]);\n\t\t\n\t\t// Set the character's hair\n\t\tcharacter.hair = Integer.parseInt(split[24]);\n\t\t\n\t\t// Set the character's hair color\n\t\tcharacter.hair_color = Integer.parseInt(split[25]);\n\t\t\n\t\t// Set the character's clothes color\n\t\tcharacter.clothes_color = Integer.parseInt(split[26]);\n\t\t\n\t\t// Set the character's weapon\n\t\tcharacter.weapon = Integer.parseInt(split[27]);\n\t\t\n\t\t// Set the character's shield\n\t\tcharacter.shield = Integer.parseInt(split[28]);\n\t\t\n\t\t// Set the character's head bottom\n\t\tcharacter.head_bottom = Integer.parseInt(split[29]);\n\t\t\n\t\t// Set the character's head top\n\t\tcharacter.head_top = Integer.parseInt(split[30]);\n\t\t\n\t\t// Set the character's head mid\n\t\tcharacter.head_mid = Integer.parseInt(split[31]);\n\t\t\n\t\t// Set the character's hair style\n\t\tcharacter.hair_style = Integer.parseInt(split[32]);\n\t\t\n\t\t// Set the character's guild id\n\t\tcharacter.guild_id = Integer.parseInt(split[33]);\n\t\t\n\t\t// Set the character's guild emblem id\n\t\tcharacter.guild_emblem_id = Integer.parseInt(split[34]);\n\t\t\n\t\t// Set the character's fame\n\t\tcharacter.fame = Integer.parseInt(split[35]);\n\t\t\n\t\t// Set the character's save point\n\t\tcharacter.save_point = new Point(Integer.parseInt(split[36]), Integer.parseInt(split[37]));\n\t\t\n\t\t// Set the character's save map\n\t\tcharacter.save_map = Integer.parseInt(split[38]);\n\t\t\n\t\t// Set the character's base job\n\t\tcharacter.base_job = JOB.valueOf(split[39]);\n\t\t\n\t\t// Set the character's kill count\n\t\tcharacter.kill_count = Integer.parseInt(split[40]);\n\t\t\n\t\t// Set the character's death count\n\t\tcharacter.death_count = Integer.parseInt(split[41]);\n\t\t\n\t\t// Set the character's title id\n\t\tcharacter.title_id = Integer.parseInt(split[42]);\n\t\t\n\t\t// Set the character's last map\n\t\tcharacter.last_map = Integer.parseInt(split[43]);\n\t\t\n\t\t// Set the character's last point\n\t\tcharacter.last_point = new Point(Integer.parseInt(split[44]), Integer.parseInt(split[45]));\n\t\t\n\t\t// Set the character's partner id\n\t\tcharacter.partner_id = Integer.parseInt(split[46]);\n\t\t\n\t\t// Set the character's online\n\t\tcharacter.online = Integer.parseInt(split[47]);\n\t\t\n\t\t// Set the character's father\n\t\tcharacter.father = Integer.parseInt(split[48]);\n\t\t\n\t\t// Set the character's mother\n\t\tcharacter.mother = Integer.parseInt(split[49]);\n\t\t\n\t\t// Set the character's child\n\t\tcharacter.child = Integer.parseInt(split[50]);\n\t\t\n\t\t// Set the character's homunculus id\n\t\tcharacter.homunculus_id = Integer.parseInt(split[51]);\n\t\t\n\t\t// Set the character's elemental id\n\t\tcharacter.elemental_id = Integer.parseInt(split[52]);\n\t\t\n\t\t// Set the character's hotkey bar\n\t\tcharacter.hotkey = new Hotkey[CharConfig.HOTKEY_MAX];\n\t\t\n\t\t// Create a new instance of String[]\n\t\tString[] hotkey = split[53].split(\" \");\n\t\t\n\t\t// For each hotkey\n\t\tfor (int i = 0; i < hotkey.length; i++) {\n\t\t\t\n\t\t\t// Create a new instance of String[]\n\t\t\tString[] hotkey_split = hotkey[i].split(\":\");\n\t\t\t\n\t\t\t// Create a new instance of Hotkey\n",
            "index": 0,
            "logprobs": null,
            "finish_reason": "length"
        }
    ],
    "usage": {
        "prompt_tokens": 665,
        "completion_tokens": 2000,
        "total_tokens": 2665
    },
    "time_taken": 130.94823217391968,
    "prompt_id": "/EvoSuiteBenchmark/scenario3/81_javathena/src/main/java/org/character/data/TXTCharacter.java",
    "original_code": "// TXTCharacter.java\npackage org.character.data;\n\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport org.character.data.config.CharConfig;\nimport org.javathena.core.data.Friend;\nimport org.javathena.core.data.Hotkey;\nimport org.javathena.core.data.IndexedFastMap;\nimport org.javathena.core.data.Item;\nimport org.javathena.core.data.PersistenteData;\nimport org.javathena.core.data.Point;\nimport org.javathena.core.data.ROCharacter;\nimport org.javathena.core.data.Skill;\nimport org.javathena.core.data.ROCharacter.JOB;\nimport org.javathena.core.utiles.Functions;\n\npublic class TXTCharacter implements PersistenteData<IndexedFastMap<Integer, ROCharacter>> {\n\n    /**\n     * Load character under the last format version only version 1500 (homun +\n     * mapindex maps)\n     *\n     * @return indexedChar a fastmap containing loaded characters\n     * @throws MalformedDataException\n     */\n    @Override\n    public IndexedFastMap<Integer, ROCharacter> load() throws IOException;\n}\n",
    "test_prompt": "// TXTCharacterTest.java\npackage org.character.data;\n\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport org.character.data.config.CharConfig;\nimport org.javathena.core.data.Friend;\nimport org.javathena.core.data.Hotkey;\nimport org.javathena.core.data.IndexedFastMap;\nimport org.javathena.core.data.Item;\nimport org.javathena.core.data.PersistenteData;\nimport org.javathena.core.data.Point;\nimport org.javathena.core.data.ROCharacter;\nimport org.javathena.core.data.Skill;\nimport org.javathena.core.data.ROCharacter.JOB;\nimport org.javathena.core.utiles.Functions;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link TXTCharacter}.\n* It contains ten unit test cases for the {@link TXTCharacter#load()} method.\n*/\nclass TXTCharacterTest {"
}
]