ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
cmpl-6wxIEon5PjO7whZbIbx1hZzuYf87N,/EvoSuiteBenchmark/scenario2/56_jhandballmoves/src/main/java/visu/handball/moves/Main0.java,170.59014749526978,length,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    /**
     * Liefert die Instanz des ColorModels
     *
     * @return colorModel
     */
    public static ColorModel getColorModel() {
        return colorModel;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getColorModel()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getColorModel()} method.
*/
class MainTest {

	/**
	* Test case for {@link Main#getColorModel()} method.
	*/
	@Test
	void testGetColorModel() {
		// TODO: implement test
		fail(""Not yet implemented"");
	}
}

// MouseController.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.model.PlayerEvent;
import visu.handball.moves.model.PlayerEvent.EventType;
import visu.handball.moves.model.PlayerEvent.PassType;
import visu.handball.moves.model.PlayerEvent.ShotType;
import visu.handball.moves.model.PlayerEvent.TackleType;
import visu.handball.moves.model.PlayerEvent.ThrowType;
import visu.handball.moves.model.PlayerEvent.TurnType;
import visu.handball.moves.model.PlayerEvent.WalkType;
import visu.handball.moves.views.Field;

/**
 * Controller f√ºr die Maus-Eingaben
 *
 * @author tommy
 */
public class MouseController implements MouseListener, MouseMotionListener {

    private Field field;
    private HandballModel model;
    private PlayerEvent event;
    private PlayerEvent.EventType eventType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.WalkType walkType;
    private PlayerEvent.PassType passType;
    private PlayerEvent.ShotType shotType;
    private PlayerEvent.TackleType tackleType;
    private PlayerEvent.ThrowType throwType;
    private PlayerEvent.TurnType turnType;
    private PlayerEvent.Walk"
cmpl-6wxKzRgIBJHq0FsgWWtTjwnWXFWib,/EvoSuiteBenchmark/scenario2/56_jhandballmoves/src/main/java/visu/handball/moves/Main1.java,2.0363075733184814,stop,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    /**
     * Die Instanz des Anwendungsfensters
     *
     * @return window
     */
    public static JFrame getWindow() {
        return window;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getWindow()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getWindow()} method.
*/
class MainTest {

	/**
	* Test case for the {@link Main#getWindow()} method.
	*
	* @throws Exception
	*/
	@Test
	void testGetWindow() throws Exception {
		JFrame window = Main.getWindow();
		assertNotNull(window);
	}
}"
cmpl-6wxM2OmWrVhIcAnu9H2Ytjx2T71t2,/EvoSuiteBenchmark/scenario2/56_jhandballmoves/src/main/java/visu/handball/moves/Main2.java,112.10831069946289,length,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    /**
     * Instanz des Spielfeld-Panels
     *
     * @return panel
     */
    public static Field getField() {
        return field;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getField()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getField()} method.
*/
class MainTest {

	/**
	* Test case for the {@link Main#getField()} method.
	*
	* @see Main#getField()
	*/
	@Test
	void testGetField() {
		// TODO: implement this test case
		fail(""Not yet implemented"");
	}
}

// MouseController.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.ArrayList;
import java.util.List;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.model.PlayerEvent;
import visu.handball.moves.model.PlayerEvent.EventType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.Player"
02ef74cc-d692-466a-bb60-2655813939ed,/EvoSuiteBenchmark/scenario2/56_jhandballmoves/src/main/java/visu/handball/moves/Main3.java,-1,"ERROR - Request timed out: HTTPSConnectionPool(host='api.openai.com', port=443): Read timed out. (read timeout=600)","// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    /**
     * Instanz der Speichern-Aktion
     *
     * @return saveAction
     */
    public static SaveAction getSaveAction() {
        return saveAction;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getSaveAction()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getSaveAction()} method.
*/
class MainTest {
"
cmpl-6wxYUtAPzvevT90AP07XK5yIG6UgV,/EvoSuiteBenchmark/scenario2/56_jhandballmoves/src/main/java/visu/handball/moves/Main4.java,124.15297603607178,length,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    /**
     * Instanz der SchlieÔøΩen-Aktion
     *
     * @return close Action
     */
    public static CloseAction getCloseAction() {
        return closeAction;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getCloseAction()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getCloseAction()} method.
*/
class MainTest {

	/**
	* Test case for {@link Main#getCloseAction()} method.
	*/
	@Test
	void testGetCloseAction() {
		// TODO: implement test
	}
}

// MouseController.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.views.Field;

/**
 * Controller fÔøΩr die Maus-Eingaben
 *
 * @author tommy
 */
public class MouseController implements MouseListener, MouseMotionListener {

    private Field field;
    private HandballModel model;

    /**
     * Konstruktor
     *
     * @param field
     * @param model
     */
    public MouseController(Field field, HandballModel model) {
        this.field = field;
        this.model = model;
    }

    /**
     * Wird aufgerufen, wenn die Maus gedrÔøΩckt wird
     *
     * @param e
     */
    public void mousePressed(MouseEvent e) {
        if (e.getButton() == MouseEvent.BUTTON1) {
            Player player = model.getPlayer(e.getX(), e.getY());
            if (player != null) {
                model.setSelectedPlayer(player);
                field.repaint();
            }
        }
    }

    /**
     * Wird aufgerufen, wenn die Maus losgelassen wird
     *
     * @param e
     */
    public void mouseReleased(MouseEvent e) {
        if (e.getButton() == MouseEvent.BUTTON1) {
            model.setSelectedPlayer(null);
            field.repaint();
        }
    }

    /**
     * Wird aufgerufen, wenn die Maus bewegt wird
     *
     * @param e
     */
    public void mouseMoved(MouseEvent e) {
        Player player = model.getPlayer(e.getX(), e.getY());
        if (player != null) {
            field.setToolTipText(player.getName());
        } else {
            field.setToolTipText(null);
        }
    }

    /**
     * Wird aufgerufen, wenn die Maus gezogen wird
     *
     * @param e
     */
    public void mouseDragged(MouseEvent e) {
        if (model.getSelectedPlayer() != null) {
            model.getSelectedPlayer().setPosition(e.getX(), e.getY());
            field.repaint();
        }
    }

    /**
     * Wird aufgerufen, wenn die Maus geklickt wird
     *
     * @param e
     */
    public void mouseClicked(MouseEvent e) {
    }

    /**
     * Wird aufgerufen, wenn die Maus das Feld betritt
     *
     * @param e
     */
    public void mouseEntered(MouseEvent e) {
    }

    /**
     * Wird aufgerufen, wenn die Maus das Feld verlÔøΩsst
     *
     * @param e
     */
    public void mouseExited(MouseEvent e) {
    }
}

// MouseControllerTest.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.views.Field;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link MouseController}.
* It contains ten unit test cases for the {@link MouseController#mousePressed(MouseEvent)} method.
*/
class MouseControllerTest {
		
	/**
	* Test case for {@link MouseController#mousePressed(MouseEvent)} method.
	*/
	@Test
	void testMousePressed() {
		// TODO: implement test
	}
}

// NewAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.Main;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.resources.Resources;

/**
 * Aktion zum Erstellen eines neuen Spielzugs
 *
 * @author tommy
 */
public class NewAction extends AbstractAction {

    /**
     * Konstruktor
     */
    public NewAction() {
        super(""Neu"", new ImageIcon(Resources.getImage(""new.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_N, KeyEvent.CTRL_MASK));
        putValue(Action.SHORT_DESCRIPTION, ""Neuen Spielzug erstellen"");
    }

    /**
     * Wird aufgerufen, wenn die Aktion ausgefÔøΩhrt wird
     *
     * @param e
     */
    public void actionPerformed(ActionEvent e) {
        HandballModel model = new HandballModel();
        Main.getMainFrame().setModel(model);
        Main.getMainFrame().setTitle(""Handball-Moves"");
    }
}

// NewActionTest.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.Main;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.resources.Resources;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link NewAction}.
* It contains ten unit test cases for the {@link NewAction#actionPerformed(ActionEvent)} method.
*/
class NewActionTest {
		
	/**
	* Test case for {@link NewAction#actionPerformed(ActionEvent)} method.
	*/
	@Test
	void testActionPerformed() {
		// TODO: implement test
	}
}

// NewMoveEventAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.MoveEvent;
import visu.handball.moves.resources.Resources;

/**
 * Aktion zum Erstellen eines neuen Spielzugs
 *
 * @author tommy
 */
public class NewMoveEventAction extends AbstractAction {

    /**
     * Konstruktor
     */
    public NewMoveEventAction() {
        super(""Neuer Spielzug"", new ImageIcon(Resources.getImage(""new_move.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_M, KeyEvent.CTRL_MASK));
        putValue(Action.SHORT_DESCRIPTION, ""Neuen Spielzug erstellen"");
    }

    /**
     * Wird aufgerufen, wenn die Aktion ausgefÔøΩhrt wird
     *
     * @param e
     */
    public void actionPerformed(ActionEvent e) {
        HandballModel model = Main.getMainFrame().getModel();
        model.addMoveEvent(new MoveEvent());
    }
}

// NewMoveEventActionTest.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.MoveEvent;
import visu.handball.moves.resources.Resources;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link NewMoveEventAction}.
* It contains ten unit test cases for the {@link NewMoveEventAction#actionPerformed(ActionEvent)} method.
*/
class NewMoveEventActionTest {
		
	/**
	* Test case for {@link NewMoveEventAction#actionPerformed(ActionEvent)} method.
	*/
	@Test
	void testActionPerformed() {
		// TODO: implement test
	}
}

// NewPassEventAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.MoveEvent;
import visu.handball.moves.model.PassEvent;
import visu.handball.moves.resources.Resources;

/**
 * Aktion zum Erstellen eines neuen Spielzugs
 *
 * @author tommy
 */
public class NewPassEventAction extends AbstractAction {

    /**
     * Konstruktor
     */
    public NewPassEventAction() {
        super(""Neuer Pass"", new ImageIcon(Resources.getImage(""new_pass.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_P, KeyEvent.CTRL_MASK));
        putValue(Action.SHORT_DESCRIPTION, ""Neuen Pass erstellen"");
    }

    /**
     * Wird aufgerufen, wenn die Aktion ausgefÔøΩhrt wird
     *
     * @param e
     */
    public void actionPerformed(ActionEvent e) {
        HandballModel model = Main.getMainFrame().getModel();
        MoveEvent moveEvent = model.getSelectedMoveEvent();
        if (moveEvent != null) {
            moveEvent.addPassEvent(new PassEvent());
        }
    }
}

// NewPassEventActionTest.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.MoveEvent;
import visu.handball.moves.model.PassEvent;
import visu.handball.moves.resources.Resources;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link NewPassEventAction}.
* It contains ten unit test cases for the {@link NewPassEventAction#actionPerformed(ActionEvent)} method.
*/
class NewPassEventActionTest {
		
	/**
	* Test case for {@link NewPassEventAction#actionPerformed(ActionEvent)} method.
	*/
	@Test
	void testActionPerformed() {
		// TODO: implement test
	}
}

// NewSequenceAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.MoveEvent;
import visu.handball.moves.model.Sequence;
import visu.handball.moves.resources.Resources;

/**
 * Aktion zum Erstellen eines neuen Spielzugs
 *
 * @author tommy
 */
public class NewSequenceAction extends AbstractAction {

    /**
     * Konstruktor
     */
    public NewSequenceAction() {
        super(""Neue Sequenz"", new ImageIcon(Resources.getImage(""new_sequence.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_S, KeyEvent.CTRL_MASK));
        putValue(Action.SHORT_DESCRIPTION, ""Neue Sequenz erstellen"");
    }

    /**
     * Wird aufgerufen, wenn die Aktion ausgefÔøΩhrt wird
     *
     * @param e
     */
    public void actionPerformed(ActionEvent e) {
        HandballModel model = Main.getMainFrame().getModel();
        MoveEvent moveEvent = model.getSelectedMoveEvent();
        if (moveEvent != null) {
            moveEvent.addSequence(new Sequence());
        }
    }
}

// NewSequenceActionTest.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.MoveEvent;
import visu.handball.moves.model.Sequence;
import visu.handball.moves.resources.Resources;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link NewSequenceAction}.
* It contains ten unit test cases for the {@link NewSequenceAction#actionPerformed(ActionEvent)} method.
*/
class NewSequenceActionTest {
		
	/**
	* Test case for {@link NewSequenceAction#actionPerformed(ActionEvent)} method.
	*/
	@Test
	void testActionPerformed() {
		// TODO: implement test
	}
}

// OpenAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax"
cmpl-6wxaUx0tsw44YhHLUwHEOwEhoSfbj,/EvoSuiteBenchmark/scenario2/56_jhandballmoves/src/main/java/visu/handball/moves/Main5.java,46.23576021194458,,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    /**
     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!
     *
     * @param oldObj (muss Serializable implementieren)
     * @return tiefe Kopie
     * @throws Exception
     */
    public static Object deepCopy(Object oldObj) throws Exception {
        Object clone = null;
        try {
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(baos);
            oos.writeObject(oldObj);
            oos.flush();
            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));
            clone = ois.readObject();
            oos.close();
            ois.close();
        } catch (Exception e) {
            //$NON-NLS-1$
            System.out.println(""Exception in ObjectCloner = "" + e);
            throw (e);
        }
        return clone;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#deepCopy(Object)} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#deepCopy(Object)} method.
*/
class MainTest {

	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns a deep copy of the given object.
	*/
	@Test
	void testDeepCopy() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertNotSame(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns a deep copy of the given object.
	*/
	@Test
	void testDeepCopy2() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertNotSame(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns a deep copy of the given object.
	*/
	@Test
	void testDeepCopy3() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertNotSame(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns a deep copy of the given object.
	*/
	@Test
	void testDeepCopy4() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertNotSame(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns a deep copy of the given object.
	*/
	@Test
	void testDeepCopy5() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertNotSame(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns a deep copy of the given object.
	*/
	@Test
	void testDeepCopy6() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertNotSame(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns a deep copy of the given object.
	*/
	@Test
	void testDeepCopy7() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertNotSame(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns a deep copy of the given object.
	*/
	@Test
	void testDeepCopy8() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertNotSame(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns a deep copy of the given object.
	*/
	@Test
	void testDeepCopy9() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertNotSame(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns a deep copy of the given object.
	*/
	@Test
	void testDeepCopy10() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertNotSame(oldObj, clone);
	}
}"
cmpl-6wxbXlOQKrm4fqHQ1E5nSZKVBE3EG,/EvoSuiteBenchmark/scenario2/56_jhandballmoves/src/main/java/visu/handball/moves/Main6.java,1.8895220756530762,stop,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    /**
     * Liefert die Version der Anwendung als String
     *
     * @return version
     */
    public static String getVersion() {
        //$NON-NLS-1$
        return ""1.0.5"";
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getVersion()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getVersion()} method.
*/
class MainTest {

	/**
	* Test case for {@link Main#getVersion()}.
	*/
	@Test
	void testGetVersion() {
		assertEquals(""1.0.5"", Main.getVersion());
	}
}"
cmpl-6wxcaL07rulIBpB1RuTpc0Fj7PfSA,/EvoSuiteBenchmark/scenario2/56_jhandballmoves/src/main/java/visu/handball/moves/controller/JMenuHelper.java,73.60577535629272,stop,"// JMenuHelper.java
package visu.handball.moves.controller;

import java.awt.event.*;
import javax.swing.*;

public class JMenuHelper {

    /**
     * Add an element to the menubar.
     *
     * @param menuBar a JMenuBar
     * @param s a String
     * @return added JMenu
     */
    public static JMenu addMenuBarItem(JMenuBar menuBar, String s) {
        JMenu menu;
        /**
         * Suche nach '_' und nimm das n√§chste Zeichen als Mnemonic,
         * sonst: normales Menu
         */
        if (s.indexOf(""_"") > -1) {
            int pos = s.indexOf(""_"");
            char c = s.charAt(pos + 1);
            StringBuffer sb = new StringBuffer(s).delete(pos, pos + 1);
            menu = new JMenu(sb.toString());
            menu.setMnemonic(c);
        } else
            menu = new JMenu(s);
        menuBar.add(menu);
        return menu;
    }
}
","// JMenuHelperTest.java
package visu.handball.moves.controller;

import java.awt.event.*;
import javax.swing.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link JMenuHelper}.
* It contains ten unit test cases for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
*/
class JMenuHelperTest {","// JMenuHelperTest.java
package visu.handball.moves.controller;

import java.awt.event.*;
import javax.swing.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link JMenuHelper}.
* It contains ten unit test cases for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
*/
class JMenuHelperTest {

	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a normal menu.
	 */
	@Test
	void testAddMenuBarItemNormal() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""Test"");
		assertEquals(""Test"", menu.getText());
		assertEquals(0, menu.getMnemonic());
	}
	
	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a menu with a mnemonic.
	 */
	@Test
	void testAddMenuBarItemMnemonic() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""Te_st"");
		assertEquals(""Test"", menu.getText());
		assertEquals('s', menu.getMnemonic());
	}
	
	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a menu with a mnemonic at the end.
	 */
	@Test
	void testAddMenuBarItemMnemonicAtEnd() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""Test_"");
		assertEquals(""Test"", menu.getText());
		assertEquals('t', menu.getMnemonic());
	}
	
	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a menu with a mnemonic at the beginning.
	 */
	@Test
	void testAddMenuBarItemMnemonicAtBeginning() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""_Test"");
		assertEquals(""Test"", menu.getText());
		assertEquals('t', menu.getMnemonic());
	}
	
	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a menu with a mnemonic at the beginning and at the end.
	 */
	@Test
	void testAddMenuBarItemMnemonicAtBeginningAndEnd() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""_Test_"");
		assertEquals(""Test"", menu.getText());
		assertEquals('t', menu.getMnemonic());
	}
	
	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a menu with a mnemonic at the beginning and at the end.
	 */
	@Test
	void testAddMenuBarItemMnemonicAtBeginningAndEnd2() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""_Test_2"");
		assertEquals(""Test 2"", menu.getText());
		assertEquals('t', menu.getMnemonic());
	}
	
	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a menu with a mnemonic at the beginning and at the end.
	 */
	@Test
	void testAddMenuBarItemMnemonicAtBeginningAndEnd3() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""_Test_2_"");
		assertEquals(""Test 2"", menu.getText());
		assertEquals('t', menu.getMnemonic());
	}
	
	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a menu with a mnemonic at the beginning and at the end.
	 */
	@Test
	void testAddMenuBarItemMnemonicAtBeginningAndEnd4() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""_Test_2_3"");
		assertEquals(""Test 2 3"", menu.getText());
		assertEquals('t', menu.getMnemonic());
	}
	
	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a menu with a mnemonic at the beginning and at the end.
	 */
	@Test
	void testAddMenuBarItemMnemonicAtBeginningAndEnd5() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""_Test_2_3_"");
		assertEquals(""Test 2 3"", menu.getText());
		assertEquals('t', menu.getMnemonic());
	}
	
	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a menu with a mnemonic at the beginning and at the end.
	 */
	@Test
	void testAddMenuBarItemMnemonicAtBeginningAndEnd6() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""_Test_2_3_4"");
		assertEquals(""Test 2 3 4"", menu.getText());
		assertEquals('t', menu.getMnemonic());
	}
	
	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a menu with a mnemonic at the beginning and at the end.
	 */
	@Test
	void testAddMenuBarItemMnemonicAtBeginningAndEnd7() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""_Test_2_3_4_"");
		assertEquals(""Test 2 3 4"", menu.getText());
		assertEquals('t', menu.getMnemonic());
	}
	
	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a menu with a mnemonic at the beginning and at the end.
	 */
	@Test
	void testAddMenuBarItemMnemonicAtBeginningAndEnd8() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""_Test_2_3_4_5"");
		assertEquals(""Test 2 3 4 5"", menu.getText());
		assertEquals('t', menu.getMnemonic());
	}
	
	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a menu with a mnemonic at the beginning and at the end.
	 */
	@Test
	void testAddMenuBarItemMnemonicAtBeginningAndEnd9() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""_Test_2_3_4_5_"");
		assertEquals(""Test 2 3 4 5"", menu.getText());
		assertEquals('t', menu.getMnemonic());
	}
	
	/**
	 * Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}
	 * with a menu with a mnemonic at the beginning and at the end.
	 */
	@Test
	void testAddMenuBarItemMnemonicAtBeginningAndEnd10() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""_Test_2_3_4_5_6"");
		assertEquals(""Test 2 3 4 5 6"", menu.getText());
		assertEquals('t', menu.getMnemonic());
	}
}"
