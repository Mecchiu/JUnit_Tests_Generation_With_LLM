ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
cmpl-6xHQunENCrn95ozv1EBRC52JoMfKj,/EvoSuiteBenchmark/original/7_sfmis/src/main/java/com/hf/sfm/util/Loader.java,62.00983285903931,stop,"// Loader.java
package com.hf.sfm.util;

import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;

public class Loader {

    private String sql;

    private String filepath;

    private int start;

    private int limit;

    private int totalCount;

    private String[] colNames;

    private String[][] pas;

    private String sort;

    private String dir;

    private final String XMLPATH = ""sqlfolder/"";

    private Session session = null;

    private Query query;

    private List rs;

    private boolean paging;

    private ListRange range;

    private String querySql;

    private String queryValue;

    public ListRange getRange();

    public void setRange(ListRange range);

    public List getRs();

    public void setRs(List rs);

    public int getTotalCount();

    public void setTotalCount(int totalCount);

    public String[] getColNames();

    public void setColNames(String[] colNames);

    public void run(BasePara basePara);

    /**
     * 从xml解析sql
     */
    public void parseXML();

    /**
     * 获取总记录数
     */
    public void getCount();

    /**
     * 获取sql中的字段名集合
     */
    public void getColsName();

    /**
     * 查询数据
     */
    public List loadDataWithSql();

    public void getQuerySql();

    /**
     * 接收参数
     */
    public Query getParams(Query query, String[][] params);

    /**
     * 首页Tree数据
     */
    public String getArrayResults();

    public void collectToMap(String flag);

    public void collectToMap();
}
","// LoaderTest.java
package com.hf.sfm.util;

import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Loader}.
* It contains ten unit test cases for the {@link Loader#loadDataWithSql()} method.
*/
class LoaderTest {","// LoaderTest.java
package com.hf.sfm.util;

import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Element;
import org.dom4j.io.SAXReader;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Loader}.
* It contains ten unit test cases for the {@link Loader#loadDataWithSql()} method.
*/
class LoaderTest {

	/**
	* Test case 1:
	*
	* <p>
	* This test case is used to test the {@link Loader#loadDataWithSql()} method.
	*
	* <p>
	* The test case is passed if the method returns a list of data.
	*/
	@Test
	public void testLoadDataWithSql1() {
		Loader loader = new Loader();
		loader.setFilepath(""sqlfolder/test.xml"");
		loader.setSql(""test"");
		loader.setStart(0);
		loader.setLimit(10);
		loader.setSort(""id"");
		loader.setDir(""asc"");
		loader.setPaging(true);
		loader.setQueryValue("""");
		loader.parseXML();
		loader.getCount();
		loader.getColsName();
		loader.getQuerySql();
		List list = loader.loadDataWithSql();
		assertNotNull(list);
	}
	
	/**
	* Test case 2:
	*
	* <p>
	* This test case is used to test the {@link Loader#loadDataWithSql()} method.
	*
	* <p>
	* The test case is passed if the method returns a list of data.
	*/
	@Test
	public void testLoadDataWithSql2() {
		Loader loader = new Loader();
		loader.setFilepath(""sqlfolder/test.xml"");
		loader.setSql(""test"");
		loader.setStart(0);
		loader.setLimit(10);
		loader.setSort(""id"");
		loader.setDir(""asc"");
		loader.setPaging(true);
		loader.setQueryValue("""");
		loader.parseXML();
		loader.getCount();
		loader.getColsName();
		loader.getQuerySql();
		List list = loader.loadDataWithSql();
		assertNotNull(list);
	}
	
	/**
	* Test case 3:
	*
	* <p>
	* This test case is used to test the {@link Loader#loadDataWithSql()} method.
	*
	* <p>
	* The test case is passed if the method returns a list of data.
	*/
	@Test
	public void testLoadDataWithSql3() {
		Loader loader = new Loader();
		loader.setFilepath(""sqlfolder/test.xml"");
		loader.setSql(""test"");
		loader.setStart(0);
		loader.setLimit(10);
		loader.setSort(""id"");
		loader.setDir(""asc"");
		loader.setPaging(true);
		loader.setQueryValue("""");
		loader.parseXML();
		loader.getCount();
		loader.getColsName();
		loader.getQuerySql();
		List list = loader.loadDataWithSql();
		assertNotNull(list);
	}
	
	/**
	* Test case 4:
	*
	* <p>
	* This test case is used to test the {@link Loader#loadDataWithSql()} method.
	*
	* <p>
	* The test case is passed if the method returns a list of data.
	*/
	@Test
	public void testLoadDataWithSql4() {
		Loader loader = new Loader();
		loader.setFilepath(""sqlfolder/test.xml"");
		loader.setSql(""test"");
		loader.setStart(0);
		loader.setLimit(10);
		loader.setSort(""id"");
		loader.setDir(""asc"");
		loader.setPaging(true);
		loader.setQueryValue("""");
		loader.parseXML();
		loader.getCount();
		loader.getColsName();
		loader.getQuerySql();
		List list = loader.loadDataWithSql();
		assertNotNull(list);
	}
	
	/**
	* Test case 5:
	*
	* <p>
	* This test case is used to test the {@link Loader#loadDataWithSql()} method.
	*
	* <p>
	* The test case is passed if the method returns a list of data.
	*/
	@Test
	public void testLoadDataWithSql5() {
		Loader loader = new Loader();
		loader.setFilepath(""sqlfolder/test.xml"");
		loader.setSql(""test"");
		loader.setStart(0);
		loader.setLimit(10);
		loader.setSort(""id"");
		loader.setDir(""asc"");
		loader.setPaging(true);
		loader.setQueryValue("""");
		loader.parseXML();
		loader.getCount();
		loader.getColsName();
		loader.getQuerySql();
		List list = loader.loadDataWithSql();
		assertNotNull(list);
	}
	
	/**
	* Test case 6:
	*
	* <p>
	* This test case is used to test the {@link Loader#loadDataWithSql()} method.
	*
	* <p>
	* The test case is passed if the method returns a list of data.
	*/
	@Test
	public void testLoadDataWithSql6() {
		Loader loader = new Loader();
		loader.setFilepath(""sqlfolder/test.xml"");
		loader.setSql(""test"");
		loader.setStart(0);
		loader.setLimit(10);
		loader.setSort(""id"");
		loader.setDir(""asc"");
		loader.setPaging(true);
		loader.setQueryValue("""");
		loader.parseXML();
		loader.getCount();
		loader.getColsName();
		loader.getQuerySql();
		List list = loader.loadDataWithSql();
		assertNotNull(list);
	}
	
	/**
	* Test case 7:
	*
	* <p>
	* This test case is used to test the {@link Loader#loadDataWithSql()} method.
	*
	* <p>
	* The test case is passed if the method returns a list of data.
	*/
	@Test
	public void testLoadDataWithSql7() {
		Loader loader = new Loader();
		loader.setFilepath(""sqlfolder/test.xml"");
		loader.setSql(""test"");
		loader.setStart(0);
		loader.setLimit(10);
		loader.setSort(""id"");
		loader.setDir(""asc"");
		loader.setPaging(true);
		loader.setQueryValue("""");
		loader.parseXML();
		loader.getCount();
		loader.getColsName();
		loader.getQuerySql();
		List list = loader.loadDataWithSql();
		assertNotNull(list);
	}
	
	/**
	* Test case 8:
	*
	* <p>
	* This test case is used to test the {@link Loader#loadDataWithSql()} method.
	*
	* <p>
	* The test case is passed if the method returns a list of data.
	*/
	@Test
	public void testLoadDataWithSql8() {
		Loader loader = new Loader();
		loader.setFilepath(""sqlfolder/test.xml"");
		loader.setSql(""test"");
		loader.setStart(0);
		loader.setLimit(10);
		loader.setSort(""id"");
		loader.setDir(""asc"");
		loader.setPaging(true);
		loader.setQueryValue("""");
		loader.parseXML();
		loader.getCount();
		loader.getColsName();
		loader.getQuerySql();
		List list = loader.loadDataWithSql();
		assertNotNull(list);
	}
	
	/**
	* Test case 9:
	*
	* <p>
	* This test case is used to test the {@link Loader#loadDataWithSql()} method.
	*
	* <p>
	* The test case is passed if the method returns a list of data.
	*/
	@Test
	public void testLoadDataWithSql9() {
		Loader loader = new Loader();
		loader.setFilepath(""sqlfolder/test.xml"");
		loader.setSql(""test"");
		loader.setStart(0);
		loader.setLimit(10);
		loader.setSort(""id"");
		loader.setDir(""asc"");
		loader.setPaging(true);
		loader.setQueryValue("""");
		loader.parseXML();
		loader.getCount();
		loader.getColsName();
		loader.getQuerySql();
		List list = loader.loadDataWithSql();
		assertNotNull(list);
	}
	
	/**
	* Test case 10:
	*
	* <p>
	* This test case is used to test the {@link Loader#loadDataWithSql()} method.
	*
	* <p>
	* The test case is passed if the method returns a list of data.
	*/
	@Test
	public void testLoadDataWithSql10() {
		Loader loader = new Loader();
		loader.setFilepath(""sqlfolder/test.xml"");
		loader.setSql(""test"");
		loader.setStart(0);
		loader.setLimit(10);
		loader.setSort(""id"");
		loader.setDir(""asc"");
		loader.setPaging(true);
		loader.setQueryValue("""");
		loader.parseXML();
		loader.getCount();
		loader.getColsName();
		loader.getQuerySql();
		List list = loader.loadDataWithSql();
		assertNotNull(list);
	}
}"
