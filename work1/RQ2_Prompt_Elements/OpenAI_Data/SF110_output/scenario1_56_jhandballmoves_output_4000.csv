ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
cmpl-6wufgwYzG99X2ileUD2Ylcst7adtZ,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main0.java,161.92489361763,length,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static ColorModel getColorModel() {
        return colorModel;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getColorModel()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getColorModel()} method.
*/
class MainTest {

	/**
	* Test case for {@link Main#getColorModel()} method.
	*/
	@Test
	void testGetColorModel() {
		// TODO: implement test
		fail(""Not yet implemented"");
	}
}

// MouseController.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.model.PlayerEvent;
import visu.handball.moves.model.PlayerEventType;
import visu.handball.moves.model.PlayerPosition;
import visu.handball.moves.model.PlayerPositionType;
import visu.handball.moves.model.Sequence;
import visu.handball.moves.views.Field;

/**
 * Controller f√ºr die Maus-Eingaben
 *
 * @author tommy
 */
public class MouseController implements MouseListener, MouseMotionListener {

    private final HandballModel model;
    private final Field field;
    private final PlayerToolBar playerToolBar;
    private final JMenuHelper menuHelper;
    private final CommentController commentController;
    private final StatusBar statusBar;
    private final PlayerPositionType playerPositionType;
    private final PlayerEventType playerEventType;
    private final int playerNumber;
    private final int sequenceNumber;
    private final int eventNumber;
    private final int playerPositionNumber;
    private final int playerPositionX;
    private final int playerPositionY;
    private final int playerPositionZ;
    private final int playerPositionRotation;
    private final int playerPositionDelay;
    private final int playerPositionDuration;
    private final int playerPositionComment;
    private final int playerPositionCommentX;
    private final int playerPositionCommentY;
    private final int playerPositionCommentWidth;
    private final int playerPositionCommentHeight;
    private final int playerPositionCommentText;
    private final int playerPositionCommentColor;
    private final int playerPositionCommentFont;
    private final int playerPositionCommentFontSize;
    private final int playerPositionCommentFontStyle;
    private final int playerPositionCommentFontColor;
    private final int playerPositionCommentFontBackgroundColor;
    private final int playerPositionCommentFontBorderColor;
    private final int playerPositionCommentFontBorderWidth;
    private final int playerPositionCommentFontBorderStyle;
    private final int playerPositionCommentFontBorderRadius;
    private final int playerPositionCommentFontPadding;
    private final int playerPositionCommentFontMargin;
    private final int playerPositionCommentFontAlign;
    private final int playerPositionCommentFontVAlign;
    private final int playerPositionCommentFontLineHeight;
    private final int playerPositionCommentFontLetterSpacing;
    private final int playerPositionCommentFontWordSpacing;
    private final int playerPositionCommentFontTextDecoration;
    private final int playerPositionCommentFontTextTransform;
    private final int playerPositionCommentFontTextShadow;
    private final int playerPositionCommentFontTextShadowColor;
    private final int playerPositionCommentFontTextShadowBlur;
    private final int playerPositionCommentFontTextShadowOffsetX;
    private final int playerPositionCommentFontTextShadowOffsetY;
    private final int playerPositionCommentFontTextShadowSpread;
    private final int playerPositionCommentFontTextShadowPosition;
    private final int playerPositionCommentFontTextShadowPositionX;
    private final int playerPositionCommentFontTextShadowPositionY;
    private final int playerPositionCommentFontTextShadowPositionZ;
    private final int playerPositionCommentFontTextShadowPositionRotation;
    private final int playerPositionCommentFontTextShadowPositionDelay;
    private final int playerPositionCommentFontTextShadowPositionDuration;
    private final int playerPositionCommentFontTextShadowPositionComment;
    private final int playerPositionCommentFontTextShadowPositionCommentX;
    private final int playerPositionCommentFontTextShadowPositionCommentY;
    private final int playerPositionCommentFontTextShadowPositionCommentWidth;
    private final int playerPositionCommentFontTextShadowPositionCommentHeight;
    private final int playerPositionCommentFontTextShadowPositionCommentText;
    private final int playerPositionCommentFontTextShadowPositionCommentColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFont;
    private final int playerPositionCommentFontTextShadowPositionCommentFontSize;
    private final int playerPositionCommentFontTextShadowPositionCommentFontStyle;
    private final int playerPositionCommentFontTextShadowPositionCommentFontColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontBackgroundColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontBorderColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontBorderWidth;
    private final int playerPositionCommentFontTextShadowPositionCommentFontBorderStyle;
    private final int playerPositionCommentFontTextShadowPositionCommentFontBorderRadius;
    private final int playerPositionCommentFontTextShadowPositionCommentFontPadding;
    private final int playerPositionCommentFontTextShadowPositionCommentFontMargin;
    private final int playerPositionCommentFontTextShadowPositionCommentFontAlign;
    private final int playerPositionCommentFontTextShadowPositionCommentFontVAlign;
    private final int playerPositionCommentFontTextShadowPositionCommentFontLineHeight;
    private final int playerPositionCommentFontTextShadowPositionCommentFontLetterSpacing;
    private final int playerPositionCommentFontTextShadowPositionCommentFontWordSpacing;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextDecoration;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextTransform;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadow;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowBlur;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowOffsetX;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowOffsetY;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowSpread;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPosition;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionX;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionY;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionZ;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionRotation;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionDelay;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionDuration;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionComment;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentX;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentY;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentWidth;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentHeight;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentText;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFont;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontSize;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontStyle;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBackgroundColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBorderColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBorderWidth;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBorderStyle;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBorderRadius;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontPadding;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontMargin;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontAlign;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontVAlign;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontLineHeight;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontLetterSpacing;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontWordSpacing;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextDecoration;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextTransform;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadow;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowBlur;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowOffsetX;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowOffsetY;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowSpread;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPosition;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionX;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionY;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionZ;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionRotation;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionDelay;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionDuration;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionComment;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentX;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentY;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentWidth;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentHeight;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentText;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFont;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontSize;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontStyle;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBackgroundColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBorderColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBorderWidth;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBorderStyle;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBorderRadius;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontPadding;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontMargin;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontAlign;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontVAlign;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontLineHeight;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontLetterSpacing;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontWordSpacing;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextDecoration;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextTransform;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadow;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowBlur;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowOffsetX;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowOffsetY;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowSpread;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPosition;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionX;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionY;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionZ;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionRotation;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionDelay;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionDuration;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionComment;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentX;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentY;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentWidth;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentHeight;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentText;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFont;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontSize;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontStyle;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBackgroundColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBorderColor;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBorderWidth;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBorderStyle;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontBorderRadius;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontPadding;
    private final int playerPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontTextShadowPositionCommentFontMargin;"
cmpl-6wuiHnLVVt6Fxwi5hzDiWHMBR2Gwj,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main1.java,183.36349821090698,length,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static JFrame getWindow() {
        return window;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getWindow()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getWindow()} method.
*/
class MainTest {

	/**
	* Test case for the {@link Main#getWindow()} method.
	*/
	@Test
	void testGetWindow() {
		assertNotNull(Main.getWindow());
	}
}

// MouseController.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.views.Field;

/**
 * Controller f√ºr die Maus-Events
 *
 * @author tommy
 */
public class MouseController implements MouseListener, MouseMotionListener {

    private Field field;
    private HandballModel model;

    public MouseController(Field field, HandballModel model) {
        this.field = field;
        this.model = model;
    }

    public void mouseClicked(MouseEvent e) {
        if (e.getButton() == MouseEvent.BUTTON1) {
            Player player = model.getPlayer(e.getX(), e.getY());
            if (player != null) {
                model.setSelectedPlayer(player);
            }
        }
    }

    public void mousePressed(MouseEvent e) {
    }

    public void mouseReleased(MouseEvent e) {
    }

    public void mouseEntered(MouseEvent e) {
    }

    public void mouseExited(MouseEvent e) {
    }

    public void mouseDragged(MouseEvent e) {
    }

    public void mouseMoved(MouseEvent e) {
        Player player = model.getPlayer(e.getX(), e.getY());
        if (player != null) {
            field.setToolTipText(player.getName());
        } else {
            field.setToolTipText(null);
        }
    }
}

// NewAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;

/**
 * Action zum Erstellen eines neuen Spielzugs
 *
 * @author tommy
 */
public class NewAction extends AbstractAction {

    private HandballModel model;

    public NewAction(HandballModel model) {
        this.model = model;
        putValue(Action.NAME, ""Neu"");
        putValue(Action.SMALL_ICON, new ImageIcon(getClass().getResource(""/images/new.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_N, KeyEvent.CTRL_DOWN_MASK));
    }

    public void actionPerformed(ActionEvent e) {
        model.newMove();
    }
}

// NewMoveEventAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;

/**
 * Action zum Erstellen eines neuen Spielzugs
 *
 * @author tommy
 */
public class NewMoveEventAction extends AbstractAction {

    private HandballModel model;

    public NewMoveEventAction(HandballModel model) {
        this.model = model;
        putValue(Action.NAME, ""Neuer Spielzug"");
        putValue(Action.SMALL_ICON, new ImageIcon(getClass().getResource(""/images/new.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_N, KeyEvent.CTRL_DOWN_MASK));
    }

    public void actionPerformed(ActionEvent e) {
        model.newMove();
    }
}

// NewPassEventAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;

/**
 * Action zum Erstellen eines neuen Spielzugs
 *
 * @author tommy
 */
public class NewPassEventAction extends AbstractAction {

    private HandballModel model;

    public NewPassEventAction(HandballModel model) {
        this.model = model;
        putValue(Action.NAME, ""Neuer Spielzug"");
        putValue(Action.SMALL_ICON, new ImageIcon(getClass().getResource(""/images/new.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_N, KeyEvent.CTRL_DOWN_MASK));
    }

    public void actionPerformed(ActionEvent e) {
        model.newMove();
    }
}

// NewSequenceAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;

/**
 * Action zum Erstellen einer neuen Sequenz
 *
 * @author tommy
 */
public class NewSequenceAction extends AbstractAction {

    private HandballModel model;

    public NewSequenceAction(HandballModel model) {
        this.model = model;
        putValue(Action.NAME, ""Neue Sequenz"");
        putValue(Action.SMALL_ICON, new ImageIcon(getClass().getResource(""/images/new.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_N, KeyEvent.CTRL_DOWN_MASK));
    }

    public void actionPerformed(ActionEvent e) {
        model.newSequence();
    }
}

// OpenAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;

/**
 * Action zum √ñffnen eines Spielzugs
 *
 * @author tommy
 */
public class OpenAction extends AbstractAction {

    private HandballModel model;

    public OpenAction(HandballModel model) {
        this.model = model;
        putValue(Action.NAME, ""√ñffnen"");
        putValue(Action.SMALL_ICON, new ImageIcon(getClass().getResource(""/images/open.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_DOWN_MASK));
    }

    public void actionPerformed(ActionEvent e) {
        JFileChooser chooser = new JFileChooser();
        int returnVal = chooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            model.openMove(chooser.getSelectedFile());
        }
    }
}

// PauseAnimationAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;

/**
 * Action zum Pausieren der Animation
 *
 * @author tommy
 */
public class PauseAnimationAction extends AbstractAction {

    private HandballModel model;

    public PauseAnimationAction(HandballModel model) {
        this.model = model;
        putValue(Action.NAME, ""Pause"");
        putValue(Action.SMALL_ICON, new ImageIcon(getClass().getResource(""/images/pause.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_P, KeyEvent.CTRL_DOWN_MASK));
    }

    public void actionPerformed(ActionEvent e) {
        model.pauseAnimation();
    }
}

// Player.java
package visu.handball.moves.model;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.io.Serializable;

/**
 * Spieler
 *
 * @author tommy
 */
public class Player implements Serializable {

    private String name;
    private Point position;
    private Color color;
    private boolean selected;

    public Player(String name, Point position, Color color) {
        this.name = name;
        this.position = position;
        this.color = color;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Point getPosition() {
        return position;
    }

    public void setPosition(Point position) {
        this.position = position;
    }

    public Color getColor() {
        return color;
    }

    public void setColor(Color color) {
        this.color = color;
    }

    public boolean isSelected() {
        return selected;
    }

    public void setSelected(boolean selected) {
        this.selected = selected;
    }

    public void draw(Graphics g) {
        g.setColor(color);
        g.fillOval(position.x - 10, position.y - 10, 20, 20);
        g.setColor(Color.BLACK);
        g.drawOval(position.x - 10, position.y - 10, 20, 20);
        if (selected) {
            g.drawOval(position.x - 12, position.y - 12, 24, 24);
        }
    }
}

// Player.java
package visu.handball.moves.model;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.io.Serializable;

/**
 * Spieler
 *
 * @author tommy
 */
public class Player implements Serializable {

    private String name;
    private Point position;
    private Color color;
    private boolean selected;

    public Player(String name, Point position, Color color) {
        this.name = name;
        this.position = position;
        this.color = color;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Point getPosition() {
        return position;
    }

    public void setPosition(Point position) {
        this.position = position;
    }

    public Color getColor() {
        return color;
    }

    public void setColor(Color color) {
        this.color = color;
    }

    public boolean isSelected() {
        return selected;
    }

    public void setSelected(boolean selected) {
        this.selected = selected;
    }

    public void draw(Graphics g) {
        g.setColor(color);
        g.fillOval(position.x - 10, position.y - 10, 20, 20);
        g.setColor(Color.BLACK);
        g.drawOval(position.x - 10, position.y - 10, 20, 20);
        if (selected) {
            g.drawOval(position.x - 12, position.y - 12, 24, 24);
        }
    }
}

// PlayerToolBar.java
package visu.handball.moves.views;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.JPopupMenu;
import javax.swing.JTextField;
import javax.swing.JToolBar;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;

/**
 * Toolbar f√ºr die Spieler
 *
 * @author tommy
 */
public class PlayerToolBar extends JToolBar {

    private HandballModel model;
    private ColorModel colorModel;
    private List<JButton> buttons = new ArrayList<JButton>();

    public PlayerToolBar(HandballModel model, ColorModel colorModel) {
        this.model = model;
        this.colorModel = colorModel;
        setFloatable(false);
        setBorder(BorderFactory.createLineBorder(Color.BLACK));
        setPreferredSize(new Dimension(200, 50));
        setMinimumSize(new Dimension(200, 50));
        setMaximumSize(new Dimension(200, 50));
        add(new AddPlayerAction());
        add(new RemovePlayerAction());
        add(new ChangePlayerColorAction());
        add(new ChangePlayerNameAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
        add(new ChangePlayerPositionAction());
"
cmpl-6wulFgNZKHxwFgdwjeAbZ0GPDHQSB,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main2.java,168.37875771522522,length,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static Field getField() {
        return field;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getField()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getField()} method.
*/
class MainTest {

	/**
	* Test case for the {@link Main#getField()} method.
	*/
	@Test
	void testGetField() {
		// TODO: implement this test case
		fail(""Not yet implemented"");
	}
}

// MouseController.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.model.PlayerEvent;
import visu.handball.moves.model.PlayerEvent.EventType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType;
import visu.handball.moves.model.PlayerEvent.PlayerEventType.PlayerEventTypeType.PlayerEventTypeTypeType.PlayerEventTypeTypeTypeType.PlayerEventTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType.PlayerEventTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeTypeType"
cmpl-6wunxGUALbt8tq74SEGhzVUDj2yaz,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main3.java,146.19090485572815,length,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static SaveAction getSaveAction() {
        return saveAction;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getSaveAction()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getSaveAction()} method.
*/
class MainTest {

	/**
	* Test case for the {@link Main#getSaveAction()} method.
	*/
	@Test
	void testGetSaveAction() {
		// TODO: implement this test case
		fail(""Not yet implemented"");
	}
}

// MouseController.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.model.PlayerEvent;
import visu.handball.moves.model.PlayerEventType;
import visu.handball.moves.model.PlayerPosition;
import visu.handball.moves.model.PlayerPositionType;
import visu.handball.moves.model.Sequence;
import visu.handball.moves.views.Field;

/**
 * Controller f√ºr die Maus-Eingaben
 *
 * @author tommy
 */
public class MouseController implements MouseListener, MouseMotionListener {

    private final HandballModel model;
    private final Field field;
    private final PlayerToolBar playerToolBar;
    private final JMenuHelper menuHelper;
    private final CommentController commentController;
    private final StatusBar statusBar;
    private final ColorModel colorModel;
    private final TableHandballModel tableHandballModel;
    private final TableSelectionListener tableSelectionListener;
    private final PlayerPositionType playerPositionType;
    private final PlayerEventType playerEventType;
    private final PlayerPosition playerPosition;
    private final PlayerEvent playerEvent;
    private final Player player;
    private final Sequence sequence;

    public MouseController(HandballModel model, Field field, PlayerToolBar playerToolBar, JMenuHelper menuHelper, CommentController commentController, StatusBar statusBar, ColorModel colorModel, TableHandballModel tableHandballModel, TableSelectionListener tableSelectionListener, PlayerPositionType playerPositionType, PlayerEventType playerEventType, PlayerPosition playerPosition, PlayerEvent playerEvent, Player player, Sequence sequence) {
        this.model = model;
        this.field = field;
        this.playerToolBar = playerToolBar;
        this.menuHelper = menuHelper;
        this.commentController = commentController;
        this.statusBar = statusBar;
        this.colorModel = colorModel;
        this.tableHandballModel = tableHandballModel;
        this.tableSelectionListener = tableSelectionListener;
        this.playerPositionType = playerPositionType;
        this.playerEventType = playerEventType;
        this.playerPosition = playerPosition;
        this.playerEvent = playerEvent;
        this.player = player;
        this.sequence = sequence;
    }

    @Override
    public void mouseClicked(MouseEvent e) {
        if (e.getButton() == MouseEvent.BUTTON1) {
            if (playerToolBar.getSelectedPlayerPositionType() != null) {
                if (playerToolBar.getSelectedPlayerEventType() != null) {
                    PlayerPosition playerPosition = new PlayerPosition(playerToolBar.getSelectedPlayerPositionType(), e.getX(), e.getY());
                    PlayerEvent playerEvent = new PlayerEvent(playerToolBar.getSelectedPlayerEventType(), playerPosition);
                    Player player = new Player(playerToolBar.getSelectedPlayerNumber(), playerEvent);
                    Sequence sequence = model.getActualSequence();
                    sequence.addPlayer(player);
                    tableHandballModel.fireTableDataChanged();
                    field.repaint();
                }
            }
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }

    @Override
    public void mouseDragged(MouseEvent e) {
    }

    @Override
    public void mouseMoved(MouseEvent e) {
        statusBar.setCoordinates(e.getX(), e.getY());
    }
}

// MouseControllerTest.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.model.PlayerEvent;
import visu.handball.moves.model.PlayerEventType;
import visu.handball.moves.model.PlayerPosition;
import visu.handball.moves.model.PlayerPositionType;
import visu.handball.moves.model.Sequence;
import visu.handball.moves.views.Field;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link MouseController}.
* It contains ten unit test cases for the {@link MouseController#mouseClicked(MouseEvent)} method.
*/
class MouseControllerTest {
		
	/**
	* Test case for the {@link MouseController#mouseClicked(MouseEvent)} method.
	*/
	@Test
	void testMouseClicked() {
		// TODO: implement this test case
		fail(""Not yet implemented"");
	}
}

// NewAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.resources.Resources;

/**
 * Action zum Erstellen einer neuen Sequenz
 *
 * @author tommy
 */
public class NewAction extends AbstractAction {

    private final HandballModel model;

    public NewAction(HandballModel model) {
        this.model = model;
        putValue(Action.NAME, ""Neu"");
        putValue(Action.SMALL_ICON, new ImageIcon(Resources.getImage(""new.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_N, KeyEvent.CTRL_DOWN_MASK));
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        model.newSequence();
    }
}

// NewActionTest.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.resources.Resources;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link NewAction}.
* It contains ten unit test cases for the {@link NewAction#actionPerformed(ActionEvent)} method.
*/
class NewActionTest {
		
	/**
	* Test case for the {@link NewAction#actionPerformed(ActionEvent)} method.
	*/
	@Test
	void testActionPerformed() {
		// TODO: implement this test case
		fail(""Not yet implemented"");
	}
}

// NewMoveEventAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import visu.handball.moves.model.PlayerEventType;
import visu.handball.moves.resources.Resources;

/**
 * Action zum Erstellen eines neuen Move-Events
 *
 * @author tommy
 */
public class NewMoveEventAction extends AbstractAction {

    public NewMoveEventAction() {
        putValue(Action.NAME, ""Move"");
        putValue(Action.SMALL_ICON, new ImageIcon(Resources.getImage(""move.png"")));
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        PlayerEventType.MOVE.setSelected(true);
    }
}

// NewMoveEventActionTest.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import visu.handball.moves.model.PlayerEventType;
import visu.handball.moves.resources.Resources;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link NewMoveEventAction}.
* It contains ten unit test cases for the {@link NewMoveEventAction#actionPerformed(ActionEvent)} method.
*/
class NewMoveEventActionTest {
		
	/**
	* Test case for the {@link NewMoveEventAction#actionPerformed(ActionEvent)} method.
	*/
	@Test
	void testActionPerformed() {
		// TODO: implement this test case
		fail(""Not yet implemented"");
	}
}

// NewPassEventAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import visu.handball.moves.model.PlayerEventType;
import visu.handball.moves.resources.Resources;

/**
 * Action zum Erstellen eines neuen Pass-Events
 *
 * @author tommy
 */
public class NewPassEventAction extends AbstractAction {

    public NewPassEventAction() {
        putValue(Action.NAME, ""Pass"");
        putValue(Action.SMALL_ICON, new ImageIcon(Resources.getImage(""pass.png"")));
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        PlayerEventType.PASS.setSelected(true);
    }
}

// NewPassEventActionTest.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import visu.handball.moves.model.PlayerEventType;
import visu.handball.moves.resources.Resources;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link NewPassEventAction}.
* It contains ten unit test cases for the {@link NewPassEventAction#actionPerformed(ActionEvent)} method.
*/
class NewPassEventActionTest {
		
	/**
	* Test case for the {@link NewPassEventAction#actionPerformed(ActionEvent)} method.
	*/
	@Test
	void testActionPerformed() {
		// TODO: implement this test case
		fail(""Not yet implemented"");
	}
}

// NewSequenceAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.resources.Resources;

/**
 * Action zum Erstellen einer neuen Sequenz
 *
 * @author tommy
 */
public class NewSequenceAction extends AbstractAction {

    private final HandballModel model;

    public NewSequenceAction(HandballModel model) {
        this.model = model;
        putValue(Action.NAME, ""Neue Sequenz"");
        putValue(Action.SMALL_ICON, new ImageIcon(Resources.getImage(""new.png"")));
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        model.newSequence();
    }
}

// NewSequenceActionTest.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.resources.Resources;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link NewSequenceAction}.
* It contains ten unit test cases for the {@link NewSequenceAction#actionPerformed(ActionEvent)} method.
*/
class NewSequenceActionTest {
		
	/**
	* Test case for the {@link NewSequenceAction#actionPerformed(ActionEvent)} method.
	*/
	@Test
	void testActionPerformed() {
		// TODO: implement this test case
		fail(""Not yet implemented"");
	}
}

// OpenAction.java
package visu.handball.moves.actions;

import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.resources.Resources;

/**
 * Action zum √ñffnen einer Sequenz
 *
 * @author tommy
 */
public class OpenAction extends AbstractAction {

    private final HandballModel model;

    public OpenAction(HandballModel model) {
        this.model = model;
        putValue(Action.NAME, ""√ñffnen"");
        putValue(Action.SMALL_ICON, new ImageIcon(Resources.getImage(""open.png"")));
        putValue(Action.ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_DOWN_MASK));
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        JFileChooser fileChooser = new JFileChooser();
        int returnVal = fileChooser.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            try {
                FileInputStream fileInputStream = new FileInputStream(file);
                ObjectInputStream objectInputStream = new ObjectInputStream(fileInputStream);
                model.setSequence((Sequence) objectInputStream.readObject());
                objectInputStream.close();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, ""Datei nicht gefunden"", ""Fehler"", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ""Fehler beim Lesen der Datei"", ""Fehler"", JOptionPane.ERROR_MESSAGE);
            } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null,"
cmpl-6wuqJuE7WEqgxeBPsCYnWQIvhj0Wa,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main4.java,137.6628222465515,length,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static CloseAction getCloseAction() {
        return closeAction;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getCloseAction()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getCloseAction()} method.
*/
class MainTest {

	/**
	* Test case for the {@link Main#getCloseAction()} method.
	*/
	@Test
	void testGetCloseAction() {
		// TODO: implement this test case
		fail(""Not yet implemented"");
	}
}

// MouseController.java
package visu.handball.moves.controller;

import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.Player;
import visu.handball.moves.model.PlayerEvent;
import visu.handball.moves.model.PlayerEventType;
import visu.handball.moves.model.PlayerPosition;
import visu.handball.moves.model.PlayerPositionType;
import visu.handball.moves.model.Sequence;
import visu.handball.moves.views.Field;

/**
 * Controller f√ºr die Maus-Eingaben
 *
 * @author tommy
 */
public class MouseController implements MouseListener, MouseMotionListener {

    private HandballModel model;
    private Field field;
    private PlayerPositionType playerPositionType;
    private PlayerPosition playerPosition;
    private PlayerEventType playerEventType;
    private PlayerEvent playerEvent;
    private Player player;
    private Sequence sequence;
    private int x;
    private int y;
    private int x2;
    private int y2;
    private int x3;
    private int y3;
    private int x4;
    private int y4;
    private int x5;
    private int y5;
    private int x6;
    private int y6;
    private int x7;
    private int y7;
    private int x8;
    private int y8;
    private int x9;
    private int y9;
    private int x10;
    private int y10;
    private int x11;
    private int y11;
    private int x12;
    private int y12;
    private int x13;
    private int y13;
    private int x14;
    private int y14;
    private int x15;
    private int y15;
    private int x16;
    private int y16;
    private int x17;
    private int y17;
    private int x18;
    private int y18;
    private int x19;
    private int y19;
    private int x20;
    private int y20;
    private int x21;
    private int y21;
    private int x22;
    private int y22;
    private int x23;
    private int y23;
    private int x24;
    private int y24;
    private int x25;
    private int y25;
    private int x26;
    private int y26;
    private int x27;
    private int y27;
    private int x28;
    private int y28;
    private int x29;
    private int y29;
    private int x30;
    private int y30;
    private int x31;
    private int y31;
    private int x32;
    private int y32;
    private int x33;
    private int y33;
    private int x34;
    private int y34;
    private int x35;
    private int y35;
    private int x36;
    private int y36;
    private int x37;
    private int y37;
    private int x38;
    private int y38;
    private int x39;
    private int y39;
    private int x40;
    private int y40;
    private int x41;
    private int y41;
    private int x42;
    private int y42;
    private int x43;
    private int y43;
    private int x44;
    private int y44;
    private int x45;
    private int y45;
    private int x46;
    private int y46;
    private int x47;
    private int y47;
    private int x48;
    private int y48;
    private int x49;
    private int y49;
    private int x50;
    private int y50;
    private int x51;
    private int y51;
    private int x52;
    private int y52;
    private int x53;
    private int y53;
    private int x54;
    private int y54;
    private int x55;
    private int y55;
    private int x56;
    private int y56;
    private int x57;
    private int y57;
    private int x58;
    private int y58;
    private int x59;
    private int y59;
    private int x60;
    private int y60;
    private int x61;
    private int y61;
    private int x62;
    private int y62;
    private int x63;
    private int y63;
    private int x64;
    private int y64;
    private int x65;
    private int y65;
    private int x66;
    private int y66;
    private int x67;
    private int y67;
    private int x68;
    private int y68;
    private int x69;
    private int y69;
    private int x70;
    private int y70;
    private int x71;
    private int y71;
    private int x72;
    private int y72;
    private int x73;
    private int y73;
    private int x74;
    private int y74;
    private int x75;
    private int y75;
    private int x76;
    private int y76;
    private int x77;
    private int y77;
    private int x78;
    private int y78;
    private int x79;
    private int y79;
    private int x80;
    private int y80;
    private int x81;
    private int y81;
    private int x82;
    private int y82;
    private int x83;
    private int y83;
    private int x84;
    private int y84;
    private int x85;
    private int y85;
    private int x86;
    private int y86;
    private int x87;
    private int y87;
    private int x88;
    private int y88;
    private int x89;
    private int y89;
    private int x90;
    private int y90;
    private int x91;
    private int y91;
    private int x92;
    private int y92;
    private int x93;
    private int y93;
    private int x94;
    private int y94;
    private int x95;
    private int y95;
    private int x96;
    private int y96;
    private int x97;
    private int y97;
    private int x98;
    private int y98;
    private int x99;
    private int y99;
    private int x100;
    private int y100;
    private int x101;
    private int y101;
    private int x102;
    private int y102;
    private int x103;
    private int y103;
    private int x104;
    private int y104;
    private int x105;
    private int y105;
    private int x106;
    private int y106;
    private int x107;
    private int y107;
    private int x108;
    private int y108;
    private int x109;
    private int y109;
    private int x110;
    private int y110;
    private int x111;
    private int y111;
    private int x112;
    private int y112;
    private int x113;
    private int y113;
    private int x114;
    private int y114;
    private int x115;
    private int y115;
    private int x116;
    private int y116;
    private int x117;
    private int y117;
    private int x118;
    private int y118;
    private int x119;
    private int y119;
    private int x120;
    private int y120;
    private int x121;
    private int y121;
    private int x122;
    private int y122;
    private int x123;
    private int y123;
    private int x124;
    private int y124;
    private int x125;
    private int y125;
    private int x126;
    private int y126;
    private int x127;
    private int y127;
    private int x128;
    private int y128;
    private int x129;
    private int y129;
    private int x130;
    private int y130;
    private int x131;
    private int y131;
    private int x132;
    private int y132;
    private int x133;
    private int y133;
    private int x134;
    private int y134;
    private int x135;
    private int y135;
    private int x136;
    private int y136;
    private int x137;
    private int y137;
    private int x138;
    private int y138;
    private int x139;
    private int y139;
    private int x140;
    private int y140;
    private int x141;
    private int y141;
    private int x142;
    private int y142;
    private int x143;
    private int y143;
    private int x144;
    private int y144;
    private int x145;
    private int y145;
    private int x146;
    private int y146;
    private int x147;
    private int y147;
    private int x148;
    private int y148;
    private int x149;
    private int y149;
    private int x150;
    private int y150;
    private int x151;
    private int y151;
    private int x152;
    private int y152;
    private int x153;
    private int y153;
    private int x154;
    private int y154;
    private int x155;
    private int y155;
    private int x156;
    private int y156;
    private int x157;
    private int y157;
    private int x158;
    private int y158;
    private int x159;
    private int y159;
    private int x160;
    private int y160;
    private int x161;
    private int y161;
    private int x162;
    private int y162;
    private int x163;
    private int y163;
    private int x164;
    private int y164;
    private int x165;
    private int y165;
    private int x166;
    private int y166;
    private int x167;
    private int y167;
    private int x168;
    private int y168;
    private int x169;
    private int y169;
    private int x170;
    private int y170;
    private int x171;
    private int y171;
    private int x172;
    private int y172;
    private int x173;
    private int y173;
    private int x174;
    private int y174;
    private int x175;
    private int y175;
    private int x176;
    private int y176;
    private int x177;
    private int y177;
    private int x178;
    private int y178;
    private int x179;
    private int y179;
    private int x180;
    private int y180;
    private int x181;
    private int y181;
    private int x182;
    private int y182;
    private int x183;
    private int y183;
    private int x184;
    private int y184;
    private int x185;
    private int y185;
    private int x186;
    private int y186;
    private int x187;
    private int y187;
    private int x188;
    private int y188;
    private int x189;
    private int y189;
    private int x190;
    private int y190;
    private int x191;
    private int y191;
    private int x192;
    private int y192;
    private int x193;
    private int y193;
    private int x194;
    private int y194;
    private int x195;
    private int y195;
    private int x196;
    private int y196;
    private int x197;
    private int y197;
    private int x198;
    private int y198;
    private int x199;
    private int y199;
    private int x200;
    private int y200;
    private int x201;
    private int y201;
    private int x202;
    private int y202;
    private int x203;
    private int y203;
    private int x204;
    private int y204;
    private int x205;
    private int y205;
    private int x206;
    private int y206;
    private int x207;
    private int y207;
    private int x208;
    private int y208;
    private int x209;
    private int y209;
    private int x210;
    private int y210;
    private int x211;
    private int y211;
    private int x212;
    private int y212;
    private int x213;
    private int y213;
    private int x214;
    private int y214;
    private int x215;
    private int y215;
    private int x216;
    private int y216;
    private int x217;
    private int y217;
    private int x218;
    private int y218;
    private int x219;
    private int y219;
    private int x220;
    private int y220;
    private int x221;
    private int y221;
    private int x222;
    private int y222;
    private int x223;
    private int y223;
    private int x224;
    private int y224;
    private int x225;
    private int y225;
    private int x226;
    private int y226;
    private int x227;
    private int y227;
    private int x228;
    private int y228;
    private int x229;
    private int y229;
    private int x230;
    private int y230;
    private int x231;
    private int y231;
    private int x232;
    private int y232;
    private int x233;
    private int y233;
    private int x234;
    private int y234;
    private int x235;
    private int y235;
    private int x236;
    private int y236;
    private int x237;
    private int y237;
    private int x238;
    private int y238;
    private int x239;
    private int y239;
    private int x240;
    private int y240;
    private int x241;
    private int y241;
    private int x242;
    private int y242;
    private int x243;
    private int y243;
    private int x244;
    private int y244;
    private int x245;
    private int y245;
    private int x246;
    private int y246;
    private int x247;
    private int y247;
    private int x248;
    private int y248;
    private int x249;
    private int y249;
    private int x250;
    private int y250;
    private int x251;
    private int y251;
    private int x252;
    private int y252;
    private int x253;
    private int y253;
    private int x254;
    private int y254;
    private int x255;
    private int y255;
    private int x256;
    private int y256;
    private int x257;
    private int y257;
    private int x258;
    private int y258;
    private int x259;
    private int y259;
    private int x260;
    private int y260;
    private int x261;
    private int"
cmpl-6wusX82d8DS9PADabV1EiRyMstuBK,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main5.java,56.210543394088745,stop,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static Object deepCopy(Object oldObj) throws Exception {
        Object clone = null;
        try {
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(baos);
            oos.writeObject(oldObj);
            oos.flush();
            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));
            clone = ois.readObject();
            oos.close();
            ois.close();
        } catch (Exception e) {
            //$NON-NLS-1$
            System.out.println(""Exception in ObjectCloner = "" + e);
            throw (e);
        }
        return clone;
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#deepCopy(Object)} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#deepCopy(Object)} method.
*/
class MainTest {

	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_1() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_2() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_3() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_4() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_5() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_6() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_7() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_8() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_9() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
	
	/**
	* Test case for the {@link Main#deepCopy(Object)} method.
	* It tests if the method returns the same object.
	*/
	@Test
	void testDeepCopy_10() {
		Object oldObj = new Object();
		Object clone = null;
		try {
			clone = Main.deepCopy(oldObj);
		} catch (Exception e) {
			fail(""Exception in ObjectCloner = "" + e);
		}
		assertEquals(oldObj, clone);
	}
}"
cmpl-6wutaLsNCvj6fOeE5I8XdTDlACniG,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/Main6.java,2.227064371109009,stop,"// Main.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;

/**
 * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen
 *
 * @author tommy
 */
public class Main {

    public static String getVersion() {
        //$NON-NLS-1$
        return ""1.0.5"";
    }
}
","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getVersion()} method.
*/
class MainTest {","// MainTest.java
package visu.handball.moves;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import visu.handball.moves.actions.AboutAction;
import visu.handball.moves.actions.ChangeColorsAction;
import visu.handball.moves.actions.CloseAction;
import visu.handball.moves.actions.CreateMovePdfAction;
import visu.handball.moves.actions.DeleteEventAction;
import visu.handball.moves.actions.NewAction;
import visu.handball.moves.actions.NewMoveEventAction;
import visu.handball.moves.actions.NewPassEventAction;
import visu.handball.moves.actions.NewSequenceAction;
import visu.handball.moves.actions.OpenAction;
import visu.handball.moves.actions.PauseAnimationAction;
import visu.handball.moves.actions.PrintActualSequenzAction;
import visu.handball.moves.actions.PrintMoveAction;
import visu.handball.moves.actions.SaveAction;
import visu.handball.moves.actions.SetMoveNameAction;
import visu.handball.moves.actions.StartAnimationAction;
import visu.handball.moves.actions.StartOneSequenceAnimationAction;
import visu.handball.moves.actions.StopAnimationAction;
import visu.handball.moves.controller.CommentController;
import visu.handball.moves.controller.JMenuHelper;
import visu.handball.moves.controller.MouseController;
import visu.handball.moves.model.ColorModel;
import visu.handball.moves.model.HandballModel;
import visu.handball.moves.model.TableHandballModel;
import visu.handball.moves.model.TableSelectionListener;
import visu.handball.moves.resources.Resources;
import visu.handball.moves.views.CommentView;
import visu.handball.moves.views.EventTableCellDelayEditor;
import visu.handball.moves.views.EventTableCellRenderer;
import visu.handball.moves.views.Field;
import visu.handball.moves.views.PlayerToolBar;
import visu.handball.moves.views.StatusBar;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link Main}.
* It contains ten unit test cases for the {@link Main#getVersion()} method.
*/
class MainTest {

	/**
	* Test case for {@link Main#getVersion()}.
	*/
	@Test
	void testGetVersion() {
		assertEquals(""1.0.5"", Main.getVersion());
	}
}"
cmpl-6wuud2nBYa0hW49ubVeHGWfg1BMGN,/EvoSuiteBenchmark/scenario1/56_jhandballmoves/src/main/java/visu/handball/moves/controller/JMenuHelper.java,34.60023021697998,,"// JMenuHelper.java
package visu.handball.moves.controller;

import java.awt.event.*;
import javax.swing.*;

public class JMenuHelper {

    public static JMenu addMenuBarItem(JMenuBar menuBar, String s) {
        JMenu menu;
        /**
         * Suche nach '_' und nimm das n√§chste Zeichen als Mnemonic,
         * sonst: normales Menu
         */
        if (s.indexOf(""_"") > -1) {
            int pos = s.indexOf(""_"");
            char c = s.charAt(pos + 1);
            StringBuffer sb = new StringBuffer(s).delete(pos, pos + 1);
            menu = new JMenu(sb.toString());
            menu.setMnemonic(c);
        } else
            menu = new JMenu(s);
        menuBar.add(menu);
        return menu;
    }
}
","// JMenuHelperTest.java
package visu.handball.moves.controller;

import java.awt.event.*;
import javax.swing.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link JMenuHelper}.
* It contains ten unit test cases for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
*/
class JMenuHelperTest {","// JMenuHelperTest.java
package visu.handball.moves.controller;

import java.awt.event.*;
import javax.swing.*;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link JMenuHelper}.
* It contains ten unit test cases for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
*/
class JMenuHelperTest {

	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the normal case.
	*/
	@Test
	void testAddMenuBarItem_NormalCase() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""Test"");
		assertEquals(""Test"", menu.getText());
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is null.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsNull() {
		JMenuBar menuBar = null;
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, ""Test"");
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is empty.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsEmpty() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, """");
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is null and the menu is empty.
	*/
	@Test
	void testAddMenuBarItem_MenuBarAndMenuAreEmpty() {
		JMenuBar menuBar = null;
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, """");
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is empty and the menu is null.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsEmptyAndMenuIsNull() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, null);
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is null and the menu is null.
	*/
	@Test
	void testAddMenuBarItem_MenuBarAndMenuAreNull() {
		JMenuBar menuBar = null;
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, null);
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is empty and the menu is null.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsEmptyAndMenuIsNull() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, null);
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is null and the menu is empty.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsNullAndMenuIsEmpty() {
		JMenuBar menuBar = null;
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, """");
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is null and the menu is null.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsNullAndMenuIsNull() {
		JMenuBar menuBar = null;
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, null);
		assertNull(menu);
	}
	
	/**
	* Test case for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.
	* The test case tests the case that the menu bar is empty and the menu is empty.
	*/
	@Test
	void testAddMenuBarItem_MenuBarIsEmptyAndMenuIsEmpty() {
		JMenuBar menuBar = new JMenuBar();
		JMenu menu = JMenuHelper.addMenuBarItem(menuBar, """");
		assertNull(menu);
	}
}"
