ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
cmpl-6xIJxnAt2VhwPQtUxESt51iC8jfUc,/EvoSuiteBenchmark/original/6_jnfe/src/main/java/br/com/jnfe/base/TransportKeyStoreBean_0Test.java,123.54998826980591,length,"// TransportKeyStoreBean.java
package br.com.jnfe.base;

import java.security.KeyStore;
import javax.net.ssl.KeyManagerFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.InitializingBean;
import br.com.jnfe.base.util.SecurityUtils;

/**
 * Atualiza as propriedades do sistema para establecer a ""keyStore""
 * usada para o transmiss�o das mensagens dos web services NFe.
 *
 * @author Mauricio Fernandes de Castro
 */
public class TransportKeyStoreBean implements InitializingBean {

    private final static String DEFAULT_KEYSTORE_URI = ""file:#{ systemProperties['user.home'] }/jnfe.pfx"";

    private final static String DEFAULT_KEYSTORE_TYPE = ""pkcs12"";

    private String keyStoreUri;

    private String keyStoreType;

    private String keyStorePassword;

    private String trustStoreType;

    private String trustStore;

    private String trustStorePassword;

    /**
     * A URI para a keystore usada para autenticar o transporte.
     *
     * @param keyStoreUri
     */
    public void setKeyStoreUri(String keyStoreUri);

    /**
     * O tipo de keystore empregado para o transporte.
     *
     * @param keyStoreType
     */
    public void setKeyStoreType(String keyStoreType);

    /**
     * A senha para acesso ao keystore empregado para o transporte.
     *
     * @param keyStorePassword
     */
    public void setKeyStorePassword(String keyStorePassword);

    /**
     * Localiza��o do aramz�m seguro.
     *
     * @param trustStore
     */
    public void setTrustStore(String trustStore);

    /**
     * Tipo do armaz�m do armaz�m seguro (cacerts).
     *
     * @param trustStoreType
     */
    public void setTrustStoreType(String trustStoreType);

    /**
     * Senah do armaz�m seguro (cacerts).
     *
     * @param trustStorePassword
     */
    public void setTrustStorePassword(String trustStorePassword);

    public void afterPropertiesSet() throws Exception;

    /**
     * toString
     * @return String
     */
    public String toString();

    /**
     * Abre o  armaz�m seguro (cacerts).
     *
     * @throws Exception
     */
    public KeyStore openTransportStore() throws Exception;

    /**
     * Abre o gerenciador de chaves do armaz�m de transporte.
     *
     * @throws Exception
     */
    public KeyManagerFactory openTransportKeyManagerFactory() throws Exception;

    private static final Logger logger = LoggerFactory.getLogger(TransportKeyStoreBean.class);
}
","// TransportKeyStoreBean_0Test.java
package br.com.jnfe.base;

import java.security.KeyStore;
import javax.net.ssl.KeyManagerFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.InitializingBean;
import br.com.jnfe.base.util.SecurityUtils;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link TransportKeyStoreBean}.
* It contains ten unit test cases for the {@link TransportKeyStoreBean#openTransportStore()} method.
*/
class TransportKeyStoreBean_0Test {","// TransportKeyStoreBean_0Test.java
package br.com.jnfe.base;

import java.security.KeyStore;
import javax.net.ssl.KeyManagerFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.InitializingBean;
import br.com.jnfe.base.util.SecurityUtils;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link TransportKeyStoreBean}.
* It contains ten unit test cases for the {@link TransportKeyStoreBean#openTransportStore()} method.
*/
class TransportKeyStoreBean_0Test {

	private static final Logger logger = LoggerFactory.getLogger(TransportKeyStoreBean.class);

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportStore()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportStore_0() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean.setTrustStore(""file:#{ systemProperties['java.home'] }/lib/security/cacerts"");
		transportKeyStoreBean.setTrustStorePassword(""changeit"");
		transportKeyStoreBean.afterPropertiesSet();
		KeyStore result = transportKeyStoreBean.openTransportStore();
		assertNotNull(result);
	}

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportStore()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportStore_1() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean.setTrustStore(""file:#{ systemProperties['java.home'] }/lib/security/cacerts"");
		transportKeyStoreBean.setTrustStorePassword(""changeit"");
		transportKeyStoreBean.afterPropertiesSet();
		KeyStore result = transportKeyStoreBean.openTransportStore();
		assertNotNull(result);
	}

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportStore()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportStore_2() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean.setTrustStore(""file:#{ systemProperties['java.home'] }/lib/security/cacerts"");
		transportKeyStoreBean.setTrustStorePassword(""changeit"");
		transportKeyStoreBean.afterPropertiesSet();
		KeyStore result = transportKeyStoreBean.openTransportStore();
		assertNotNull(result);
	}

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportStore()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportStore_3() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean.setTrustStore(""file:#{ systemProperties['java.home'] }/lib/security/cacerts"");
		transportKeyStoreBean.setTrustStorePassword(""changeit"");
		transportKeyStoreBean.afterPropertiesSet();
		KeyStore result = transportKeyStoreBean.openTransportStore();
		assertNotNull(result);
	}

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportStore()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportStore_4() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean.setTrustStore(""file:#{ systemProperties['java.home'] }/lib/security/cacerts"");
		transportKeyStoreBean.setTrustStorePassword(""changeit"");
		transportKeyStoreBean.afterPropertiesSet();
		KeyStore result = transportKeyStoreBean.openTransportStore();
		assertNotNull(result);
	}

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportStore()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportStore_5() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean.setTrustStore(""file:#{ systemProperties['java.home'] }/lib/security/cacerts"");
		transportKeyStoreBean.setTrustStorePassword(""changeit"");
		transportKeyStoreBean.afterPropertiesSet();
		KeyStore result = transportKeyStoreBean.openTransportStore();
		assertNotNull(result);
	}

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportStore()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportStore_6() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean.setTrustStore(""file:#{ systemProperties['java.home'] }/lib/security/cacerts"");
		transportKeyStoreBean.setTrustStorePassword(""changeit"");
		transportKeyStoreBean.afterPropertiesSet();
		KeyStore result = transportKeyStoreBean.openTransportStore();
		assertNotNull(result);
	}

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportStore()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportStore_7() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean.setTrustStore(""file:#{ systemProperties['java.home'] }/lib/security/cacerts"");
		transportKeyStoreBean.setTrustStorePassword(""changeit"");
		transportKeyStoreBean.afterPropertiesSet();
		KeyStore result = transportKeyStoreBean.openTransportStore();
		assertNotNull(result);
	}

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportStore()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportStore_8() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean.setTrustStore(""file:#{ systemProperties['java.home'] }/lib/security/cacerts"");
		transportKeyStoreBean.setTrustStorePassword(""changeit"");
		transportKeyStoreBean.afterPropertiesSet();
		KeyStore result = transportKeyStoreBean.openTransportStore();
		assertNotNull(result);
	}

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportStore()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportStore_9() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean.setTrustStore(""file:#{ systemProperties['java.home'] }/lib/security/cacerts"");
		transportKeyStoreBean.setTrustStorePassword(""changeit"");
		transportKeyStoreBean.afterPropertiesSet();
		KeyStore result = transportKeyStoreBean.openTransportStore();
		assertNotNull(result);
	}
}

// TransportKeyStoreBean_1Test.java
package br.com.jnfe.base;

import java.security.KeyStore;
import javax.net.ssl.KeyManagerFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.InitializingBean;
import br.com.jnfe.base.util.SecurityUtils;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link TransportKeyStoreBean}.
* It contains ten unit test cases for the {@link TransportKeyStoreBean#openTransportKeyManagerFactory()} method.
*/
class TransportKeyStoreBean_1Test {
		
	private static final Logger logger = LoggerFactory.getLogger(TransportKeyStoreBean.class);

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportKeyManagerFactory()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportKeyManagerFactory_0() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean.setTrustStore(""file:#{ systemProperties['java.home'] }/lib/security/cacerts"");
		transportKeyStoreBean.setTrustStorePassword(""changeit"");
		transportKeyStoreBean.afterPropertiesSet();
		KeyManagerFactory result = transportKeyStoreBean.openTransportKeyManagerFactory();
		assertNotNull(result);
	}

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportKeyManagerFactory()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportKeyManagerFactory_1() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean.setTrustStore(""file:#{ systemProperties['java.home'] }/lib/security/cacerts"");
		transportKeyStoreBean.setTrustStorePassword(""changeit"");
		transportKeyStoreBean.afterPropertiesSet();
		KeyManagerFactory result = transportKeyStoreBean.openTransportKeyManagerFactory();
		assertNotNull(result);
	}

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportKeyManagerFactory()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportKeyManagerFactory_2() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean.setTrustStore(""file:#{ systemProperties['java.home'] }/lib/security/cacerts"");
		transportKeyStoreBean.setTrustStorePassword(""changeit"");
		transportKeyStoreBean.afterPropertiesSet();
		KeyManagerFactory result = transportKeyStoreBean.openTransportKeyManagerFactory();
		assertNotNull(result);
	}

	/**
	 * Test case for the {@link TransportKeyStoreBean#openTransportKeyManagerFactory()} method.
	 *
	 * @throws Exception
	 */
	@Test
	public void testOpenTransportKeyManagerFactory_3() throws Exception {
		TransportKeyStoreBean transportKeyStoreBean = new TransportKeyStoreBean();
		transportKeyStoreBean.setKeyStoreUri(""file:#{ systemProperties['user.home'] }/jnfe.pfx"");
		transportKeyStoreBean.setKeyStoreType(""pkcs12"");
		transportKeyStoreBean.setKeyStorePassword(""changeit"");
		transportKeyStoreBean.setTrustStoreType(""jks"");
		transportKeyStoreBean"
cmpl-6xILxXyHJcLnO0nrKTzr4DwEgA0fA,/EvoSuiteBenchmark/original/6_jnfe/src/main/java/br/com/jnfe/base/TransportKeyStoreBean_1Test.java,111.88387155532837,length,"// TransportKeyStoreBean.java
package br.com.jnfe.base;

import java.security.KeyStore;
import javax.net.ssl.KeyManagerFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.InitializingBean;
import br.com.jnfe.base.util.SecurityUtils;

/**
 * Atualiza as propriedades do sistema para establecer a ""keyStore""
 * usada para o transmiss�o das mensagens dos web services NFe.
 *
 * @author Mauricio Fernandes de Castro
 */
public class TransportKeyStoreBean implements InitializingBean {

    private final static String DEFAULT_KEYSTORE_URI = ""file:#{ systemProperties['user.home'] }/jnfe.pfx"";

    private final static String DEFAULT_KEYSTORE_TYPE = ""pkcs12"";

    private String keyStoreUri;

    private String keyStoreType;

    private String keyStorePassword;

    private String trustStoreType;

    private String trustStore;

    private String trustStorePassword;

    /**
     * A URI para a keystore usada para autenticar o transporte.
     *
     * @param keyStoreUri
     */
    public void setKeyStoreUri(String keyStoreUri);

    /**
     * O tipo de keystore empregado para o transporte.
     *
     * @param keyStoreType
     */
    public void setKeyStoreType(String keyStoreType);

    /**
     * A senha para acesso ao keystore empregado para o transporte.
     *
     * @param keyStorePassword
     */
    public void setKeyStorePassword(String keyStorePassword);

    /**
     * Localiza��o do aramz�m seguro.
     *
     * @param trustStore
     */
    public void setTrustStore(String trustStore);

    /**
     * Tipo do armaz�m do armaz�m seguro (cacerts).
     *
     * @param trustStoreType
     */
    public void setTrustStoreType(String trustStoreType);

    /**
     * Senah do armaz�m seguro (cacerts).
     *
     * @param trustStorePassword
     */
    public void setTrustStorePassword(String trustStorePassword);

    public void afterPropertiesSet() throws Exception;

    /**
     * toString
     * @return String
     */
    public String toString();

    /**
     * Abre o  armaz�m seguro (cacerts).
     *
     * @throws Exception
     */
    public KeyStore openTransportStore() throws Exception;

    /**
     * Abre o gerenciador de chaves do armaz�m de transporte.
     *
     * @throws Exception
     */
    public KeyManagerFactory openTransportKeyManagerFactory() throws Exception;

    private static final Logger logger = LoggerFactory.getLogger(TransportKeyStoreBean.class);
}
","// TransportKeyStoreBean_1Test.java
package br.com.jnfe.base;

import java.security.KeyStore;
import javax.net.ssl.KeyManagerFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.InitializingBean;
import br.com.jnfe.base.util.SecurityUtils;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link TransportKeyStoreBean}.
* It contains ten unit test cases for the {@link TransportKeyStoreBean#openTransportKeyManagerFactory()} method.
*/
class TransportKeyStoreBean_1Test {","// TransportKeyStoreBean_1Test.java
package br.com.jnfe.base;

import java.security.KeyStore;
import javax.net.ssl.KeyManagerFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.InitializingBean;
import br.com.jnfe.base.util.SecurityUtils;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link TransportKeyStoreBean}.
* It contains ten unit test cases for the {@link TransportKeyStoreBean#openTransportKeyManagerFactory()} method.
*/
class TransportKeyStoreBean_1Test {

	private static final Logger logger = LoggerFactory.getLogger(TransportKeyStoreBean_1Test.class);
	
	private static final String DEFAULT_KEYSTORE_URI = ""file:#{ systemProperties['user.home'] }/jnfe.pfx"";
	
	private static final String DEFAULT_KEYSTORE_TYPE = ""pkcs12"";
	
	private static final String DEFAULT_KEYSTORE_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_TRUSTSTORE_TYPE = ""jks"";
	
	private static final String DEFAULT_TRUSTSTORE = ""file:#{ systemProperties['java.home'] }/lib/security/cacerts"";
	
	private static final String DEFAULT_TRUSTSTORE_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_ALGORITHM = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_PROVIDER = ""SunJSSE"";
	
	private static final String DEFAULT_TRUSTSTORE_PROVIDER = ""SUN"";
	
	private static final String DEFAULT_KEYSTORE_ALIAS = ""jnfe"";
	
	private static final String DEFAULT_KEYSTORE_KEY_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_ALGORITHM = ""RSA"";
	
	private static final String DEFAULT_KEYSTORE_KEY_PROVIDER = ""SunJSSE"";
	
	private static final String DEFAULT_KEYSTORE_KEY_TYPE = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_FORMAT = ""PKCS#8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_ENCODING = ""UTF-8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_TYPE = ""jks"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_PROVIDER = ""SUN"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_ALGORITHM = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_URI = ""file:#{ systemProperties['user.home'] }/jnfe.pfx"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_ALGORITHM = ""RSA"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_PROVIDER = ""SunJSSE"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_TYPE = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_FORMAT = ""PKCS#8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_ENCODING = ""UTF-8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_TYPE = ""jks"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_PROVIDER = ""SUN"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_ALGORITHM = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_URI = ""file:#{ systemProperties['user.home'] }/jnfe.pfx"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_ALGORITHM = ""RSA"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_PROVIDER = ""SunJSSE"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_TYPE = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_FORMAT = ""PKCS#8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_ENCODING = ""UTF-8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_TYPE = ""jks"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_PROVIDER = ""SUN"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_ALGORITHM = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_URI = ""file:#{ systemProperties['user.home'] }/jnfe.pfx"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_ALGORITHM = ""RSA"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_PROVIDER = ""SunJSSE"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_TYPE = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_FORMAT = ""PKCS#8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_ENCODING = ""UTF-8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_TYPE = ""jks"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_PROVIDER = ""SUN"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_ALGORITHM = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_URI = ""file:#{ systemProperties['user.home'] }/jnfe.pfx"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_ALGORITHM = ""RSA"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_PROVIDER = ""SunJSSE"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_TYPE = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_FORMAT = ""PKCS#8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_ENCODING = ""UTF-8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_TYPE = ""jks"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_PROVIDER = ""SUN"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_ALGORITHM = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_URI = ""file:#{ systemProperties['user.home'] }/jnfe.pfx"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_ALGORITHM = ""RSA"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_PROVIDER = ""SunJSSE"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_TYPE = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_FORMAT = ""PKCS#8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_ENCODING = ""UTF-8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_TYPE = ""jks"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_PROVIDER = ""SUN"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_ALGORITHM = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_URI = ""file:#{ systemProperties['user.home'] }/jnfe.pfx"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_ALGORITHM = ""RSA"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_PROVIDER = ""SunJSSE"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_TYPE = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_FORMAT = ""PKCS#8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_ENCODING = ""UTF-8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_TYPE = ""jks"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_PROVIDER = ""SUN"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_ALGORITHM = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_URI = ""file:#{ systemProperties['user.home'] }/jnfe.pfx"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_PASSWORD = ""changeit"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_ALGORITHM = ""RSA"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_PROVIDER = ""SunJSSE"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_TYPE = ""SunX509"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_FORMAT = ""PKCS#8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_ENCODING = ""UTF-8"";
	
	private static final String DEFAULT_KEYSTORE_KEY_STORE_KEY_STORE_KEY_STORE_KEY_ST"
