[
    {
        "id": "cmpl-6wlbb6OeBdZx2oGrwo8USAJ8HDeb1",
        "object": "text_completion",
        "created": 1679464039,
        "model": "code-davinci-002",
        "choices": [
            {
                "text": "// ExtBoolArrayTest.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#isFalse(int, int)} method.\n*/\nclass ExtBoolArrayTest {\n\t\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 0</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_0() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true};\n\t\tassertFalse(extBoolArray.isFalse(0, 0));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 1</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_1() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 1));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 2</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_2() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 2));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 3</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_3() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 3));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 4</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_4() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 5</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_5() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 5));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 6</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_6() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 6));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 7</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_7() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false, false, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 7));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 8</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_8() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false, false, false, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 8));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 9</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_9() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false, false, false, false, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 9));\n\t}\n\t\n}",
                "index": 0,
                "logprobs": null,
                "finish_reason": "length"
            }
        ],
        "usage": {
            "prompt_tokens": 218,
            "completion_tokens": 2000,
            "total_tokens": 2218
        },
        "time_taken": 72.08895874023438,
        "prompt_id": "/EvoSuiteBenchmark/scenario1/39_diffi/src/main/java/de/beiri22/stringincrementor/helper/ExtBoolArray0.java",
        "original_code": "// ExtBoolArray.java\npackage de.beiri22.stringincrementor.helper;\n\n/**\n * @author Rico\n */\npublic final class ExtBoolArray {\n\n    public boolean isFalse(int a, int b) {\n        for (int i = a; i <= b; i++) {\n            if (werte[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n",
        "test_prompt": "// ExtBoolArrayTest.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#isFalse(int, int)} method.\n*/\nclass ExtBoolArrayTest {",
        "original_generated_code": "\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 0</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_0() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true};\n\t\tassertFalse(extBoolArray.isFalse(0, 0));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 1</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_1() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 1));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 2</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_2() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 2));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 3</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_3() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 3));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 4</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_4() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 5</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_5() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 5));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 6</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_6() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 6));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 7</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_7() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false, false, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 7));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 8</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_8() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false, false, false, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 8));\n\t}\n\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t* with the following input:\n\t* <ul>\n\t* <li>a = 0</li>\n\t* <li>b = 9</li>\n\t* </ul>\n\t* and the following expected output:\n\t* <ul>\n\t* <li>false</li>\n\t* </ul>\n\t*/\n\t@Test\n\tvoid testIsFalse_0_9() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray();\n\t\textBoolArray.werte = new boolean[] {true, false, false, false, false, false, false, false, false, false};\n\t\tassertFalse(extBoolArray.isFalse(0, 9));\n\t}\n\t\n}\n\n// ExtIntArray.java\npackage de.beiri22.stringincrementor.helper;\n\n/**\n * @author Rico\n */\npublic final class ExtIntArray {\n\n    public int sum(int a, int b) {\n        int sum = 0;\n        for (int i = a; i <= b; i++) {\n            sum += werte[i];\n        }\n        return sum;\n    }\n}\n\n// ExtIntArrayTest.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit",
        "applied_heuristics": "H7"
    },
    {
        "id": "cmpl-6wlcl1AJDrlaU7BEqmX9lanUYVcbH",
        "object": "text_completion",
        "created": 1679464111,
        "model": "code-davinci-002",
        "choices": [
            {
                "text": "// ExtBoolArrayTest.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#left()} method.\n*/\nclass ExtBoolArrayTest {\n\t\t\n\t@Test\n\tvoid testLeft() {\n\t\tExtBoolArray array = new ExtBoolArray();\n\t\tarray.werte = new boolean[] {true, true, true, true, true, true, true, true, true, true};\n\t\tassertEquals(0, array.left());\n\t\tarray.werte = new boolean[] {false, false, false, false, false, false, false, false, false, false};\n\t\tassertEquals(10, array.left());\n\t\tarray.werte = new boolean[] {true, false, true, false, true, false, true, false, true, false};\n\t\tassertEquals(5, array.left());\n\t\tarray.werte = new boolean[] {false, true, false, true, false, true, false, true, false, true};\n\t\tassertEquals(5, array.left());\n\t\tarray.werte = new boolean[] {true, true, false, false, true, true, false, false, true, true};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {false, false, true, true, false, false, true, true, false, false};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {true, false, false, true, true, false, false, true, true, false};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {false, true, true, false, false, true, true, false, false, true};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {true, true, true, false, false, false, true, true, true, false};\n\t\tassertEquals(3, array.left());\n\t\tarray.werte = new boolean[] {false, false, false, true, true, true, false, false, false, true};\n\t\tassertEquals(3, array.left());\n\t}\n}",
                "index": 0,
                "logprobs": null,
                "finish_reason": "length"
            }
        ],
        "usage": {
            "prompt_tokens": 217,
            "completion_tokens": 2000,
            "total_tokens": 2217
        },
        "time_taken": 89.57344269752502,
        "prompt_id": "/EvoSuiteBenchmark/scenario1/39_diffi/src/main/java/de/beiri22/stringincrementor/helper/ExtBoolArray1.java",
        "original_code": "// ExtBoolArray.java\npackage de.beiri22.stringincrementor.helper;\n\n/**\n * @author Rico\n */\npublic final class ExtBoolArray {\n\n    public int left() {\n        int result = 0;\n        for (int i = 0; i < werte.length; i++) {\n            if (!werte[i]) {\n                result++;\n            }\n        }\n        return result;\n    }\n}\n",
        "test_prompt": "// ExtBoolArrayTest.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#left()} method.\n*/\nclass ExtBoolArrayTest {",
        "original_generated_code": "\n\t@Test\n\tvoid testLeft() {\n\t\tExtBoolArray array = new ExtBoolArray();\n\t\tarray.werte = new boolean[] {true, true, true, true, true, true, true, true, true, true};\n\t\tassertEquals(0, array.left());\n\t\tarray.werte = new boolean[] {false, false, false, false, false, false, false, false, false, false};\n\t\tassertEquals(10, array.left());\n\t\tarray.werte = new boolean[] {true, false, true, false, true, false, true, false, true, false};\n\t\tassertEquals(5, array.left());\n\t\tarray.werte = new boolean[] {false, true, false, true, false, true, false, true, false, true};\n\t\tassertEquals(5, array.left());\n\t\tarray.werte = new boolean[] {true, true, false, false, true, true, false, false, true, true};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {false, false, true, true, false, false, true, true, false, false};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {true, false, false, true, true, false, false, true, true, false};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {false, true, true, false, false, true, true, false, false, true};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {true, true, true, false, false, false, true, true, true, false};\n\t\tassertEquals(3, array.left());\n\t\tarray.werte = new boolean[] {false, false, false, true, true, true, false, false, false, true};\n\t\tassertEquals(3, array.left());\n\t}\n}\n\n// ExtBoolArray.java\npackage de.beiri22.stringincrementor.helper;\n\n/**\n * @author Rico\n */\npublic final class ExtBoolArray {\n\n    public int left() {\n        int result = 0;\n        for (int i = 0; i < werte.length; i++) {\n            if (!werte[i]) {\n                result++;\n            }\n        }\n        return result;\n    }\n}\n\n// ExtBoolArrayTest.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#left()} method.\n*/\nclass ExtBoolArrayTest {\n\t\t\n\t@Test\n\tvoid testLeft() {\n\t\tExtBoolArray array = new ExtBoolArray();\n\t\tarray.werte = new boolean[] {true, true, true, true, true, true, true, true, true, true};\n\t\tassertEquals(0, array.left());\n\t\tarray.werte = new boolean[] {false, false, false, false, false, false, false, false, false, false};\n\t\tassertEquals(10, array.left());\n\t\tarray.werte = new boolean[] {true, false, true, false, true, false, true, false, true, false};\n\t\tassertEquals(5, array.left());\n\t\tarray.werte = new boolean[] {false, true, false, true, false, true, false, true, false, true};\n\t\tassertEquals(5, array.left());\n\t\tarray.werte = new boolean[] {true, true, false, false, true, true, false, false, true, true};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {false, false, true, true, false, false, true, true, false, false};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {true, false, false, true, true, false, false, true, true, false};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {false, true, true, false, false, true, true, false, false, true};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {true, true, true, false, false, false, true, true, true, false};\n\t\tassertEquals(3, array.left());\n\t\tarray.werte = new boolean[] {false, false, false, true, true, true, false, false, false, true};\n\t\tassertEquals(3, array.left());\n\t}\n}\n\n// ExtBoolArray.java\npackage de.beiri22.stringincrementor.helper;\n\n/**\n * @author Rico\n */\npublic final class ExtBoolArray {\n\n    public int left() {\n        int result = 0;\n        for (int i = 0; i < werte.length; i++) {\n            if (!werte[i]) {\n                result++;\n            }\n        }\n        return result;\n    }\n}\n\n// ExtBoolArrayTest.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#left()} method.\n*/\nclass ExtBoolArrayTest {\n\t\t\n\t@Test\n\tvoid testLeft() {\n\t\tExtBoolArray array = new ExtBoolArray();\n\t\tarray.werte = new boolean[] {true, true, true, true, true, true, true, true, true, true};\n\t\tassertEquals(0, array.left());\n\t\tarray.werte = new boolean[] {false, false, false, false, false, false, false, false, false, false};\n\t\tassertEquals(10, array.left());\n\t\tarray.werte = new boolean[] {true, false, true, false, true, false, true, false, true, false};\n\t\tassertEquals(5, array.left());\n\t\tarray.werte = new boolean[] {false, true, false, true, false, true, false, true, false, true};\n\t\tassertEquals(5, array.left());\n\t\tarray.werte = new boolean[] {true, true, false, false, true, true, false, false, true, true};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {false, false, true, true, false, false, true, true, false, false};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {true, false, false, true, true, false, false, true, true, false};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {false, true, true, false, false, true, true, false, false, true};\n\t\tassertEquals(4, array.left());\n\t\tarray.werte = new boolean[] {true, true, true, false, false, false, true, true, true, false};\n\t\tassertEquals(3, array.left());\n\t\tarray.werte = new boolean[] {false, false, false, true, true, true, false, false, false, true};\n\t\tassertEquals(3, array.left());\n\t}\n}\n\n// ExtBoolArray.java\npackage de.beiri22.stringincrementor.helper;\n\n/**\n * @author Rico\n */\npublic final class ExtBoolArray {\n\n    public int left() {\n        int result = 0;\n        for (int i = 0; i < werte.length; i++) {\n            if (!werte[i]) {\n                result++;\n            }\n        }\n        return result;\n    }\n}\n\n// ExtBoolArrayTest.java\n",
        "applied_heuristics": "H1"
    }
]