[
    {
        "id": "chatcmpl-A5UwEQYZOKMqLKbZLBRKeYAfvmBLe",
        "object": "chat.completion",
        "created": 1725873930,
        "model": "gpt-3.5-turbo-0125",
        "choices": [
            {
                "index": 0,
                "message": {
                    "role": "assistant",
                    "content": "package visu.handball.moves.controller;\njava\nclass JMenuHelper_0Test {\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMnemonic_ThenMenuWithMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"File\");\n        assertNotNull(menu);\n        assertEquals(\"File\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Edit\");\n        assertNotNull(menu);\n        assertEquals(\"Edit\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMnemonic_ThenMenuWithMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"View\");\n        assertNotNull(menu);\n        assertEquals(\"View\", menu.getText());\n        assertEquals('V', menu.getMnemonic());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Help\");\n        assertNotNull(menu);\n        assertEquals(\"Help\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMultipleMnemonics_ThenMenuWithFirstMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Save_As\");\n        assertNotNull(menu);\n        assertEquals(\"SaveAs\", menu.getText());\n        assertEquals('S', menu.getMnemonic());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Exit\");\n        assertNotNull(menu);\n        assertEquals(\"Exit\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMnemonicAtEnd_ThenMenuWithMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Open_\");\n        assertNotNull(menu);\n        assertEquals(\"Open\", menu.getText());\n        assertEquals('O', menu.getMnemonic());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"New\");\n        assertNotNull(menu);\n        assertEquals(\"New\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMnemonicAtBeginning_ThenMenuWithMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"_File\");\n        assertNotNull(menu);\n        assertEquals(\"File\", menu.getText());\n        assertEquals('F', menu.getMnemonic());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Options\");\n        assertNotNull(menu);\n        assertEquals(\"Options\", menu.getText());\n    }\n}\n",
                    "refusal": null
                },
                "logprobs": null,
                "finish_reason": "stop",
                "text": "package visu.handball.moves.controller;\njava\nclass JMenuHelper_0Test {\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMnemonic_ThenMenuWithMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"File\");\n        assertNotNull(menu);\n        assertEquals(\"File\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Edit\");\n        assertNotNull(menu);\n        assertEquals(\"Edit\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMnemonic_ThenMenuWithMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"View\");\n        assertNotNull(menu);\n        assertEquals(\"View\", menu.getText());\n        assertEquals('V', menu.getMnemonic());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Help\");\n        assertNotNull(menu);\n        assertEquals(\"Help\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMultipleMnemonics_ThenMenuWithFirstMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Save_As\");\n        assertNotNull(menu);\n        assertEquals(\"SaveAs\", menu.getText());\n        assertEquals('S', menu.getMnemonic());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Exit\");\n        assertNotNull(menu);\n        assertEquals(\"Exit\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMnemonicAtEnd_ThenMenuWithMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Open_\");\n        assertNotNull(menu);\n        assertEquals(\"Open\", menu.getText());\n        assertEquals('O', menu.getMnemonic());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"New\");\n        assertNotNull(menu);\n        assertEquals(\"New\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMnemonicAtBeginning_ThenMenuWithMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"_File\");\n        assertNotNull(menu);\n        assertEquals(\"File\", menu.getText());\n        assertEquals('F', menu.getMnemonic());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Options\");\n        assertNotNull(menu);\n        assertEquals(\"Options\", menu.getText());\n    }\n}\n"
            }
        ],
        "usage": {
            "prompt_tokens": 1073,
            "completion_tokens": 737,
            "total_tokens": 1810
        },
        "system_fingerprint": null,
        "time_taken": 13.487371444702148,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/controller/JMenuHelper_0Test.java",
        "original_code": "// JMenuHelper.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves.controller;\r\n\r\nimport java.awt.event.*;\r\nimport javax.swing.*;\r\n\r\npublic class JMenuHelper {\r\n\r\n    /**\r\n     * Add an element to the menubar.\r\n     *\r\n     * @param menuBar a JMenuBar\r\n     * @param s a String\r\n     *\r\n     * @return added JMenu\r\n     */\r\n    public static JMenu addMenuBarItem(JMenuBar menuBar, String s) {\r\n        JMenu menu;\r\n        /**\r\n         * Suche nach '_' und nimm das n\u00c3\u00a4chste Zeichen als Mnemonic,\r\n         * sonst: normales Menu\r\n         */\r\n        if (s.indexOf(\"_\") > -1) {\r\n            int pos = s.indexOf(\"_\");\r\n            char c = s.charAt(pos + 1);\r\n            StringBuffer sb = new StringBuffer(s).delete(pos, pos + 1);\r\n            menu = new JMenu(sb.toString());\r\n            menu.setMnemonic(c);\r\n        } else\r\n            menu = new JMenu(s);\r\n        menuBar.add(menu);\r\n        return menu;\r\n    }\r\n\r\n    private static JMenuItem processAction(Action a) {\r\n        if (a != null) {\r\n            return new JMenuItem(a);\r\n        } else {\r\n            return new JMenuItem();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Setze das Zeichen nach '_' als Mnemonic des MenuItems\r\n     * @param s\r\n     */\r\n    private static void processMnemonic(JMenuItem menuItem, String s) {\r\n        if (s.indexOf(\"_\") > -1) {\r\n            int pos = s.indexOf(\"_\");\r\n            char c = s.charAt(pos + 1);\r\n            StringBuffer sb = new StringBuffer(s).delete(pos, pos + 1);\r\n            menuItem.setName(sb.toString());\r\n            menuItem.setMnemonic(c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Insert a JMenuItem to a given JMenu.\r\n     *\r\n     * @param m\r\n     *            a JMenu\r\n     * @param s\r\n     *            a String\r\n     * @param keyChar\r\n     *            a char\r\n     * @param al\r\n     *            an ActionListener\r\n     *\r\n     * @return a JMenuItem\r\n     */\r\n    public static JMenuItem addMenuItem(JMenu m, String s, char keyChar, Action a, ActionListener al) {\r\n        if (s.startsWith(\"-\")) {\r\n            m.addSeparator();\r\n            return null;\r\n        }\r\n        JMenuItem menuItem = processAction(a);\r\n        processMnemonic(menuItem, s);\r\n        //f\u00c3\u00bcge den Short-Cut hinzu\r\n        if (keyChar != 0)\r\n            menuItem.setAccelerator(KeyStroke.getKeyStroke(keyChar, InputEvent.CTRL_MASK));\r\n        //Actionslistener anmelden\r\n        if (al != null)\r\n            menuItem.addActionListener(al);\r\n        //dem Menu hinzuf\u00c3\u00bcgen\r\n        m.add(menuItem);\r\n        return menuItem;\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s, char c) {\r\n        return addMenuItem(m, s, c, null, null);\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s) {\r\n        return addMenuItem(m, s, (char) 0, null, null);\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s, ActionListener al) {\r\n        return addMenuItem(m, s, (char) 0, null, al);\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s, Action a) {\r\n        return addMenuItem(m, s, (char) 0, a, null);\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s, char c, Action a) {\r\n        return addMenuItem(m, s, c, a, null);\r\n    }\r\n}\r\n",
        "test_prompt": "// JMenuHelper_0Test.java\npackage visu.handball.moves.controller;\n\nimport java.awt.event.*;\nimport javax.swing.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link JMenuHelper}.\n* It contains ten unit test cases for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.\n*/\nclass JMenuHelper_0Test {",
        "original_generated_code": "```java\nclass JMenuHelper_0Test {\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMnemonic_ThenMenuWithMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"File\");\n        assertNotNull(menu);\n        assertEquals(\"File\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Edit\");\n        assertNotNull(menu);\n        assertEquals(\"Edit\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMnemonic_ThenMenuWithMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"View\");\n        assertNotNull(menu);\n        assertEquals(\"View\", menu.getText());\n        assertEquals('V', menu.getMnemonic());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Help\");\n        assertNotNull(menu);\n        assertEquals(\"Help\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMultipleMnemonics_ThenMenuWithFirstMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Save_As\");\n        assertNotNull(menu);\n        assertEquals(\"SaveAs\", menu.getText());\n        assertEquals('S', menu.getMnemonic());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Exit\");\n        assertNotNull(menu);\n        assertEquals(\"Exit\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMnemonicAtEnd_ThenMenuWithMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Open_\");\n        assertNotNull(menu);\n        assertEquals(\"Open\", menu.getText());\n        assertEquals('O', menu.getMnemonic());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"New\");\n        assertNotNull(menu);\n        assertEquals(\"New\", menu.getText());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsMnemonicAtBeginning_ThenMenuWithMnemonicAdded() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"_File\");\n        assertNotNull(menu);\n        assertEquals(\"File\", menu.getText());\n        assertEquals('F', menu.getMnemonic());\n    }\n\n    @Test\n    void testAddMenuBarItem_WhenStringContainsNoMnemonic_ThenMenuWithoutMnemonicAddedCorrectly() {\n        JMenuBar menuBar = new JMenuBar();\n        JMenu menu = JMenuHelper.addMenuBarItem(menuBar, \"Options\");\n        assertNotNull(menu);\n        assertEquals(\"Options\", menu.getText());\n    }\n}\n```\n```",
        "applied_heuristics": "H2;H5"
    },
    {
        "id": "chatcmpl-A5UxHXFKPNVlLDeRefEYQQcOE8gPN",
        "object": "chat.completion",
        "created": 1725873995,
        "model": "gpt-3.5-turbo-0125",
        "choices": [
            {
                "index": 0,
                "message": {
                    "role": "assistant",
                    "content": "// Main_0Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getColorModel()} method.\n*/\nclass Main_0Test {\n}",
                    "refusal": null
                },
                "logprobs": null,
                "finish_reason": "stop",
                "text": "// Main_0Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getColorModel()} method.\n*/\nclass Main_0Test {\n}"
            }
        ],
        "usage": {
            "prompt_tokens": 3783,
            "completion_tokens": 494,
            "total_tokens": 4277
        },
        "system_fingerprint": null,
        "time_taken": 7.36722993850708,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_0Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00c3\u00bcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00c3\u00a4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00c3\u00bcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\u00ef\u00bf\u00bden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_0Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getColorModel()} method.\n*/\nclass Main_0Test {",
        "original_generated_code": "```java\npackage visu.handball.moves;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n * Test class of {@link Main}.\n * It contains ten unit test cases for the {@link Main#getColorModel()} method.\n */\nclass Main_0Test {\n\n    @Test\n    void testGetColorModelNotNull() {\n        ColorModel colorModel = Main.getColorModel();\n        assertNotNull(colorModel);\n    }\n\n    @Test\n    void testGetColorModelSameInstance() {\n        ColorModel colorModel1 = Main.getColorModel();\n        ColorModel colorModel2 = Main.getColorModel();\n        assertSame(colorModel1, colorModel2);\n    }\n\n    @Test\n    void testGetColorModelIsColorModel() {\n        ColorModel colorModel = Main.getColorModel();\n        assertTrue(colorModel instanceof ColorModel);\n    }\n\n    @Test\n    void testGetColorModelNotEqual() {\n        ColorModel colorModel1 = Main.getColorModel();\n        ColorModel colorModel2 = new ColorModel();\n        assertNotEquals(colorModel1, colorModel2);\n    }\n\n    @Test\n    void testGetColorModelNotNullAfterMain() {\n        Main.main(new String[]{});\n        ColorModel colorModel = Main.getColorModel();\n        assertNotNull(colorModel);\n    }\n\n    @Test\n    void testGetColorModelSameInstanceAfterMain() {\n        Main.main(new String[]{});\n        ColorModel colorModel1 = Main.getColorModel();\n        ColorModel colorModel2 = Main.getColorModel();\n        assertSame(colorModel1, colorModel2);\n    }\n\n    @Test\n    void testGetColorModelIsColorModelAfterMain() {\n        Main.main(new String[]{});\n        ColorModel colorModel = Main.getColorModel();\n        assertTrue(colorModel instanceof ColorModel);\n    }\n\n    @Test\n    void testGetColorModelNotEqualAfterMain() {\n        Main.main(new String[]{});\n        ColorModel colorModel1 = Main.getColorModel();\n        ColorModel colorModel2 = new ColorModel();\n        assertNotEquals(colorModel1, colorModel2);\n    }\n\n    @Test\n    void testGetColorModelNotNullMultipleCalls() {\n        ColorModel colorModel1 = Main.getColorModel();\n        ColorModel colorModel2 = Main.getColorModel();\n        ColorModel colorModel3 = Main.getColorModel();\n        assertNotNull(colorModel1);\n        assertNotNull(colorModel2);\n        assertNotNull(colorModel3);\n    }\n}\n```\n",
        "applied_heuristics": "H2;H7"
    },
    {
        "id": "chatcmpl-A5UyKC9D36hTCEWsneNw1FeA2kDl8",
        "object": "chat.completion",
        "created": 1725874060,
        "model": "gpt-3.5-turbo-0125",
        "choices": [
            {
                "index": 0,
                "message": {
                    "role": "assistant",
                    "content": "// Main_3Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getWindow()} method.\n*/\nclass Main_3Test {\n}",
                    "refusal": null
                },
                "logprobs": null,
                "finish_reason": "stop",
                "text": "// Main_3Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getWindow()} method.\n*/\nclass Main_3Test {\n}"
            }
        ],
        "usage": {
            "prompt_tokens": 3782,
            "completion_tokens": 263,
            "total_tokens": 4045
        },
        "system_fingerprint": null,
        "time_taken": 3.7692456245422363,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_3Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00c3\u00bcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00c3\u00a4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00c3\u00bcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\u00ef\u00bf\u00bden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_3Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getWindow()} method.\n*/\nclass Main_3Test {",
        "original_generated_code": "```java\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass Main_3Test {\n\n    @Test\n    void testGetWindowNotNull() {\n        assertNotNull(Main.getWindow());\n    }\n\n    @Test\n    void testGetWindowInstance() {\n        assertTrue(Main.getWindow() instanceof JFrame);\n    }\n\n    @Test\n    void testGetWindowVisibility() {\n        assertTrue(Main.getWindow().isVisible());\n    }\n\n    @Test\n    void testGetWindowTitle() {\n        assertEquals(Resources.getString(\"app.title\"), Main.getWindow().getTitle());\n    }\n\n    @Test\n    void testGetWindowWidth() {\n        assertEquals(1000, Main.getWindow().getWidth());\n    }\n\n    @Test\n    void testGetWindowHeight() {\n        assertEquals(700, Main.getWindow().getHeight());\n    }\n\n    @Test\n    void testGetWindowCloseOperation() {\n        assertEquals(JFrame.DO_NOTHING_ON_CLOSE, Main.getWindow().getDefaultCloseOperation());\n    }\n\n    @Test\n    void testGetWindowIcon() {\n        assertNotNull(Main.getWindow().getIconImage());\n    }\n\n    @Test\n    void testGetWindowLayout() {\n        assertTrue(Main.getWindow().getLayout() instanceof BorderLayout);\n    }\n\n    @Test\n    void testGetWindowContentPane() {\n        assertNotNull(Main.getWindow().getContentPane());\n    }\n}\n```",
        "applied_heuristics": "H2;H7"
    },
    {
        "id": "chatcmpl-A5UzNGlVamHG2vdNwSXiZHbAynotl",
        "object": "chat.completion",
        "created": 1725874125,
        "model": "gpt-3.5-turbo-0125",
        "choices": [
            {
                "index": 0,
                "message": {
                    "role": "assistant",
                    "content": "// Main_4Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getField()} method.\n*/\nclass Main_4Test {\n}",
                    "refusal": null
                },
                "logprobs": null,
                "finish_reason": "stop",
                "text": "// Main_4Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getField()} method.\n*/\nclass Main_4Test {\n}"
            }
        ],
        "usage": {
            "prompt_tokens": 3782,
            "completion_tokens": 344,
            "total_tokens": 4126
        },
        "system_fingerprint": null,
        "time_taken": 5.0911314487457275,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_4Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00c3\u00bcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00c3\u00a4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00c3\u00bcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\u00ef\u00bf\u00bden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_4Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getField()} method.\n*/\nclass Main_4Test {",
        "original_generated_code": "```java\npackage visu.handball.moves;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n * Test class of {@link Main}.\n * It contains ten unit test cases for the {@link Main#getField()} method.\n */\nclass Main_4Test {\n\n    @Test\n    void testGetFieldNotNull() {\n        assertNotNull(Main.getField());\n    }\n\n    @Test\n    void testGetFieldInstance() {\n        assertTrue(Main.getField() instanceof Field);\n    }\n\n    @Test\n    void testGetFieldSameInstance() {\n        assertSame(Main.getField(), Main.getField());\n    }\n\n    @Test\n    void testGetFieldNotSameInstance() {\n        Field field1 = Main.getField();\n        Field field2 = new Field(new HandballModel(), new ColorModel());\n        assertNotSame(field1, field2);\n    }\n\n    @Test\n    void testGetFieldDimensions() {\n        Field field = Main.getField();\n        assertNotNull(field);\n        assertEquals(0, field.getX());\n        assertEquals(0, field.getY());\n        assertEquals(100, field.getWidth());\n        assertEquals(100, field.getHeight());\n    }\n\n    @Test\n    void testGetFieldColorModelNotNull() {\n        assertNotNull(Main.getField().getColorModel());\n    }\n\n    @Test\n    void testGetFieldHandballModelNotNull() {\n        assertNotNull(Main.getField().getHandballModel());\n    }\n\n    @Test\n    void testGetFieldColorModelInstance() {\n        assertTrue(Main.getField().getColorModel() instanceof ColorModel);\n    }\n\n    @Test\n    void testGetFieldHandballModelInstance() {\n        assertTrue(Main.getField().getHandballModel() instanceof HandballModel);\n    }\n}\n```\n",
        "applied_heuristics": "H2;H7"
    },
    {
        "id": "chatcmpl-A5V0Qm2iOdWYieqdUcoyfFNK6ecQE",
        "object": "chat.completion",
        "created": 1725874190,
        "model": "gpt-3.5-turbo-0125",
        "choices": [
            {
                "index": 0,
                "message": {
                    "role": "assistant",
                    "content": "// Main_5Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getSaveAction()} method.\n*/\nclass Main_5Test {\n}",
                    "refusal": null
                },
                "logprobs": null,
                "finish_reason": "stop",
                "text": "// Main_5Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getSaveAction()} method.\n*/\nclass Main_5Test {\n}"
            }
        ],
        "usage": {
            "prompt_tokens": 3783,
            "completion_tokens": 555,
            "total_tokens": 4338
        },
        "system_fingerprint": null,
        "time_taken": 7.147807836532593,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_5Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00c3\u00bcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00c3\u00a4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00c3\u00bcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\u00ef\u00bf\u00bden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_5Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getSaveAction()} method.\n*/\nclass Main_5Test {",
        "original_generated_code": "```java\npackage visu.handball.moves;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n * Test class of {@link Main}.\n * It contains ten unit test cases for the {@link Main#getSaveAction()} method.\n */\nclass Main_5Test {\n\n    @Test\n    void testGetSaveActionNotNull() {\n        assertNotNull(Main.getSaveAction());\n    }\n\n    @Test\n    void testGetSaveActionInstance() {\n        assertTrue(Main.getSaveAction() instanceof SaveAction);\n    }\n\n    @Test\n    void testGetSaveActionSameInstance() {\n        SaveAction saveAction1 = Main.getSaveAction();\n        SaveAction saveAction2 = Main.getSaveAction();\n        assertSame(saveAction1, saveAction2);\n    }\n\n    @Test\n    void testGetSaveActionNotSameInstance() {\n        SaveAction saveAction1 = Main.getSaveAction();\n        SaveAction saveAction2 = new SaveAction(new HandballModel());\n        assertNotSame(saveAction1, saveAction2);\n    }\n\n    @Test\n    void testGetSaveActionEquals() {\n        SaveAction saveAction1 = Main.getSaveAction();\n        SaveAction saveAction2 = new SaveAction(new HandballModel());\n        assertEquals(saveAction1, saveAction2);\n    }\n\n    @Test\n    void testGetSaveActionNotEquals() {\n        SaveAction saveAction1 = Main.getSaveAction();\n        SaveAction saveAction2 = new SaveAction(new HandballModel());\n        assertNotEquals(saveAction1, saveAction2);\n    }\n\n    @Test\n    void testGetSaveActionNullAfterClose() {\n        Main.getCloseAction().actionPerformed(null);\n        assertNull(Main.getSaveAction());\n    }\n\n    @Test\n    void testGetSaveActionNotNullAfterCloseAndOpen() {\n        Main.getCloseAction().actionPerformed(null);\n        Main.getOpenAction().actionPerformed(null);\n        assertNotNull(Main.getSaveAction());\n    }\n\n    @Test\n    void testGetSaveActionSameInstanceAfterCloseAndOpen() {\n        Main.getCloseAction().actionPerformed(null);\n        Main.getOpenAction().actionPerformed(null);\n        SaveAction saveAction1 = Main.getSaveAction();\n        SaveAction saveAction2 = Main.getSaveAction();\n        assertSame(saveAction1, saveAction2);\n    }\n\n    @Test\n    void testGetSaveActionEqualsAfterCloseAndOpen() {\n        Main.getCloseAction().actionPerformed(null);\n        Main.getOpenAction().actionPerformed(null);\n        SaveAction saveAction1 = Main.getSaveAction();\n        SaveAction saveAction2 = new SaveAction(new HandballModel());\n        assertEquals(saveAction1, saveAction2);\n    }\n}\n```\n",
        "applied_heuristics": "H2;H7"
    },
    {
        "id": "chatcmpl-A5V1TrNsgWL47YfMH2JwzrztUiJOm",
        "object": "chat.completion",
        "created": 1725874255,
        "model": "gpt-3.5-turbo-0125",
        "choices": [
            {
                "index": 0,
                "message": {
                    "role": "assistant",
                    "content": "// Main_7Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getCloseAction()} method.\n*/\nclass Main_7Test {\n}",
                    "refusal": null
                },
                "logprobs": null,
                "finish_reason": "stop",
                "text": "// Main_7Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getCloseAction()} method.\n*/\nclass Main_7Test {\n}"
            }
        ],
        "usage": {
            "prompt_tokens": 3783,
            "completion_tokens": 434,
            "total_tokens": 4217
        },
        "system_fingerprint": null,
        "time_taken": 5.337824583053589,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_7Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00c3\u00bcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00c3\u00a4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00c3\u00bcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\u00ef\u00bf\u00bden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_7Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getCloseAction()} method.\n*/\nclass Main_7Test {",
        "original_generated_code": "```java\npackage visu.handball.moves;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n * Test class of {@link Main}.\n * It contains ten unit test cases for the {@link Main#getCloseAction()} method.\n */\nclass Main_7Test {\n\n    @Test\n    void testGetCloseActionNotNull() {\n        assertNotNull(Main.getCloseAction());\n    }\n\n    @Test\n    void testGetCloseActionSameInstance() {\n        CloseAction closeAction1 = Main.getCloseAction();\n        CloseAction closeAction2 = Main.getCloseAction();\n        assertSame(closeAction1, closeAction2);\n    }\n\n    @Test\n    void testGetCloseActionNotSameInstance() {\n        CloseAction closeAction1 = Main.getCloseAction();\n        CloseAction closeAction2 = new CloseAction(new HandballModel());\n        assertNotSame(closeAction1, closeAction2);\n    }\n\n    @Test\n    void testGetCloseActionType() {\n        assertTrue(Main.getCloseAction() instanceof CloseAction);\n    }\n\n    @Test\n    void testGetCloseActionEquality() {\n        CloseAction closeAction1 = Main.getCloseAction();\n        CloseAction closeAction2 = new CloseAction(new HandballModel());\n        assertEquals(closeAction1, closeAction2);\n    }\n\n    @Test\n    void testGetCloseActionNotEqual() {\n        CloseAction closeAction1 = Main.getCloseAction();\n        CloseAction closeAction2 = new CloseAction(new HandballModel());\n        assertNotEquals(closeAction1, closeAction2);\n    }\n\n    @Test\n    void testGetCloseActionHashCode() {\n        CloseAction closeAction1 = Main.getCloseAction();\n        CloseAction closeAction2 = new CloseAction(new HandballModel());\n        assertEquals(closeAction1.hashCode(), closeAction2.hashCode());\n    }\n\n    @Test\n    void testGetCloseActionToString() {\n        assertNotNull(Main.getCloseAction().toString());\n    }\n\n    @Test\n    void testGetCloseActionInvokeAction() {\n        assertDoesNotThrow(() -> Main.getCloseAction().actionPerformed(null));\n    }\n}\n```\n",
        "applied_heuristics": "H2;H7"
    },
    {
        "id": "chatcmpl-A5V2WuzwlzUPnWwk0HejflK3rjeHm",
        "object": "chat.completion",
        "created": 1725874320,
        "model": "gpt-3.5-turbo-0125",
        "choices": [
            {
                "index": 0,
                "message": {
                    "role": "assistant",
                    "content": "// Main_8Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#deepCopy(Object)} method.\n*/\nclass Main_8Test {\n}",
                    "refusal": null
                },
                "logprobs": null,
                "finish_reason": "stop",
                "text": "// Main_8Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#deepCopy(Object)} method.\n*/\nclass Main_8Test {\n}"
            }
        ],
        "usage": {
            "prompt_tokens": 3784,
            "completion_tokens": 529,
            "total_tokens": 4313
        },
        "system_fingerprint": null,
        "time_taken": 7.875162839889526,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_8Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00c3\u00bcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00c3\u00a4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00c3\u00bcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\u00ef\u00bf\u00bden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_8Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#deepCopy(Object)} method.\n*/\nclass Main_8Test {",
        "original_generated_code": "```java\nimport static org.junit.jupiter.api.Assertions.*;\n\nclass Main_8Test {\n\n    @Test\n    void testDeepCopy_NullObject_ReturnsNull() {\n        assertNull(Main.deepCopy(null));\n    }\n\n    @Test\n    void testDeepCopy_WithSerializableObject_ReturnsDeepCopy() {\n        HandballModel original = new HandballModel();\n        try {\n            HandballModel copy = (HandballModel) Main.deepCopy(original);\n            assertNotSame(original, copy);\n            assertEquals(original.getClass(), copy.getClass());\n        } catch (Exception e) {\n            fail(\"Exception thrown during deep copy: \" + e.getMessage());\n        }\n    }\n\n    @Test\n    void testDeepCopy_NonSerializableObject_ThrowsException() {\n        Object nonSerializable = new Object();\n        assertThrows(Exception.class, () -> Main.deepCopy(nonSerializable));\n    }\n\n    @Test\n    void testDeepCopy_SameReferenceObject_ReturnsSameObject() {\n        HandballModel original = new HandballModel();\n        try {\n            HandballModel copy = (HandballModel) Main.deepCopy(original);\n            assertNotSame(original, copy);\n            assertEquals(original.getClass(), copy.getClass());\n        } catch (Exception e) {\n            fail(\"Exception thrown during deep copy: \" + e.getMessage());\n        }\n    }\n\n    @Test\n    void testDeepCopy_WithDifferentClassObject_ThrowsException() {\n        ColorModel colorModel = new ColorModel();\n        assertThrows(Exception.class, () -> Main.deepCopy(colorModel));\n    }\n\n    @Test\n    void testDeepCopy_WithNullObject_ThrowsException() {\n        assertThrows(Exception.class, () -> Main.deepCopy(null));\n    }\n\n    @Test\n    void testDeepCopy_WithValidObject_ReturnsDeepCopy() {\n        HandballModel original = new HandballModel();\n        try {\n            HandballModel copy = (HandballModel) Main.deepCopy(original);\n            assertNotSame(original, copy);\n            assertEquals(original.getClass(), copy.getClass());\n        } catch (Exception e) {\n            fail(\"Exception thrown during deep copy: \" + e.getMessage());\n        }\n    }\n\n    @Test\n    void testDeepCopy_WithDifferentInstanceObject_ReturnsDeepCopy() {\n        HandballModel original = new HandballModel();\n        try {\n            HandballModel copy = (HandballModel) Main.deepCopy(original);\n            assertNotSame(original, copy);\n            assertEquals(original.getClass(), copy.getClass());\n        } catch (Exception e) {\n            fail(\"Exception thrown during deep copy: \" + e.getMessage());\n        }\n    }\n}\n```",
        "applied_heuristics": "H2;H7"
    },
    {
        "id": "chatcmpl-A5V3ZhByL2Xs02HHg8gT6AHLqTrBY",
        "object": "chat.completion",
        "created": 1725874385,
        "model": "gpt-3.5-turbo-0125",
        "choices": [
            {
                "index": 0,
                "message": {
                    "role": "assistant",
                    "content": "java\npackage visu.handball.moves;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n * Test class of {@link Main}.\n * It contains ten unit test cases for the {@link Main#getVersion()} method.\n */\nclass Main_9Test {\n\n    @Test\n    void testGetVersion_WhenCalled_ReturnsVersionString() {\n        // Arrange\n        String expectedVersion = \"1.0.5\";\n\n        // Act\n        String actualVersion = Main.getVersion();\n\n        // Assert\n        assertEquals(expectedVersion, actualVersion);\n    }\n\n    @Test\n    void testGetVersion_WhenCalledTwice_ReturnsSameVersionString() {\n        // Arrange\n        String version1 = Main.getVersion();\n\n        // Act\n        String version2 = Main.getVersion();\n\n        // Assert\n        assertSame(version1, version2);\n    }\n\n    @Test\n    void testGetVersion_WhenVersionIsNotEmpty_ReturnsNonEmptyString() {\n        // Act\n        String version = Main.getVersion();\n\n        // Assert\n        assertFalse(version.isEmpty());\n    }\n\n    @Test\n    void testGetVersion_WhenVersionIsNotNull_ReturnsNonNullString() {\n        // Act\n        String version = Main.getVersion();\n\n        // Assert\n        assertNotNull(version);\n    }\n\n    @Test\n    void testGetVersion_WhenVersionHasCorrectFormat_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        String[] versionParts = version.split(\"\\\\.\");\n\n        // Assert\n        assertEquals(3, versionParts.length);\n        for (String part : versionParts) {\n            assertTrue(part.matches(\"\\\\d+\"));\n        }\n    }\n\n    @Test\n    void testGetVersion_WhenVersionIsCorrectLength_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        int versionLength = version.length();\n\n        // Assert\n        assertEquals(5, versionLength);\n    }\n\n    @Test\n    void testGetVersion_WhenVersionContainsOnlyDigitsAndDots_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        boolean isValid = version.matches(\"[\\\\d.]+\");\n\n        // Assert\n        assertTrue(isValid);\n    }\n\n    @Test\n    void testGetVersion_WhenVersionStartsWithDigit_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        char firstChar = version.charAt(0);\n\n        // Assert\n        assertTrue(Character.isDigit(firstChar));\n    }\n\n    @Test\n    void testGetVersion_WhenVersionEndsWithDigit_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        char lastChar = version.charAt(version.length() - 1);\n\n        // Assert\n        assertTrue(Character.isDigit(lastChar));\n    }\n\n    @Test\n    void testGetVersion_WhenVersionHasCorrectDelimiter_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        boolean hasCorrectDelimiter = version.contains(\".\");\n\n        // Assert\n        assertTrue(hasCorrectDelimiter);\n    }\n}\n",
                    "refusal": null
                },
                "logprobs": null,
                "finish_reason": "stop",
                "text": "java\npackage visu.handball.moves;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n * Test class of {@link Main}.\n * It contains ten unit test cases for the {@link Main#getVersion()} method.\n */\nclass Main_9Test {\n\n    @Test\n    void testGetVersion_WhenCalled_ReturnsVersionString() {\n        // Arrange\n        String expectedVersion = \"1.0.5\";\n\n        // Act\n        String actualVersion = Main.getVersion();\n\n        // Assert\n        assertEquals(expectedVersion, actualVersion);\n    }\n\n    @Test\n    void testGetVersion_WhenCalledTwice_ReturnsSameVersionString() {\n        // Arrange\n        String version1 = Main.getVersion();\n\n        // Act\n        String version2 = Main.getVersion();\n\n        // Assert\n        assertSame(version1, version2);\n    }\n\n    @Test\n    void testGetVersion_WhenVersionIsNotEmpty_ReturnsNonEmptyString() {\n        // Act\n        String version = Main.getVersion();\n\n        // Assert\n        assertFalse(version.isEmpty());\n    }\n\n    @Test\n    void testGetVersion_WhenVersionIsNotNull_ReturnsNonNullString() {\n        // Act\n        String version = Main.getVersion();\n\n        // Assert\n        assertNotNull(version);\n    }\n\n    @Test\n    void testGetVersion_WhenVersionHasCorrectFormat_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        String[] versionParts = version.split(\"\\\\.\");\n\n        // Assert\n        assertEquals(3, versionParts.length);\n        for (String part : versionParts) {\n            assertTrue(part.matches(\"\\\\d+\"));\n        }\n    }\n\n    @Test\n    void testGetVersion_WhenVersionIsCorrectLength_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        int versionLength = version.length();\n\n        // Assert\n        assertEquals(5, versionLength);\n    }\n\n    @Test\n    void testGetVersion_WhenVersionContainsOnlyDigitsAndDots_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        boolean isValid = version.matches(\"[\\\\d.]+\");\n\n        // Assert\n        assertTrue(isValid);\n    }\n\n    @Test\n    void testGetVersion_WhenVersionStartsWithDigit_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        char firstChar = version.charAt(0);\n\n        // Assert\n        assertTrue(Character.isDigit(firstChar));\n    }\n\n    @Test\n    void testGetVersion_WhenVersionEndsWithDigit_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        char lastChar = version.charAt(version.length() - 1);\n\n        // Assert\n        assertTrue(Character.isDigit(lastChar));\n    }\n\n    @Test\n    void testGetVersion_WhenVersionHasCorrectDelimiter_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        boolean hasCorrectDelimiter = version.contains(\".\");\n\n        // Assert\n        assertTrue(hasCorrectDelimiter);\n    }\n}\n"
            }
        ],
        "usage": {
            "prompt_tokens": 3782,
            "completion_tokens": 655,
            "total_tokens": 4437
        },
        "system_fingerprint": null,
        "time_taken": 10.208789587020874,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_9Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00c3\u00bcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00c3\u00a4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00c3\u00bcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00c3\u00bcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00c3\u00a4ge f\u00c3\u00bcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\u00ef\u00bf\u00bden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_9Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getVersion()} method.\n*/\nclass Main_9Test {",
        "original_generated_code": "```java\npackage visu.handball.moves;\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n * Test class of {@link Main}.\n * It contains ten unit test cases for the {@link Main#getVersion()} method.\n */\nclass Main_9Test {\n\n    @Test\n    void testGetVersion_WhenCalled_ReturnsVersionString() {\n        // Arrange\n        String expectedVersion = \"1.0.5\";\n\n        // Act\n        String actualVersion = Main.getVersion();\n\n        // Assert\n        assertEquals(expectedVersion, actualVersion);\n    }\n\n    @Test\n    void testGetVersion_WhenCalledTwice_ReturnsSameVersionString() {\n        // Arrange\n        String version1 = Main.getVersion();\n\n        // Act\n        String version2 = Main.getVersion();\n\n        // Assert\n        assertSame(version1, version2);\n    }\n\n    @Test\n    void testGetVersion_WhenVersionIsNotEmpty_ReturnsNonEmptyString() {\n        // Act\n        String version = Main.getVersion();\n\n        // Assert\n        assertFalse(version.isEmpty());\n    }\n\n    @Test\n    void testGetVersion_WhenVersionIsNotNull_ReturnsNonNullString() {\n        // Act\n        String version = Main.getVersion();\n\n        // Assert\n        assertNotNull(version);\n    }\n\n    @Test\n    void testGetVersion_WhenVersionHasCorrectFormat_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        String[] versionParts = version.split(\"\\\\.\");\n\n        // Assert\n        assertEquals(3, versionParts.length);\n        for (String part : versionParts) {\n            assertTrue(part.matches(\"\\\\d+\"));\n        }\n    }\n\n    @Test\n    void testGetVersion_WhenVersionIsCorrectLength_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        int versionLength = version.length();\n\n        // Assert\n        assertEquals(5, versionLength);\n    }\n\n    @Test\n    void testGetVersion_WhenVersionContainsOnlyDigitsAndDots_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        boolean isValid = version.matches(\"[\\\\d.]+\");\n\n        // Assert\n        assertTrue(isValid);\n    }\n\n    @Test\n    void testGetVersion_WhenVersionStartsWithDigit_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        char firstChar = version.charAt(0);\n\n        // Assert\n        assertTrue(Character.isDigit(firstChar));\n    }\n\n    @Test\n    void testGetVersion_WhenVersionEndsWithDigit_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        char lastChar = version.charAt(version.length() - 1);\n\n        // Assert\n        assertTrue(Character.isDigit(lastChar));\n    }\n\n    @Test\n    void testGetVersion_WhenVersionHasCorrectDelimiter_ReturnsValidVersionString() {\n        // Arrange\n        String version = Main.getVersion();\n\n        // Act\n        boolean hasCorrectDelimiter = version.contains(\".\");\n\n        // Assert\n        assertTrue(hasCorrectDelimiter);\n    }\n}\n```\n```",
        "applied_heuristics": "H2"
    }
]