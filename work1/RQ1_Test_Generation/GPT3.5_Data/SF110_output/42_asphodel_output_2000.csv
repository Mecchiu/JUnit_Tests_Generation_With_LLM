ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
chatcmpl-A5UdUjoD5yoiN4R3G8yHFssO71TLH,/EvoSuiteBenchmark/original/42_asphodel/src/main/java/org/asphodel/parser/HtmlContentParser_0Test.java,2.7186279296875,stop,"// HtmlContentParser.java
package org.asphodel.parser;

import au.id.jericho.lib.html.Source;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;

/**
 * @author : sunwj
 * @since 0.1
 *        Date: Mar 31, 2007
 *        Time: 10:03:07 PM
 *        <p/>
 *        html content parser using Jericho
 * todo does it need to devided into 2 different implementation?
 */
public class HtmlContentParser implements StringContentParser, StreamContentParser {

    private static Log log = LogFactory.getLog(HtmlContentParser.class);

    /**
     * @param textContent content as a text format,the real format of the content can be xml,html,xhtml....
     * @return plain text without extra tags or elements
     */
    public String extractPlainText(String textContent) throws ContentParserException {
        Source contentSource = new Source(textContent);
        return contentSource.extractText();
    }

    /**
     */
    public String extractText(Reader reader) throws ContentParserException {
        try {
            Source contentSource = new Source(reader);
            return contentSource.extractText();
        } catch (IOException e) {
            log.error(""when parsing from reader,"", e);
            throw new ContentParserException(e);
        }
    }

    public String extractText(InputStream inputStream) throws ContentParserException {
        try {
            Source contentSource = new Source(inputStream);
            return contentSource.extractText();
        } catch (IOException e) {
            log.error(""when parsing from inputStrem"", e);
            throw new ContentParserException(e);
        }
    }

    public String extractText(URL url) throws ContentParserException {
        try {
            Source contentSource = new Source(url);
            return contentSource.extractText();
        } catch (IOException e) {
            log.error(""when parsing from url"", e);
            throw new ContentParserException(e);
        }
    }
}
","// HtmlContentParser_0Test.java
package org.asphodel.parser;

import au.id.jericho.lib.html.Source;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import java.io.IOException;
import java.io.InputStream;
import java.io.Reader;
import java.net.URL;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link HtmlContentParser}.
* It contains ten unit test cases for the {@link HtmlContentParser#extractPlainText(String)} method.
*/
class HtmlContentParser_0Test {","```java
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class HtmlContentParser_0Test {

    @Test
    void testExtractPlainText() {
        // Test cases for HtmlContentParser.extractPlainText(String)
        HtmlContentParser parser = new HtmlContentParser();

        // Test case 1
        String input1 = ""<html><body><h1>Hello World!</h1></body></html>"";
        String expectedOutput1 = ""Hello World!"";
        assertEquals(expectedOutput1, parser.extractPlainText(input1));

        // Test case 2
        String input2 = ""<p>This is a paragraph.</p>"";
        String expectedOutput2 = ""This is a paragraph."";
        assertEquals(expectedOutput2, parser.extractPlainText(input2));

        // Add more test cases as needed
    }
}
```"
