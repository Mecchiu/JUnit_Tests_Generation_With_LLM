[
  {
    "numberTests": "ten",
    "original_code": "// SBMLFilter.java\npackage sbmlreader2;\n\n/*\n Copyright (c) 2006, 2007, The Cytoscape Consortium (www.cytoscape.org)\n\n The Cytoscape Consortium is:\n - Institute for Systems Biology\n - University of California San Diego\n - Memorial Sloan-Kettering Cancer Center\n - Institut Pasteur\n - Agilent Technologies\n\n This library is free software; you can redistribute it and/or modify it\n under the terms of the GNU Lesser General Public License as published\n by the Free Software Foundation; either version 2.1 of the License, or\n any later version.\n\n This library is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF\n MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  The software and\n documentation provided hereunder is on an \"as is\" basis, and the\n Institute for Systems Biology and the Whitehead Institute\n have no obligations to provide maintenance, support,\n updates, enhancements or modifications.  In no event shall the\n Institute for Systems Biology and the Whitehead Institute\n be liable to any party for direct, indirect, special,\n incidental or consequential damages, including lost profits, arising\n out of the use of this software and its documentation, even if the\n Institute for Systems Biology and the Whitehead Institute\n have been advised of the possibility of such damage.  See\n the GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with this library; if not, write to the Free Software Foundation,\n Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\n*/\nimport cytoscape.data.ImportHandler;\nimport cytoscape.data.readers.GraphReader;\nimport cytoscape.util.CyFileFilter;\nimport java.io.File;\nimport java.io.IOException;\n\n//import java.util.Properties;\n/**\n * SBMLReader extends CyFileFilter for integration into the Cytoscape ImportHandler\n * framework.\n */\npublic class SBMLFilter extends CyFileFilter {\n\n    /**\n     * XGMML Files are Graphs.\n     */\n    private static String fileNature \u003d ImportHandler.GRAPH_NATURE;\n\n    /**\n     * File Extensions.\n     */\n    private static String[] fileExtensions \u003d { \"xml\", \"sbml\" };\n\n    /**\n     * Filter Description.\n     */\n    private static String description \u003d \"SBML files\";\n\n    /**\n     * Constructor.\n     */\n    public SBMLFilter() {\n        super(fileExtensions, description, fileNature);\n    }\n\n    /**\n     * Indicates which files the SBMLFilter accepts.\n     * \u003cp/\u003e\n     * This method will return true only if:\n     * \u003cUL\u003e\n     * \u003cLI\u003eFile ends in .xml or .sbml;  and\n     * \u003cLI\u003eFile headers includes the www.sbml.org namespace declaration.\n     * \u003c/UL\u003e\n     *\n     * @param file File\n     * @return true or false.\n     */\n    public boolean accept(File file) {\n        String fileName \u003d file.getName();\n        boolean firstPass \u003d false;\n        //  First test:  file must end with one of the registered file extensions.\n        for (int i \u003d 0; i \u003c fileExtensions.length; i++) {\n            if (fileName.endsWith(fileExtensions[i])) {\n                firstPass \u003d true;\n            }\n        }\n        if (firstPass) {\n            //  Second test:  file header must contain the biopax declaration\n            try {\n                String header \u003d getHeader(file);\n                if (header.indexOf(\"www.sbml.org\") \u003e 0) {\n                    return true;\n                }\n            } catch (IOException e) {\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Gets the appropirate GraphReader object.\n     * If the libsbml is not available use the old sbml library.\n     *\n     * @author Matthias Koenig\n     * @param fileName File Name.\n     * @return GraphReader Object.\n     */\n    public GraphReader getReader(String fileName) {\n        System.out.println(\"Getting SBML reader ...\");\n        try {\n            // Test if libsbml library is available\n            System.loadLibrary(\"sbmlj\");\n            /* Extra check to be sure we have access to libSBML: */\n            Class.forName(\"org.sbml.libsbml.libsbml\");\n            // Use the libSBML based parser\n            System.out.println(\"... using \u0027libsbml parser\u0027\");\n            return new SBMLGraphReader2(fileName);\n        } catch (Exception e) {\n            // If any error occurs use the classic SBML Reader\n            return new SBMLGraphReader(fileName);\n        }\n    }\n}\n",
    "package": "sbmlreader2",
    "classname": "SBMLFilter",
    "id": "/EvoSuiteBenchmark/original/34_sbmlreader2/src/main/java/sbmlreader2/SBMLFilter_0Test.java",
    "test_prompt": "// SBMLFilter_0Test.java\npackage sbmlreader2;\n\n/*\n Copyright (c) 2006, 2007, The Cytoscape Consortium (www.cytoscape.org)\n\n The Cytoscape Consortium is:\n - Institute for Systems Biology\n - University of California San Diego\n - Memorial Sloan-Kettering Cancer Center\n - Institut Pasteur\n - Agilent Technologies\n\n This library is free software; you can redistribute it and/or modify it\n under the terms of the GNU Lesser General Public License as published\n by the Free Software Foundation; either version 2.1 of the License, or\n any later version.\n\n This library is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF\n MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  The software and\n documentation provided hereunder is on an \"as is\" basis, and the\n Institute for Systems Biology and the Whitehead Institute\n have no obligations to provide maintenance, support,\n updates, enhancements or modifications.  In no event shall the\n Institute for Systems Biology and the Whitehead Institute\n be liable to any party for direct, indirect, special,\n incidental or consequential damages, including lost profits, arising\n out of the use of this software and its documentation, even if the\n Institute for Systems Biology and the Whitehead Institute\n have been advised of the possibility of such damage.  See\n the GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with this library; if not, write to the Free Software Foundation,\n Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\n*/\nimport cytoscape.data.ImportHandler;\nimport cytoscape.data.readers.GraphReader;\nimport cytoscape.util.CyFileFilter;\nimport java.io.File;\nimport java.io.IOException;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link SBMLFilter}.\n* It contains ten unit test cases for the {@link SBMLFilter#accept(File)} method.\n*/\nclass SBMLFilter_0Test {",
    "method_signature": "accept(File)",
    "suffix": "0"
  },
  {
    "numberTests": "ten",
    "original_code": "// SBMLFilter.java\npackage sbmlreader2;\n\n/*\n Copyright (c) 2006, 2007, The Cytoscape Consortium (www.cytoscape.org)\n\n The Cytoscape Consortium is:\n - Institute for Systems Biology\n - University of California San Diego\n - Memorial Sloan-Kettering Cancer Center\n - Institut Pasteur\n - Agilent Technologies\n\n This library is free software; you can redistribute it and/or modify it\n under the terms of the GNU Lesser General Public License as published\n by the Free Software Foundation; either version 2.1 of the License, or\n any later version.\n\n This library is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF\n MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  The software and\n documentation provided hereunder is on an \"as is\" basis, and the\n Institute for Systems Biology and the Whitehead Institute\n have no obligations to provide maintenance, support,\n updates, enhancements or modifications.  In no event shall the\n Institute for Systems Biology and the Whitehead Institute\n be liable to any party for direct, indirect, special,\n incidental or consequential damages, including lost profits, arising\n out of the use of this software and its documentation, even if the\n Institute for Systems Biology and the Whitehead Institute\n have been advised of the possibility of such damage.  See\n the GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with this library; if not, write to the Free Software Foundation,\n Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\n*/\nimport cytoscape.data.ImportHandler;\nimport cytoscape.data.readers.GraphReader;\nimport cytoscape.util.CyFileFilter;\nimport java.io.File;\nimport java.io.IOException;\n\n//import java.util.Properties;\n/**\n * SBMLReader extends CyFileFilter for integration into the Cytoscape ImportHandler\n * framework.\n */\npublic class SBMLFilter extends CyFileFilter {\n\n    /**\n     * XGMML Files are Graphs.\n     */\n    private static String fileNature \u003d ImportHandler.GRAPH_NATURE;\n\n    /**\n     * File Extensions.\n     */\n    private static String[] fileExtensions \u003d { \"xml\", \"sbml\" };\n\n    /**\n     * Filter Description.\n     */\n    private static String description \u003d \"SBML files\";\n\n    /**\n     * Constructor.\n     */\n    public SBMLFilter() {\n        super(fileExtensions, description, fileNature);\n    }\n\n    /**\n     * Indicates which files the SBMLFilter accepts.\n     * \u003cp/\u003e\n     * This method will return true only if:\n     * \u003cUL\u003e\n     * \u003cLI\u003eFile ends in .xml or .sbml;  and\n     * \u003cLI\u003eFile headers includes the www.sbml.org namespace declaration.\n     * \u003c/UL\u003e\n     *\n     * @param file File\n     * @return true or false.\n     */\n    public boolean accept(File file) {\n        String fileName \u003d file.getName();\n        boolean firstPass \u003d false;\n        //  First test:  file must end with one of the registered file extensions.\n        for (int i \u003d 0; i \u003c fileExtensions.length; i++) {\n            if (fileName.endsWith(fileExtensions[i])) {\n                firstPass \u003d true;\n            }\n        }\n        if (firstPass) {\n            //  Second test:  file header must contain the biopax declaration\n            try {\n                String header \u003d getHeader(file);\n                if (header.indexOf(\"www.sbml.org\") \u003e 0) {\n                    return true;\n                }\n            } catch (IOException e) {\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Gets the appropirate GraphReader object.\n     * If the libsbml is not available use the old sbml library.\n     *\n     * @author Matthias Koenig\n     * @param fileName File Name.\n     * @return GraphReader Object.\n     */\n    public GraphReader getReader(String fileName) {\n        System.out.println(\"Getting SBML reader ...\");\n        try {\n            // Test if libsbml library is available\n            System.loadLibrary(\"sbmlj\");\n            /* Extra check to be sure we have access to libSBML: */\n            Class.forName(\"org.sbml.libsbml.libsbml\");\n            // Use the libSBML based parser\n            System.out.println(\"... using \u0027libsbml parser\u0027\");\n            return new SBMLGraphReader2(fileName);\n        } catch (Exception e) {\n            // If any error occurs use the classic SBML Reader\n            return new SBMLGraphReader(fileName);\n        }\n    }\n}\n",
    "package": "sbmlreader2",
    "classname": "SBMLFilter",
    "id": "/EvoSuiteBenchmark/original/34_sbmlreader2/src/main/java/sbmlreader2/SBMLFilter_1Test.java",
    "test_prompt": "// SBMLFilter_1Test.java\npackage sbmlreader2;\n\n/*\n Copyright (c) 2006, 2007, The Cytoscape Consortium (www.cytoscape.org)\n\n The Cytoscape Consortium is:\n - Institute for Systems Biology\n - University of California San Diego\n - Memorial Sloan-Kettering Cancer Center\n - Institut Pasteur\n - Agilent Technologies\n\n This library is free software; you can redistribute it and/or modify it\n under the terms of the GNU Lesser General Public License as published\n by the Free Software Foundation; either version 2.1 of the License, or\n any later version.\n\n This library is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF\n MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  The software and\n documentation provided hereunder is on an \"as is\" basis, and the\n Institute for Systems Biology and the Whitehead Institute\n have no obligations to provide maintenance, support,\n updates, enhancements or modifications.  In no event shall the\n Institute for Systems Biology and the Whitehead Institute\n be liable to any party for direct, indirect, special,\n incidental or consequential damages, including lost profits, arising\n out of the use of this software and its documentation, even if the\n Institute for Systems Biology and the Whitehead Institute\n have been advised of the possibility of such damage.  See\n the GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with this library; if not, write to the Free Software Foundation,\n Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\n*/\nimport cytoscape.data.ImportHandler;\nimport cytoscape.data.readers.GraphReader;\nimport cytoscape.util.CyFileFilter;\nimport java.io.File;\nimport java.io.IOException;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link SBMLFilter}.\n* It contains ten unit test cases for the {@link SBMLFilter#getReader(String)} method.\n*/\nclass SBMLFilter_1Test {",
    "method_signature": "getReader(String)",
    "suffix": "1"
  },
  {
    "numberTests": "ten",
    "original_code": "// SBMLVisualStyleFactory.java\npackage sbmlreader2;\n\n/*\n Copyright (c) 2006, 2007, The Cytoscape Consortium (www.cytoscape.org)\n\n The Cytoscape Consortium is:\n - Institute for Systems Biology\n - University of California San Diego\n - Memorial Sloan-Kettering Cancer Center\n - Institut Pasteur\n - Agilent Technologies\n\n This library is free software; you can redistribute it and/or modify it\n under the terms of the GNU Lesser General Public License as published\n by the Free Software Foundation; either version 2.1 of the License, or\n any later version.\n\n This library is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF\n MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  The software and\n documentation provided hereunder is on an \"as is\" basis, and the\n Institute for Systems Biology and the Whitehead Institute\n have no obligations to provide maintenance, support,\n updates, enhancements or modifications.  In no event shall the\n Institute for Systems Biology and the Whitehead Institute\n be liable to any party for direct, indirect, special,\n incidental or consequential damages, including lost profits, arising\n out of the use of this software and its documentation, even if the\n Institute for Systems Biology and the Whitehead Institute\n have been advised of the possibility of such damage.  See\n the GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with this library; if not, write to the Free Software Foundation,\n Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\n*/\nimport cytoscape.*;\nimport cytoscape.visual.*;\nimport cytoscape.visual.calculators.*;\nimport cytoscape.visual.mappings.*;\nimport java.awt.Color;\n\n/**\n * VisualStyleFactory.java\n * This class defines the visualstyle in Cytoscape for the SBMLReader plugin.\n *\n * @author W.P.A. Ligtenberg, Eindhoven University of Technology\n */\npublic class SBMLVisualStyleFactory {\n\n    /**\n     */\n    public static final String SBMLReader_VS \u003d \"SBMLReader Style\";\n\n    /**\n     */\n    public static final String NODE_TYPE_ATT \u003d \"sbml type\";\n\n    /**\n     */\n    public static final String EDGE_TYPE_ATT \u003d \"interaction\";\n\n    /**\n     *  DOCUMENT ME!\n     *\n     * @param network DOCUMENT ME!\n     *\n     * @return  DOCUMENT ME!\n     */\n    public static VisualStyle createVisualStyle(CyNetwork network) {\n        VisualMappingManager vmManager \u003d Cytoscape.getVisualMappingManager();\n        NodeAppearanceCalculator nodeAppCalc \u003d new NodeAppearanceCalculator();\n        EdgeAppearanceCalculator edgeAppCalc \u003d new EdgeAppearanceCalculator();\n        CalculatorCatalog calculatorCatalog \u003d vmManager.getCalculatorCatalog();\n        // ------------------------------ Set node shapes ---------------------------//\n        DiscreteMapping disMapping \u003d new DiscreteMapping(NodeShape.RECT, ObjectMapping.NODE_MAPPING);\n        disMapping.setControllingAttributeName(NODE_TYPE_ATT, network, false);\n        disMapping.putMapValue(\"species\", NodeShape.DIAMOND);\n        disMapping.putMapValue(\"reaction\", NodeShape.ELLIPSE);\n        Calculator shapeCalculator \u003d new BasicCalculator(\"SBMLReader Shape Calculator\", disMapping, VisualPropertyType.NODE_SHAPE);\n        nodeAppCalc.setCalculator(shapeCalculator);\n        // ------------------------------ Set the label ------------------------------//\n        // Display the value for geneName as a label\n        String cName \u003d \"sbml name\";\n        Calculator nlc \u003d calculatorCatalog.getCalculator(VisualPropertyType.NODE_LABEL, cName);\n        if (nlc \u003d\u003d null) {\n            PassThroughMapping m \u003d new PassThroughMapping(new String(), cName);\n            nlc \u003d new BasicCalculator(cName, m, VisualPropertyType.NODE_LABEL);\n        }\n        nodeAppCalc.setCalculator(nlc);\n        //--------------------- Set the size of the nodes --------------------------//\n        //Discrete mapping on nodeType\n        Double speciesNodeSize \u003d new Double(30);\n        Double reactionNodeSize \u003d new Double(30);\n        DiscreteMapping sizeMapping \u003d new DiscreteMapping(reactionNodeSize, ObjectMapping.NODE_MAPPING);\n        sizeMapping.setControllingAttributeName(NODE_TYPE_ATT, network, false);\n        sizeMapping.putMapValue(\"species\", speciesNodeSize);\n        sizeMapping.putMapValue(\"reaction\", reactionNodeSize);\n        Calculator sizeCalculator \u003d new BasicCalculator(\"SBMLReader Size Calculator\", sizeMapping, VisualPropertyType.NODE_SIZE);\n        nodeAppCalc.setCalculator(sizeCalculator);\n        nodeAppCalc.setNodeSizeLocked(true);\n        // ------------------------------ Set edge arrow shape ---------------------------//\n        DiscreteMapping arrowMapping \u003d new DiscreteMapping(ArrowShape.DELTA, ObjectMapping.NODE_MAPPING);\n        arrowMapping.setControllingAttributeName(EDGE_TYPE_ATT, network, false);\n        arrowMapping.putMapValue(\"reaction-product\", ArrowShape.ARROW);\n        arrowMapping.putMapValue(\"reaction-reactant\", ArrowShape.NONE);\n        arrowMapping.putMapValue(\"reaction-modifier\", ArrowShape.CIRCLE);\n        Calculator edgeArrowCalculator \u003d new BasicCalculator(\"SBMLReader Edge Arrow Calculator\", arrowMapping, VisualPropertyType.EDGE_SRCARROW_SHAPE);\n        edgeAppCalc.setCalculator(edgeArrowCalculator);\n        // ------------------------------ Set edge colour ---------------------------//\n        DiscreteMapping edgeColorMapping \u003d new DiscreteMapping(Color.BLACK, ObjectMapping.NODE_MAPPING);\n        edgeColorMapping.setControllingAttributeName(EDGE_TYPE_ATT, network, false);\n        edgeColorMapping.putMapValue(\"reaction-product\", Color.GREEN);\n        edgeColorMapping.putMapValue(\"reaction-reactant\", Color.RED);\n        edgeColorMapping.putMapValue(\"reaction-modifier\", Color.BLACK);\n        Calculator edgeColorCalculator \u003d new BasicCalculator(\"SBMLReader Edge Color Calculator\", edgeColorMapping, VisualPropertyType.EDGE_COLOR);\n        edgeAppCalc.setCalculator(edgeColorCalculator);\n        //------------------------- Create a visual style -------------------------------//\n        GlobalAppearanceCalculator gac \u003d vmManager.getVisualStyle().getGlobalAppearanceCalculator();\n        VisualStyle visualStyle \u003d new VisualStyle(SBMLReader_VS, nodeAppCalc, edgeAppCalc, gac);\n        return visualStyle;\n    }\n}\n",
    "package": "sbmlreader2",
    "classname": "SBMLVisualStyleFactory",
    "id": "/EvoSuiteBenchmark/original/34_sbmlreader2/src/main/java/sbmlreader2/SBMLVisualStyleFactory.java",
    "test_prompt": "// SBMLVisualStyleFactoryTest.java\npackage sbmlreader2;\n\n/*\n Copyright (c) 2006, 2007, The Cytoscape Consortium (www.cytoscape.org)\n\n The Cytoscape Consortium is:\n - Institute for Systems Biology\n - University of California San Diego\n - Memorial Sloan-Kettering Cancer Center\n - Institut Pasteur\n - Agilent Technologies\n\n This library is free software; you can redistribute it and/or modify it\n under the terms of the GNU Lesser General Public License as published\n by the Free Software Foundation; either version 2.1 of the License, or\n any later version.\n\n This library is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF\n MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  The software and\n documentation provided hereunder is on an \"as is\" basis, and the\n Institute for Systems Biology and the Whitehead Institute\n have no obligations to provide maintenance, support,\n updates, enhancements or modifications.  In no event shall the\n Institute for Systems Biology and the Whitehead Institute\n be liable to any party for direct, indirect, special,\n incidental or consequential damages, including lost profits, arising\n out of the use of this software and its documentation, even if the\n Institute for Systems Biology and the Whitehead Institute\n have been advised of the possibility of such damage.  See\n the GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with this library; if not, write to the Free Software Foundation,\n Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.\n*/\nimport cytoscape.*;\nimport cytoscape.visual.*;\nimport cytoscape.visual.calculators.*;\nimport cytoscape.visual.mappings.*;\nimport java.awt.Color;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link SBMLVisualStyleFactory}.\n* It contains ten unit test cases for the {@link SBMLVisualStyleFactory#createVisualStyle(CyNetwork)} method.\n*/\nclass SBMLVisualStyleFactoryTest {",
    "method_signature": "createVisualStyle(CyNetwork)",
    "suffix": ""
  }
]