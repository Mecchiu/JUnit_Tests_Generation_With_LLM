[
  {
    "numberTests": "ten",
    "original_code": "// HTMLFilter.java\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one or more\r\n* contributor license agreements.  See the NOTICE file distributed with\r\n* this work for additional information regarding copyright ownership.\r\n* The ASF licenses this file to You under the Apache License, Version 2.0\r\n* (the \"License\"); you may not use this file except in compliance with\r\n* the License.  You may obtain a copy of the License at\r\n*\r\n*     http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n*/\r\npackage com.imsmart.servlet;\r\n\r\n/**\r\n * HTML filter utility.\r\n *\r\n * @author Craig R. McClanahan\r\n * @author Tim Tye\r\n * @version $Revision: 467217 $ $Date: 2006-10-24 05:14:34 +0200 (mar., 24 oct. 2006) $\r\n */\r\npublic final class HTMLFilter {\r\n\r\n    /**\r\n     * Filter the specified message string for characters that are sensitive\r\n     * in HTML.  This avoids potential attacks caused by including JavaScript\r\n     * codes in the request URL that is often reported in error messages.\r\n     *\r\n     * @param message The message string to be filtered\r\n     */\r\n    public static String filter(String message) {\r\n        if (message \u003d\u003d null)\r\n            return (null);\r\n        char[] content \u003d new char[message.length()];\r\n        message.getChars(0, message.length(), content, 0);\r\n        StringBuffer result \u003d new StringBuffer(content.length + 50);\r\n        for (int i \u003d 0; i \u003c content.length; i++) {\r\n            switch(content[i]) {\r\n                case \u0027\u003c\u0027:\r\n                    result.append(\"\u0026lt;\");\r\n                    break;\r\n                case \u0027\u003e\u0027:\r\n                    result.append(\"\u0026gt;\");\r\n                    break;\r\n                case \u0027\u0026\u0027:\r\n                    result.append(\"\u0026amp;\");\r\n                    break;\r\n                case \u0027\"\u0027:\r\n                    result.append(\"\u0026quot;\");\r\n                    break;\r\n                default:\r\n                    result.append(content[i]);\r\n            }\r\n        }\r\n        return (result.toString());\r\n    }\r\n}\r\n",
    "package": "com.imsmart.servlet",
    "classname": "HTMLFilter",
    "id": "/EvoSuiteBenchmark/original/11_imsmart/src/main/java/com/imsmart/servlet/HTMLFilter.java",
    "test_prompt": "// HTMLFilterTest.java\npackage com.imsmart.servlet;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HTMLFilter}.\n* It contains ten unit test cases for the {@link HTMLFilter#filter(String)} method.\n*/\nclass HTMLFilterTest {",
    "method_signature": "filter(String)",
    "suffix": ""
  }
]