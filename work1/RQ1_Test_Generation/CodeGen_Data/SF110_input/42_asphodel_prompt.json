[
  {
    "numberTests": "ten",
    "original_code": "// HtmlContentParser.java\npackage org.asphodel.parser;\r\n\r\nimport au.id.jericho.lib.html.Source;\r\nimport org.apache.commons.logging.Log;\r\nimport org.apache.commons.logging.LogFactory;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.Reader;\r\nimport java.net.URL;\r\n\r\n/**\r\n * @author : sunwj\r\n * @since 0.1\r\n *        Date: Mar 31, 2007\r\n *        Time: 10:03:07 PM\r\n *        \u003cp/\u003e\r\n *        html content parser using Jericho\r\n * todo does it need to devided into 2 different implementation?\r\n */\r\npublic class HtmlContentParser implements StringContentParser, StreamContentParser {\r\n\r\n    private static Log log \u003d LogFactory.getLog(HtmlContentParser.class);\r\n\r\n    /**\r\n     * @param textContent content as a text format,the real format of the content can be xml,html,xhtml....\r\n     * @return plain text without extra tags or elements\r\n     */\r\n    public String extractPlainText(String textContent) throws ContentParserException {\r\n        Source contentSource \u003d new Source(textContent);\r\n        return contentSource.extractText();\r\n    }\r\n\r\n    /**\r\n     */\r\n    public String extractText(Reader reader) throws ContentParserException {\r\n        try {\r\n            Source contentSource \u003d new Source(reader);\r\n            return contentSource.extractText();\r\n        } catch (IOException e) {\r\n            log.error(\"when parsing from reader,\", e);\r\n            throw new ContentParserException(e);\r\n        }\r\n    }\r\n\r\n    public String extractText(InputStream inputStream) throws ContentParserException {\r\n        try {\r\n            Source contentSource \u003d new Source(inputStream);\r\n            return contentSource.extractText();\r\n        } catch (IOException e) {\r\n            log.error(\"when parsing from inputStrem\", e);\r\n            throw new ContentParserException(e);\r\n        }\r\n    }\r\n\r\n    public String extractText(URL url) throws ContentParserException {\r\n        try {\r\n            Source contentSource \u003d new Source(url);\r\n            return contentSource.extractText();\r\n        } catch (IOException e) {\r\n            log.error(\"when parsing from url\", e);\r\n            throw new ContentParserException(e);\r\n        }\r\n    }\r\n}\r\n",
    "package": "org.asphodel.parser",
    "classname": "HtmlContentParser",
    "id": "/EvoSuiteBenchmark/original/42_asphodel/src/main/java/org/asphodel/parser/HtmlContentParser_0Test.java",
    "test_prompt": "// HtmlContentParser_0Test.java\npackage org.asphodel.parser;\n\nimport au.id.jericho.lib.html.Source;\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.Reader;\nimport java.net.URL;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link HtmlContentParser}.\n* It contains ten unit test cases for the {@link HtmlContentParser#extractPlainText(String)} method.\n*/\nclass HtmlContentParser_0Test {",
    "method_signature": "extractPlainText(String)",
    "suffix": "0"
  }
]