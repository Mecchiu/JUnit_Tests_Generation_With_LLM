ID,PROMPT_ID,DURATION,FINISH_REASON,ORIGINAL_CODE,TEST_PROMPT,GENERATED_TEST
2ff01147-87d6-4fd7-8684-ec25de510c34,/EvoSuiteBenchmark/original/39_diffi/src/main/java/de/beiri22/stringincrementor/helper/ExtBoolArray_0Test.java,27.23086643218994,stop,"// ExtBoolArray.java
/*
 * ExtBoolArray.java
 *
 * Created on 31.10.2007, 14:34:55
 *
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.beiri22.stringincrementor.helper;

/**
 * @author Rico
 */
public final class ExtBoolArray {

    /**
     * Enthaelt die Booleanwerte
     */
    private boolean[] werte;

    /**
     * erstellt ein neues ExtBoolArray mit allen Werten False.
     * @param len Anzahl der Booleanwerte
     */
    public ExtBoolArray(int len) {
        werte = new boolean[len];
    }

    /**
     * setzt den Bereich mit den Indexen a bis b auf True.
     * @param a Startindex
     * @param b Endindex
     */
    public void setTrue(int a, int b) {
        for (int i = a; i <= b; i++) {
            werte[i] = true;
        }
    }

    /**
     * prueft, ob der Bereich mit den Indexen a bis b ausschließlich False-Werte
     * enthaelt.
     * @param a Startindex
     * @param b Endindex
     * @return True - wenn alles False-Werte sind.
     */
    public boolean isFalse(int a, int b) {
        for (int i = a; i <= b; i++) {
            if (werte[i]) {
                return false;
            }
        }
        return true;
    }

    /**
     * Zahl die uebriggebliebenen False-Werte.
     * @return Anzahl der False-Werte.
     */
    public int left() {
        int result = 0;
        for (int i = 0; i < werte.length; i++) {
            if (!werte[i]) {
                result++;
            }
        }
        return result;
    }
}
","// ExtBoolArray_0Test.java
package de.beiri22.stringincrementor.helper;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ExtBoolArray}.
* It contains one unit test case for the {@link ExtBoolArray#isFalse(int, int)} method.
*/
class ExtBoolArray_0Test {","// ExtBoolArray_0Test.java
package de.beiri22.stringincrementor.helper;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ExtBoolArray}.
* It contains one unit test case for the {@link ExtBoolArray#isFalse(int, int)} method.
*/
class ExtBoolArray_0Test {

	@Test
	/**
	 * Tests the <code>isFalse()</code> method of the {@link ExtBoolArray} class.
	 */
	public void test() {
		ExtBoolArray b = new ExtBoolArray(5);
		b.setTrue(0, 2);

		assertTrue(!b.isFalse(0, 0));
		assertTrue(!b.isFalse(0, 0));
		assertTrue(!b.isFalse(0, true));
		assertTrue(!b.isFalse(1, true));
		assertTrue(!b.isFalse(1, false));

		assertTrue(b.isFalse(2, false));
		assertTrue(b.isFalse(1, 2));
		assertTrue(b.isFalse(0, 1));
		assertTrue(b.isFalse(0, false));
		assertTrue(b.isFalse(3, 1));
		assertTrue(b.isFalse(2, 0));
		assertTrue(b.isFalse(4, false));

		assertTrue(b.isFalse(5, 2));
		assertTrue(b.isFalse(5, -1));
		assertTrue(b.isFalse(4, 2));
	}
}

// ExtBoolArray_1Test.java
"
8589d350-45fb-4b19-a3fe-f33bf78456fe,/EvoSuiteBenchmark/original/39_diffi/src/main/java/de/beiri22/stringincrementor/helper/ExtBoolArray_1Test.java,55.269451379776,stop,"// ExtBoolArray.java
/*
 * ExtBoolArray.java
 *
 * Created on 31.10.2007, 14:34:55
 *
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.beiri22.stringincrementor.helper;

/**
 * @author Rico
 */
public final class ExtBoolArray {

    /**
     * Enthaelt die Booleanwerte
     */
    private boolean[] werte;

    /**
     * erstellt ein neues ExtBoolArray mit allen Werten False.
     * @param len Anzahl der Booleanwerte
     */
    public ExtBoolArray(int len) {
        werte = new boolean[len];
    }

    /**
     * setzt den Bereich mit den Indexen a bis b auf True.
     * @param a Startindex
     * @param b Endindex
     */
    public void setTrue(int a, int b) {
        for (int i = a; i <= b; i++) {
            werte[i] = true;
        }
    }

    /**
     * prueft, ob der Bereich mit den Indexen a bis b ausschließlich False-Werte
     * enthaelt.
     * @param a Startindex
     * @param b Endindex
     * @return True - wenn alles False-Werte sind.
     */
    public boolean isFalse(int a, int b) {
        for (int i = a; i <= b; i++) {
            if (werte[i]) {
                return false;
            }
        }
        return true;
    }

    /**
     * Zahl die uebriggebliebenen False-Werte.
     * @return Anzahl der False-Werte.
     */
    public int left() {
        int result = 0;
        for (int i = 0; i < werte.length; i++) {
            if (!werte[i]) {
                result++;
            }
        }
        return result;
    }
}
","// ExtBoolArray_1Test.java
package de.beiri22.stringincrementor.helper;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ExtBoolArray}.
* It contains one unit test case for the {@link ExtBoolArray#left()} method.
*/
class ExtBoolArray_1Test {","// ExtBoolArray_1Test.java
package de.beiri22.stringincrementor.helper;


import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

/**
* Test class of {@link ExtBoolArray}.
* It contains one unit test case for the {@link ExtBoolArray#left()} method.
*/
class ExtBoolArray_1Test {

	//Test Method
   @Test
   void testThatLeft_Werten_Sucherung_Zu_Ergebnis_false() {
        ExtBoolArray werte = new ExtBoolArray(5);
        werte.setTrue(0, true);
        werte.setTrue(1, false);
        werte.setTrue(2, true);
        werte.setTrue(3, false);
        try {
			assertEquals(3, ExtBoolArray.left(werte));
		} catch (AssertionError e) {
			e.printStackTrace();
			assertTrue(false);
	    }
	    werte.setTrue(4, true);
    }
   @Test
   void testThatLeft_Werten_Sucherung_Zu_Ergebnis_true() {
        ExtBoolArray werte = new ExtBoolArray(5);
        werte.setTrue(0, true);
        werte.setTrue(1, true);
        werte.setTrue(2, false);
        werte.setTrue(3, true);
        werte.setTrue(4, true);
        try {
			assertEquals(3, ExtBoolArray.left(werte));
		} catch (AssertionError e) {
			e.printStackTrace();
			assertTrue(true);
	    }
	    werte.setTrue(5, true);
    }
}// ExtBoolArray_1Test.java"
