[
    {
        "id": "cmpl-6wRTRs9lfx1xwpj7woVgyEgOvfiwW",
        "object": "text_completion",
        "created": 1679386653,
        "model": "code-davinci-002",
        "choices": [
            {
                "text": "// Main_0Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getColorModel()} method.\n*/\nclass Main_0Test {\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getColorModel()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetColorModel() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}",
                "index": 0,
                "logprobs": null,
                "finish_reason": "length"
            }
        ],
        "usage": {
            "prompt_tokens": 5758,
            "completion_tokens": 2000,
            "total_tokens": 7758
        },
        "time_taken": 69.24600052833557,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_0Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00fcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00e4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00fcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00e4ge f\u00fcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00e4ge f\u00fcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\ufffden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_0Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getColorModel()} method.\n*/\nclass Main_0Test {",
        "original_generated_code": "\n\t\t/**\n\t\t* Test case for the {@link Main#getColorModel()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetColorModel() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}\n\n// Main_1Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getColorModel()} method.\n*/\nclass Main_1Test {\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getColorModel()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetColorModel() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}\n\n// Main_2Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getColorModel()} method.\n*/\nclass Main_2Test {\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getColorModel()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetColorModel() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}\n\n// Main_3",
        "applied_heuristics": "H1"
    },
    {
        "id": "cmpl-6wRUYXdj7ELKEnC7VRQSVoK1ptm4Y",
        "object": "text_completion",
        "created": 1679386722,
        "model": "code-davinci-002",
        "choices": [
            {
                "text": "// Main_3Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getWindow()} method.\n*/\nclass Main_3Test {\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getWindow()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetWindow() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getField()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetField() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getSaveAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetSaveAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getSetNameAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetSetNameAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getCloseAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetCloseAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#createImageIcon(String, String)} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testCreateImageIcon() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getResource(String)} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetResource() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#locateOnScreenCenter(Component)} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testLocateOnScreenCenter() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#createHandballModel()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testCreateHandballModel() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getVersion()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetVersion() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}",
                "index": 0,
                "logprobs": null,
                "finish_reason": "length"
            }
        ],
        "usage": {
            "prompt_tokens": 5757,
            "completion_tokens": 2000,
            "total_tokens": 7757
        },
        "time_taken": 67.0523145198822,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_3Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00fcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00e4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00fcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00e4ge f\u00fcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00e4ge f\u00fcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\ufffden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_3Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getWindow()} method.\n*/\nclass Main_3Test {",
        "original_generated_code": "\n\t\t/**\n\t\t* Test case for the {@link Main#getWindow()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetWindow() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getField()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetField() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getSaveAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetSaveAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getSetNameAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetSetNameAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getCloseAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetCloseAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#createImageIcon(String, String)} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testCreateImageIcon() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getResource(String)} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetResource() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#locateOnScreenCenter(Component)} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testLocateOnScreenCenter() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#createHandballModel()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testCreateHandballModel() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getVersion()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetVersion() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}\n\n// Main_4Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getVersion()} method.\n*/\nclass Main_4Test {\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getWindow()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetWindow() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getField()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetField() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getSaveAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetSaveAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getSetNameAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetSetNameAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getCloseAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetCloseAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#createImageIcon(String, String)} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testCreateImageIcon() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#getResource(String)} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetResource() {\n\t\t\t\t// TODO: implement test\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for the {@link Main#locateOnScreenCenter(Component)} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testLocateOnScreenCenter() {\n\t\t\t\t",
        "applied_heuristics": "H1"
    },
    {
        "id": "cmpl-6wRVderOPANyeEwTLmhgID0I5hX85",
        "object": "text_completion",
        "created": 1679386789,
        "model": "code-davinci-002",
        "choices": [
            {
                "text": "// Main_4Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getField()} method.\n*/\nclass Main_4Test {\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#getField()}.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetField() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}",
                "index": 0,
                "logprobs": null,
                "finish_reason": "length"
            }
        ],
        "usage": {
            "prompt_tokens": 5757,
            "completion_tokens": 2000,
            "total_tokens": 7757
        },
        "time_taken": 99.63040089607239,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_4Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00fcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00e4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00fcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00e4ge f\u00fcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00e4ge f\u00fcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\ufffden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_4Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getField()} method.\n*/\nclass Main_4Test {",
        "original_generated_code": "\n\t\t/**\n\t\t* Test case for {@link Main#getField()}.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetField() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}\n\n// Main_4Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getField()} method.\n*/\nclass Main_4Test {\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#getField()}.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetField() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}\n\n// Main_4Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getField()} method.\n*/\nclass Main_4Test {\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#getField()}.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetField() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}\n\n// Main_4Test.java\npackage visu.handball.moves;\n\nimport",
        "applied_heuristics": "H1"
    },
    {
        "id": "cmpl-6wRXF1aZQwqjHm1xdaaAhwd0IpbM8",
        "object": "text_completion",
        "created": 1679386889,
        "model": "code-davinci-002",
        "choices": [
            {
                "text": "// Main_5Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getSaveAction()} method.\n*/\nclass Main_5Test {\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#getSaveAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetSaveAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}",
                "index": 0,
                "logprobs": null,
                "finish_reason": "length"
            }
        ],
        "usage": {
            "prompt_tokens": 5758,
            "completion_tokens": 2000,
            "total_tokens": 7758
        },
        "time_taken": 114.35404849052429,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_5Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00fcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00e4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00fcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00e4ge f\u00fcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00e4ge f\u00fcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\ufffden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_5Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getSaveAction()} method.\n*/\nclass Main_5Test {",
        "original_generated_code": "\n\t\t/**\n\t\t* Test case for {@link Main#getSaveAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetSaveAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}\n\n// Main_6Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getSetNameAction()} method.\n*/\nclass Main_6Test {\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#getSetNameAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetSetNameAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}\n\n// Main_7Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getCloseAction()} method.\n*/\nclass Main_7Test {\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#getCloseAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetCloseAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}\n\n// Main_8",
        "applied_heuristics": "H1"
    },
    {
        "id": "cmpl-6wRZ5m4YPGNbCHKNj1TiPp4BfkmGH",
        "object": "text_completion",
        "created": 1679387003,
        "model": "code-davinci-002",
        "choices": [
            {
                "text": "// Main_7Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getCloseAction()} method.\n*/\nclass Main_7Test {\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#getCloseAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetCloseAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}",
                "index": 0,
                "logprobs": null,
                "finish_reason": "length"
            }
        ],
        "usage": {
            "prompt_tokens": 5758,
            "completion_tokens": 2000,
            "total_tokens": 7758
        },
        "time_taken": 71.07568025588989,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_7Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00fcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00e4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00fcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00e4ge f\u00fcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00e4ge f\u00fcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\ufffden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_7Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getCloseAction()} method.\n*/\nclass Main_7Test {",
        "original_generated_code": "\n\t\t/**\n\t\t* Test case for {@link Main#getCloseAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetCloseAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}\n\n// Main_8Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getSetNameAction()} method.\n*/\nclass Main_8Test {\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#getSetNameAction()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetSetNameAction() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}\n\n// Main_9Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getVersion()} method.\n*/\nclass Main_9Test {\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#getVersion()} method.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetVersion() {\n\t\t\t\t// TODO: implement test\n\t\t}\n}\n\n// Main_Test.java\n",
        "applied_heuristics": "H1"
    },
    {
        "id": "cmpl-6wRaE8Pxggx8fTZdVj4juvqhvsHPA",
        "object": "text_completion",
        "created": 1679387074,
        "model": "code-davinci-002",
        "choices": [
            {
                "text": "// Main_8Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#deepCopy(Object)} method.\n*/\nclass Main_8Test {\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link HandballModel}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_HandballModel() throws Exception {\n\t\t\t\tHandballModel model = new HandballModel();\n\t\t\t\tHandballModel clone = (HandballModel) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link ColorModel}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_ColorModel() throws Exception {\n\t\t\t\tColorModel model = new ColorModel();\n\t\t\t\tColorModel clone = (ColorModel) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link TableHandballModel}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_TableHandballModel() throws Exception {\n\t\t\t\tTableHandballModel model = new TableHandballModel(new HandballModel());\n\t\t\t\tTableHandballModel clone = (TableHandballModel) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link TableSelectionListener}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_TableSelectionListener() throws Exception {\n\t\t\t\tTableSelectionListener model = new TableSelectionListener(new TableHandballModel(new HandballModel()));\n\t\t\t\tTableSelectionListener clone = (TableSelectionListener) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link EventTableCellRenderer}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_EventTableCellRenderer() throws Exception {\n\t\t\t\tEventTableCellRenderer model = new EventTableCellRenderer();\n\t\t\t\tEventTableCellRenderer clone = (EventTableCellRenderer) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link EventTableCellDelayEditor}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_EventTableCellDelayEditor() throws Exception {\n\t\t\t\tEventTableCellDelayEditor model = new EventTableCellDelayEditor();\n\t\t\t\tEventTableCellDelayEditor clone = (EventTableCellDelayEditor) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link StatusBar}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_StatusBar() throws Exception {\n\t\t\t\tStatusBar model = new StatusBar(new HandballModel());\n\t\t\t\tStatusBar clone = (StatusBar) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link PlayerToolBar}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_PlayerToolBar() throws Exception {\n\t\t\t\tPlayerToolBar model = new PlayerToolBar(new HandballModel());\n\t\t\t\tPlayerToolBar clone = (PlayerToolBar) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link CommentView}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_CommentView() throws Exception {\n\t\t\t\tCommentView model = new CommentView(\"\");\n\t\t\t\tCommentView clone = (CommentView) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link Field}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_Field() throws Exception {\n\t\t\t\tField model = new Field(new HandballModel(), new ColorModel());\n\t\t\t\tField clone = (Field) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n}",
                "index": 0,
                "logprobs": null,
                "finish_reason": "length"
            }
        ],
        "usage": {
            "prompt_tokens": 5758,
            "completion_tokens": 2000,
            "total_tokens": 7758
        },
        "time_taken": 70.58146333694458,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_8Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00fcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00e4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00fcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00e4ge f\u00fcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00e4ge f\u00fcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\ufffden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_8Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#deepCopy(Object)} method.\n*/\nclass Main_8Test {",
        "original_generated_code": "\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link HandballModel}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_HandballModel() throws Exception {\n\t\t\t\tHandballModel model = new HandballModel();\n\t\t\t\tHandballModel clone = (HandballModel) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link ColorModel}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_ColorModel() throws Exception {\n\t\t\t\tColorModel model = new ColorModel();\n\t\t\t\tColorModel clone = (ColorModel) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link TableHandballModel}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_TableHandballModel() throws Exception {\n\t\t\t\tTableHandballModel model = new TableHandballModel(new HandballModel());\n\t\t\t\tTableHandballModel clone = (TableHandballModel) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link TableSelectionListener}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_TableSelectionListener() throws Exception {\n\t\t\t\tTableSelectionListener model = new TableSelectionListener(new TableHandballModel(new HandballModel()));\n\t\t\t\tTableSelectionListener clone = (TableSelectionListener) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link EventTableCellRenderer}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_EventTableCellRenderer() throws Exception {\n\t\t\t\tEventTableCellRenderer model = new EventTableCellRenderer();\n\t\t\t\tEventTableCellRenderer clone = (EventTableCellRenderer) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link EventTableCellDelayEditor}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_EventTableCellDelayEditor() throws Exception {\n\t\t\t\tEventTableCellDelayEditor model = new EventTableCellDelayEditor();\n\t\t\t\tEventTableCellDelayEditor clone = (EventTableCellDelayEditor) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link StatusBar}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_StatusBar() throws Exception {\n\t\t\t\tStatusBar model = new StatusBar(new HandballModel());\n\t\t\t\tStatusBar clone = (StatusBar) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link PlayerToolBar}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_PlayerToolBar() throws Exception {\n\t\t\t\tPlayerToolBar model = new PlayerToolBar(new HandballModel());\n\t\t\t\tPlayerToolBar clone = (PlayerToolBar) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link CommentView}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_CommentView() throws Exception {\n\t\t\t\tCommentView model = new CommentView(\"\");\n\t\t\t\tCommentView clone = (CommentView) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#deepCopy(Object)} method.\n\t\t* Tested object is {@link Field}.\n\t\t*/\n\t\t@Test\n\t\tvoid testDeepCopy_Field() throws Exception {\n\t\t\t\tField model = new Field(new HandballModel(), new ColorModel());\n\t\t\t\tField clone = (Field) Main.deepCopy(model);\n\t\t\t\tassertNotSame(model, clone);\n\t\t\t\tassertEquals(model, clone);\n\t\t}\n\t\t\n}\n\n// MouseController.java\n/*\n * Created on 31.08.2006\n * Created by Richard Doerfler, Thomas Halm\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; either version 2\n * of the License, or (at your option) any later version.\n * \n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * \n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\npackage visu.handball.moves.controller;\n\nimport java.awt.event.MouseEvent;\nimport java.awt.event.MouseListener;\nimport java.awt.event.MouseMotionListener;\nimport java.util.ArrayList;\nimport java.util.List;\nimport javax.swing.JInternalFrame;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.MoveEvent;\nimport visu.handball.moves.model.MoveEvent.EventType;\nimport visu.handball.moves.model.MoveEvent.Player;\nimport visu.handball.moves.model.MoveEvent.PlayerPosition;\nimport visu.handball.moves.model.MoveEvent.PlayerState;\nimport visu.handball.moves.model.MoveEvent.PlayerType;\nimport visu.handball.moves.model.MoveEvent.Team;\nimport visu.handball.moves.model.MoveEvent.TeamState;\nimport visu.handball.moves.model.MoveEvent.TeamType;\nimport visu.handball.moves.model.MoveEvent.Time;\nimport visu.handball.moves.model.MoveEvent.TimeType;\nimport visu.handball.moves.model.MoveEvent.Zone;\nimport visu.handball.moves.views.Field;\n\n/**\n * Controller f\u00fcr die Maus-Eingaben\n * @author tommy\n */\npublic class MouseController implements MouseListener, MouseMotionListener {\n\n    private HandballModel model;\n\n    private JInternalFrame frame;\n\n    private List<Move",
        "applied_heuristics": "H7"
    },
    {
        "id": "cmpl-6wRbNrtEbLOklRkbTMizwJBFeyZei",
        "object": "text_completion",
        "created": 1679387145,
        "model": "code-davinci-002",
        "choices": [
            {
                "text": "// Main_9Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getVersion()} method.\n*/\nclass Main_9Test {\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#getVersion()}.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetVersion() {\n\t\t\t\tassertEquals(\"1.0.5\", Main.getVersion());\n\t\t}\n}",
                "index": 0,
                "logprobs": null,
                "finish_reason": "length"
            }
        ],
        "usage": {
            "prompt_tokens": 5757,
            "completion_tokens": 2000,
            "total_tokens": 7757
        },
        "time_taken": 61.919934034347534,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_9Test.java",
        "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window = new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content = new JPanel(new BorderLayout());\r\n        JDesktopPane desktop = new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel = createHandballModel();\r\n        // Create ColorModel\r\n        colorModel = new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar = createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu = createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field = new Field(handballModel, colorModel);\r\n        JInternalFrame handballField = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse = new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar = new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel = createTablePanel(handballModel);\r\n        JInternalFrame eventView = new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView = new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller f\u00fcr CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar = new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe = JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Eintr\u00e4ge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction = new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction = new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einf\u00fcgen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einf\u00fcgen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction = new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Eintr\u00e4ge f\u00fcr Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Eintr\u00e4ge f\u00fcr Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel = new TableHandballModel(handballModel);\r\n        JTable table = new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor = new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel = new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar = new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll = new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar = new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url = Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize = component.getSize();\r\n        Dimension screenSize = component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model = new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie\ufffden-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone = null;\r\n        try {\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            ObjectOutputStream oos = new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone = ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner = \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
        "test_prompt": "// Main_9Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getVersion()} method.\n*/\nclass Main_9Test {",
        "original_generated_code": "\n\t\t/**\n\t\t* Test case for {@link Main#getVersion()}.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetVersion() {\n\t\t\t\tassertEquals(\"1.0.5\", Main.getVersion());\n\t\t}\n}\n\n// Main_8Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getVersion()} method.\n*/\nclass Main_8Test {\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#getVersion()}.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetVersion() {\n\t\t\t\tassertEquals(\"1.0.5\", Main.getVersion());\n\t\t}\n}\n\n// Main_7Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getVersion()} method.\n*/\nclass Main_7Test {\n\t\t\n\t\t/**\n\t\t* Test case for {@link Main#getVersion()}.\n\t\t*/\n\t\t@Test\n\t\tvoid testGetVersion() {\n\t\t\t\tassertEquals(\"1.0.5\", Main.getVersion());\n\t",
        "applied_heuristics": "H1"
    },
    {
        "id": "cmpl-6wRcNQSLJpqE2Jcap4PWSw8ArNLa0",
        "object": "text_completion",
        "created": 1679387207,
        "model": "code-davinci-002",
        "choices": [
            {
                "text": "// JMenuHelper_0Test.java\npackage visu.handball.moves.controller;\n\nimport java.awt.event.*;\nimport javax.swing.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link JMenuHelper}.\n* It contains ten unit test cases for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.\n*/\nclass JMenuHelper_0Test {\n\t\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_0() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_1() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_2() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_3() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_4() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_5() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_6() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_7() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_8() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_9() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n}",
                "index": 0,
                "logprobs": null,
                "finish_reason": "length"
            }
        ],
        "usage": {
            "prompt_tokens": 1484,
            "completion_tokens": 2000,
            "total_tokens": 3484
        },
        "time_taken": 56.30275893211365,
        "prompt_id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/controller/JMenuHelper_0Test.java",
        "original_code": "// JMenuHelper.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves.controller;\r\n\r\nimport java.awt.event.*;\r\nimport javax.swing.*;\r\n\r\npublic class JMenuHelper {\r\n\r\n    /**\r\n     * Add an element to the menubar.\r\n     *\r\n     * @param menuBar a JMenuBar\r\n     * @param s a String\r\n     *\r\n     * @return added JMenu\r\n     */\r\n    public static JMenu addMenuBarItem(JMenuBar menuBar, String s) {\r\n        JMenu menu;\r\n        /**\r\n         * Suche nach '_' und nimm das n\u00e4chste Zeichen als Mnemonic,\r\n         * sonst: normales Menu\r\n         */\r\n        if (s.indexOf(\"_\") > -1) {\r\n            int pos = s.indexOf(\"_\");\r\n            char c = s.charAt(pos + 1);\r\n            StringBuffer sb = new StringBuffer(s).delete(pos, pos + 1);\r\n            menu = new JMenu(sb.toString());\r\n            menu.setMnemonic(c);\r\n        } else\r\n            menu = new JMenu(s);\r\n        menuBar.add(menu);\r\n        return menu;\r\n    }\r\n\r\n    private static JMenuItem processAction(Action a) {\r\n        if (a != null) {\r\n            return new JMenuItem(a);\r\n        } else {\r\n            return new JMenuItem();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Setze das Zeichen nach '_' als Mnemonic des MenuItems\r\n     * @param s\r\n     */\r\n    private static void processMnemonic(JMenuItem menuItem, String s) {\r\n        if (s.indexOf(\"_\") > -1) {\r\n            int pos = s.indexOf(\"_\");\r\n            char c = s.charAt(pos + 1);\r\n            StringBuffer sb = new StringBuffer(s).delete(pos, pos + 1);\r\n            menuItem.setName(sb.toString());\r\n            menuItem.setMnemonic(c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Insert a JMenuItem to a given JMenu.\r\n     *\r\n     * @param m\r\n     *            a JMenu\r\n     * @param s\r\n     *            a String\r\n     * @param keyChar\r\n     *            a char\r\n     * @param al\r\n     *            an ActionListener\r\n     *\r\n     * @return a JMenuItem\r\n     */\r\n    public static JMenuItem addMenuItem(JMenu m, String s, char keyChar, Action a, ActionListener al) {\r\n        if (s.startsWith(\"-\")) {\r\n            m.addSeparator();\r\n            return null;\r\n        }\r\n        JMenuItem menuItem = processAction(a);\r\n        processMnemonic(menuItem, s);\r\n        //f\u00fcge den Short-Cut hinzu\r\n        if (keyChar != 0)\r\n            menuItem.setAccelerator(KeyStroke.getKeyStroke(keyChar, InputEvent.CTRL_MASK));\r\n        //Actionslistener anmelden\r\n        if (al != null)\r\n            menuItem.addActionListener(al);\r\n        //dem Menu hinzuf\u00fcgen\r\n        m.add(menuItem);\r\n        return menuItem;\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s, char c) {\r\n        return addMenuItem(m, s, c, null, null);\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s) {\r\n        return addMenuItem(m, s, (char) 0, null, null);\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s, ActionListener al) {\r\n        return addMenuItem(m, s, (char) 0, null, al);\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s, Action a) {\r\n        return addMenuItem(m, s, (char) 0, a, null);\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s, char c, Action a) {\r\n        return addMenuItem(m, s, c, a, null);\r\n    }\r\n}\r\n",
        "test_prompt": "// JMenuHelper_0Test.java\npackage visu.handball.moves.controller;\n\nimport java.awt.event.*;\nimport javax.swing.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link JMenuHelper}.\n* It contains ten unit test cases for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.\n*/\nclass JMenuHelper_0Test {",
        "original_generated_code": "\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_0() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_1() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_2() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_3() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_4() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_5() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_6() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_7() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_8() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuBarItem(JMenuBar, String)}.\n\t* It tests if the method returns a JMenu.\n\t*/\n\t@Test\n\tvoid testAddMenuBarItem_9() {\n\t\tJMenuBar menuBar = new JMenuBar();\n\t\tString s = \"\";\n\t\tJMenu result = JMenuHelper.addMenuBarItem(menuBar, s);\n\t\tassertTrue(result instanceof JMenu);\n\t}\n\t\n}\n\n// JMenuHelper_1Test.java\npackage visu.handball.moves.controller;\n\nimport java.awt.event.*;\nimport javax.swing.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link JMenuHelper}.\n* It contains ten unit test cases for the {@link JMenuHelper#addMenuItem(JMenu, String, char, Action, ActionListener)} method.\n*/\nclass JMenuHelper_1Test {\n\t\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuItem(JMenu, String, char, Action, ActionListener)}.\n\t* It tests if the method returns a JMenuItem.\n\t*/\n\t@Test\n\tvoid testAddMenuItem_0() {\n\t\tJMenu m = new JMenu();\n\t\tString s = \"\";\n\t\tchar keyChar = ' ';\n\t\tAction a = null;\n\t\tActionListener al = null;\n\t\tJMenuItem result = JMenuHelper.addMenuItem(m, s, keyChar, a, al);\n\t\tassertTrue(result instanceof JMenuItem);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuItem(JMenu, String, char, Action, ActionListener)}.\n\t* It tests if the method returns a JMenuItem.\n\t*/\n\t@Test\n\tvoid testAddMenuItem_1() {\n\t\tJMenu m = new JMenu();\n\t\tString s = \"\";\n\t\tchar keyChar = ' ';\n\t\tAction a = null;\n\t\tActionListener al = null;\n\t\tJMenuItem result = JMenuHelper.addMenuItem(m, s, keyChar, a, al);\n\t\tassertTrue(result instanceof JMenuItem);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuItem(JMenu, String, char, Action, ActionListener)}.\n\t* It tests if the method returns a JMenuItem.\n\t*/\n\t@Test\n\tvoid testAddMenuItem_2() {\n\t\tJMenu m = new JMenu();\n\t\tString s = \"\";\n\t\tchar keyChar = ' ';\n\t\tAction a = null;\n\t\tActionListener al = null;\n\t\tJMenuItem result = JMenuHelper.addMenuItem(m, s, keyChar, a, al);\n\t\tassertTrue(result instanceof JMenuItem);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuItem(JMenu, String, char, Action, ActionListener)}.\n\t* It tests if the method returns a JMenuItem.\n\t*/\n\t@Test\n\tvoid testAddMenuItem_3() {\n\t\tJMenu m = new JMenu();\n\t\tString s = \"\";\n\t\tchar keyChar = ' ';\n\t\tAction a = null;\n\t\tActionListener al = null;\n\t\tJMenuItem result = JMenuHelper.addMenuItem(m, s, keyChar, a, al);\n\t\tassertTrue(result instanceof JMenuItem);\n\t}\n\t\n\t/**\n\t* Test case for {@link JMenuHelper#addMenuItem(JMenu, String, char, Action, ActionListener)}.\n",
        "applied_heuristics": "H1"
    }
]