[
    {
        "id": "cmpl-6wb1WegS4SnjAybgkSqlF133zssuV",
        "object": "text_completion",
        "created": 1679423362,
        "model": "code-davinci-002",
        "choices": [
            {
                "text": "// ExtBoolArray_0Test.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#isFalse(int, int)} method.\n*/\nclass ExtBoolArray_0Test {\n\t\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns true if the array contains only false values.\n\t */\n\t@Test\n\tvoid testIsFalse_0() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\tassertTrue(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_1() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_2() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_3() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_4() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_5() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_6() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_7() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_8() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_9() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n}",
                "index": 0,
                "logprobs": null,
                "finish_reason": "length"
            }
        ],
        "usage": {
            "prompt_tokens": 638,
            "completion_tokens": 4000,
            "total_tokens": 4638
        },
        "time_taken": 93.26217103004456,
        "prompt_id": "/EvoSuiteBenchmark/original/39_diffi/src/main/java/de/beiri22/stringincrementor/helper/ExtBoolArray_0Test.java",
        "original_code": "// ExtBoolArray.java\n/*\n * ExtBoolArray.java\n *\n * Created on 31.10.2007, 14:34:55\n *\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\npackage de.beiri22.stringincrementor.helper;\n\n/**\n * @author Rico\n */\npublic final class ExtBoolArray {\n\n    /**\n     * Enthaelt die Booleanwerte\n     */\n    private boolean[] werte;\n\n    /**\n     * erstellt ein neues ExtBoolArray mit allen Werten False.\n     * @param len Anzahl der Booleanwerte\n     */\n    public ExtBoolArray(int len) {\n        werte = new boolean[len];\n    }\n\n    /**\n     * setzt den Bereich mit den Indexen a bis b auf True.\n     * @param a Startindex\n     * @param b Endindex\n     */\n    public void setTrue(int a, int b) {\n        for (int i = a; i <= b; i++) {\n            werte[i] = true;\n        }\n    }\n\n    /**\n     * prueft, ob der Bereich mit den Indexen a bis b ausschlie\u00dflich False-Werte\n     * enthaelt.\n     * @param a Startindex\n     * @param b Endindex\n     * @return True - wenn alles False-Werte sind.\n     */\n    public boolean isFalse(int a, int b) {\n        for (int i = a; i <= b; i++) {\n            if (werte[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Zahl die uebriggebliebenen False-Werte.\n     * @return Anzahl der False-Werte.\n     */\n    public int left() {\n        int result = 0;\n        for (int i = 0; i < werte.length; i++) {\n            if (!werte[i]) {\n                result++;\n            }\n        }\n        return result;\n    }\n}\n",
        "test_prompt": "// ExtBoolArray_0Test.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#isFalse(int, int)} method.\n*/\nclass ExtBoolArray_0Test {",
        "original_generated_code": "\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns true if the array contains only false values.\n\t */\n\t@Test\n\tvoid testIsFalse_0() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\tassertTrue(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_1() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_2() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_3() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_4() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_5() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_6() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_7() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_8() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#isFalse(int, int)}\n\t * <p>\n\t * Test if the method returns false if the array contains only true values.\n\t */\n\t@Test\n\tvoid testIsFalse_9() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n}\n\n// ExtBoolArray_1Test.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#left()} method.\n*/\nclass ExtBoolArray_1Test {\n\t\t\n\t/**\n\t * Test case for {@link ExtBoolArray#left()}\n\t * <p>\n\t * Test if the method returns the correct number of false values.\n\t */\n\t@Test\n\tvoid testLeft_0() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\tassertEquals(5, extBoolArray.left());\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#left()}\n\t * <p>\n\t * Test if the method returns the correct number of false values.\n\t */\n\t@Test\n\tvoid testLeft_1() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertEquals(0, extBoolArray.left());\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#left()}\n\t * <p>\n\t * Test if the method returns the correct number of false values.\n\t */\n\t@Test\n\tvoid testLeft_2() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertEquals(0, extBoolArray.left());\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#left()}\n\t * <p>\n\t * Test if the method returns the correct number of false values.\n\t */\n\t@Test\n\tvoid testLeft_3() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertEquals(0, extBoolArray.left());\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#left()}\n\t * <p>\n\t * Test if the method returns the correct number of false values.\n\t */\n\t@Test\n\tvoid testLeft_4() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertEquals(0, extBoolArray.left());\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#left()}\n\t * <p>\n\t * Test if the method returns the correct number of false values.\n\t */\n\t@Test\n\tvoid testLeft_5() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertEquals(0, extBoolArray.left());\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#left()}\n\t * <p>\n\t * Test if the method returns the correct number of false values.\n\t */\n\t@Test\n\tvoid testLeft_6() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertEquals(0, extBoolArray.left());\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#left()}\n\t * <p>\n\t * Test if the method returns the correct number of false values.\n\t */\n\t@Test\n\tvoid testLeft_7() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertEquals(0, extBoolArray.left());\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#left()}\n\t * <p>\n\t * Test if the method returns the correct number of false values.\n\t */\n\t@Test\n\tvoid testLeft_8() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertEquals(0, extBoolArray.left());\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#left()}\n\t * <p>\n\t * Test if the method returns the correct number of false values.\n\t */\n\t@Test\n\tvoid testLeft_9() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertEquals(0, extBoolArray.left());\n\t}\n\t\n}\n\n// ExtBoolArray_2Test.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#setTrue(int, int)} method.\n*/\nclass ExtBoolArray_2Test {\n\t\t\n\t/**\n\t * Test case for {@link ExtBoolArray#setTrue(int, int)}\n\t * <p>\n\t * Test if the method sets the values in the given range to true.\n\t */\n\t@Test\n\tvoid testSetTrue_0() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#setTrue(int, int)}\n\t * <p>\n\t * Test if the method sets the values in the given range to true.\n\t */\n\t@Test\n\tvoid testSetTrue_1() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#setTrue(int, int)}\n\t * <p>\n\t * Test if the method sets the values in the given range to true.\n\t */\n\t@Test\n\tvoid testSetTrue_2() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#setTrue(int, int)}\n\t * <p>\n\t * Test if the method sets the values in the given range to true.\n\t */\n\t@Test\n\tvoid testSetTrue_3() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#setTrue(int, int)}\n\t * <p>\n\t * Test if the method sets the values in the given range to true.\n\t */\n\t@Test\n\tvoid testSetTrue_4() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#setTrue(int, int)}\n\t * <p>\n\t * Test if the method sets the values in the given range to true.\n\t */\n\t@Test\n\tvoid testSetTrue_5() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#setTrue(int, int)}\n\t * <p>\n\t * Test if the method sets the values in the given range to true.\n\t */\n\t@Test\n\tvoid testSetTrue_6() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#setTrue(int, int)}\n\t * <p>\n\t * Test if the method sets the values in the given range to true.\n\t */\n\t@Test\n\tvoid testSetTrue_7() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#setTrue(int, int)}\n\t * <p>\n\t * Test if the method sets the values in the given range to true.\n\t */\n\t@Test\n\tvoid testSetTrue_8() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n\t/**\n\t * Test case for {@link ExtBoolArray#setTrue(int, int)}\n\t * <p>\n\t * Test if the method sets the values in the given range to true.\n\t */\n\t@Test\n\tvoid testSetTrue_9() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\textBoolArray.setTrue(0, 4);\n\t\tassertFalse(extBoolArray.isFalse(0, 4));\n\t}\n\t\n}\n\n// ExtBoolArray_3Test.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#ExtBoolArray(int)} method.\n*/\nclass ExtBoolArray_3Test {\n\t\t\n\t/**\n\t * Test case for {@link ExtBoolArray#ExtBoolArray(int)}\n\t * <p>\n\t * Test if the method creates an array with the given length.\n\t */\n\t@Test\n\tvoid testExtBoolArray_0() {\n\t\tExtBoolArray extBoolArray = new ExtBoolArray(5);\n\t\tassertEquals(5, extBoolArray.left());\n",
        "applied_heuristics": "H1"
    },
    {
        "id": "cmpl-6wb31ukC2Wb3PcUV0k6PE144XYf1M",
        "object": "text_completion",
        "created": 1679423455,
        "model": "code-davinci-002",
        "choices": [
            {
                "text": "// ExtBoolArray_1Test.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#left()} method.\n*/\nclass ExtBoolArray_1Test {\n\t\t\n\t/**\n\t* Test case for {@link ExtBoolArray#left()} method.\n\t* Test if the method returns the correct number of false values.\n\t*/\n\t@Test\n\tvoid testLeft() {\n\t\tExtBoolArray array = new ExtBoolArray(10);\n\t\tarray.setTrue(0, 9);\n\t\tassertEquals(0, array.left());\n\t\tarray.setTrue(0, 8);\n\t\tassertEquals(1, array.left());\n\t\tarray.setTrue(0, 7);\n\t\tassertEquals(2, array.left());\n\t\tarray.setTrue(0, 6);\n\t\tassertEquals(3, array.left());\n\t\tarray.setTrue(0, 5);\n\t\tassertEquals(4, array.left());\n\t\tarray.setTrue(0, 4);\n\t\tassertEquals(5, array.left());\n\t\tarray.setTrue(0, 3);\n\t\tassertEquals(6, array.left());\n\t\tarray.setTrue(0, 2);\n\t\tassertEquals(7, array.left());\n\t\tarray.setTrue(0, 1);\n\t\tassertEquals(8, array.left());\n\t\tarray.setTrue(0, 0);\n\t\tassertEquals(9, array.left());\n\t}\n}",
                "index": 0,
                "logprobs": null,
                "finish_reason": "length"
            }
        ],
        "usage": {
            "prompt_tokens": 634,
            "completion_tokens": 4000,
            "total_tokens": 4634
        },
        "time_taken": 78.61248898506165,
        "prompt_id": "/EvoSuiteBenchmark/original/39_diffi/src/main/java/de/beiri22/stringincrementor/helper/ExtBoolArray_1Test.java",
        "original_code": "// ExtBoolArray.java\n/*\n * ExtBoolArray.java\n *\n * Created on 31.10.2007, 14:34:55\n *\n * To change this template, choose Tools | Templates\n * and open the template in the editor.\n */\npackage de.beiri22.stringincrementor.helper;\n\n/**\n * @author Rico\n */\npublic final class ExtBoolArray {\n\n    /**\n     * Enthaelt die Booleanwerte\n     */\n    private boolean[] werte;\n\n    /**\n     * erstellt ein neues ExtBoolArray mit allen Werten False.\n     * @param len Anzahl der Booleanwerte\n     */\n    public ExtBoolArray(int len) {\n        werte = new boolean[len];\n    }\n\n    /**\n     * setzt den Bereich mit den Indexen a bis b auf True.\n     * @param a Startindex\n     * @param b Endindex\n     */\n    public void setTrue(int a, int b) {\n        for (int i = a; i <= b; i++) {\n            werte[i] = true;\n        }\n    }\n\n    /**\n     * prueft, ob der Bereich mit den Indexen a bis b ausschlie\u00dflich False-Werte\n     * enthaelt.\n     * @param a Startindex\n     * @param b Endindex\n     * @return True - wenn alles False-Werte sind.\n     */\n    public boolean isFalse(int a, int b) {\n        for (int i = a; i <= b; i++) {\n            if (werte[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Zahl die uebriggebliebenen False-Werte.\n     * @return Anzahl der False-Werte.\n     */\n    public int left() {\n        int result = 0;\n        for (int i = 0; i < werte.length; i++) {\n            if (!werte[i]) {\n                result++;\n            }\n        }\n        return result;\n    }\n}\n",
        "test_prompt": "// ExtBoolArray_1Test.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#left()} method.\n*/\nclass ExtBoolArray_1Test {",
        "original_generated_code": "\n\t/**\n\t* Test case for {@link ExtBoolArray#left()} method.\n\t* Test if the method returns the correct number of false values.\n\t*/\n\t@Test\n\tvoid testLeft() {\n\t\tExtBoolArray array = new ExtBoolArray(10);\n\t\tarray.setTrue(0, 9);\n\t\tassertEquals(0, array.left());\n\t\tarray.setTrue(0, 8);\n\t\tassertEquals(1, array.left());\n\t\tarray.setTrue(0, 7);\n\t\tassertEquals(2, array.left());\n\t\tarray.setTrue(0, 6);\n\t\tassertEquals(3, array.left());\n\t\tarray.setTrue(0, 5);\n\t\tassertEquals(4, array.left());\n\t\tarray.setTrue(0, 4);\n\t\tassertEquals(5, array.left());\n\t\tarray.setTrue(0, 3);\n\t\tassertEquals(6, array.left());\n\t\tarray.setTrue(0, 2);\n\t\tassertEquals(7, array.left());\n\t\tarray.setTrue(0, 1);\n\t\tassertEquals(8, array.left());\n\t\tarray.setTrue(0, 0);\n\t\tassertEquals(9, array.left());\n\t}\n}\n\n// ExtBoolArray_2Test.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#isFalse(int, int)} method.\n*/\nclass ExtBoolArray_2Test {\n\t\t\n\t/**\n\t* Test case for {@link ExtBoolArray#isFalse(int, int)} method.\n\t* Test if the method returns the correct boolean value.\n\t*/\n\t@Test\n\tvoid testIsFalse() {\n\t\tExtBoolArray array = new ExtBoolArray(10);\n\t\tarray.setTrue(0, 9);\n\t\tassertFalse(array.isFalse(0, 9));\n\t\tarray.setTrue(0, 8);\n\t\tassertFalse(array.isFalse(0, 8));\n\t\tassertTrue(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 7);\n\t\tassertFalse(array.isFalse(0, 7));\n\t\tassertTrue(array.isFalse(8, 8));\n\t\tassertTrue(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 6);\n\t\tassertFalse(array.isFalse(0, 6));\n\t\tassertTrue(array.isFalse(7, 7));\n\t\tassertTrue(array.isFalse(8, 8));\n\t\tassertTrue(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 5);\n\t\tassertFalse(array.isFalse(0, 5));\n\t\tassertTrue(array.isFalse(6, 6));\n\t\tassertTrue(array.isFalse(7, 7));\n\t\tassertTrue(array.isFalse(8, 8));\n\t\tassertTrue(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 4);\n\t\tassertFalse(array.isFalse(0, 4));\n\t\tassertTrue(array.isFalse(5, 5));\n\t\tassertTrue(array.isFalse(6, 6));\n\t\tassertTrue(array.isFalse(7, 7));\n\t\tassertTrue(array.isFalse(8, 8));\n\t\tassertTrue(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 3);\n\t\tassertFalse(array.isFalse(0, 3));\n\t\tassertTrue(array.isFalse(4, 4));\n\t\tassertTrue(array.isFalse(5, 5));\n\t\tassertTrue(array.isFalse(6, 6));\n\t\tassertTrue(array.isFalse(7, 7));\n\t\tassertTrue(array.isFalse(8, 8));\n\t\tassertTrue(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 2);\n\t\tassertFalse(array.isFalse(0, 2));\n\t\tassertTrue(array.isFalse(3, 3));\n\t\tassertTrue(array.isFalse(4, 4));\n\t\tassertTrue(array.isFalse(5, 5));\n\t\tassertTrue(array.isFalse(6, 6));\n\t\tassertTrue(array.isFalse(7, 7));\n\t\tassertTrue(array.isFalse(8, 8));\n\t\tassertTrue(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 1);\n\t\tassertFalse(array.isFalse(0, 1));\n\t\tassertTrue(array.isFalse(2, 2));\n\t\tassertTrue(array.isFalse(3, 3));\n\t\tassertTrue(array.isFalse(4, 4));\n\t\tassertTrue(array.isFalse(5, 5));\n\t\tassertTrue(array.isFalse(6, 6));\n\t\tassertTrue(array.isFalse(7, 7));\n\t\tassertTrue(array.isFalse(8, 8));\n\t\tassertTrue(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 0);\n\t\tassertFalse(array.isFalse(0, 0));\n\t\tassertTrue(array.isFalse(1, 1));\n\t\tassertTrue(array.isFalse(2, 2));\n\t\tassertTrue(array.isFalse(3, 3));\n\t\tassertTrue(array.isFalse(4, 4));\n\t\tassertTrue(array.isFalse(5, 5));\n\t\tassertTrue(array.isFalse(6, 6));\n\t\tassertTrue(array.isFalse(7, 7));\n\t\tassertTrue(array.isFalse(8, 8));\n\t\tassertTrue(array.isFalse(9, 9));\n\t}\n}\n\n// ExtBoolArray_3Test.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#setTrue(int, int)} method.\n*/\nclass ExtBoolArray_3Test {\n\t\t\n\t/**\n\t* Test case for {@link ExtBoolArray#setTrue(int, int)} method.\n\t* Test if the method sets the correct boolean values.\n\t*/\n\t@Test\n\tvoid testSetTrue() {\n\t\tExtBoolArray array = new ExtBoolArray(10);\n\t\tarray.setTrue(0, 9);\n\t\tassertTrue(array.isFalse(0, 0));\n\t\tassertTrue(array.isFalse(1, 1));\n\t\tassertTrue(array.isFalse(2, 2));\n\t\tassertTrue(array.isFalse(3, 3));\n\t\tassertTrue(array.isFalse(4, 4));\n\t\tassertTrue(array.isFalse(5, 5));\n\t\tassertTrue(array.isFalse(6, 6));\n\t\tassertTrue(array.isFalse(7, 7));\n\t\tassertTrue(array.isFalse(8, 8));\n\t\tassertTrue(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 8);\n\t\tassertTrue(array.isFalse(0, 0));\n\t\tassertTrue(array.isFalse(1, 1));\n\t\tassertTrue(array.isFalse(2, 2));\n\t\tassertTrue(array.isFalse(3, 3));\n\t\tassertTrue(array.isFalse(4, 4));\n\t\tassertTrue(array.isFalse(5, 5));\n\t\tassertTrue(array.isFalse(6, 6));\n\t\tassertTrue(array.isFalse(7, 7));\n\t\tassertTrue(array.isFalse(8, 8));\n\t\tassertFalse(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 7);\n\t\tassertTrue(array.isFalse(0, 0));\n\t\tassertTrue(array.isFalse(1, 1));\n\t\tassertTrue(array.isFalse(2, 2));\n\t\tassertTrue(array.isFalse(3, 3));\n\t\tassertTrue(array.isFalse(4, 4));\n\t\tassertTrue(array.isFalse(5, 5));\n\t\tassertTrue(array.isFalse(6, 6));\n\t\tassertTrue(array.isFalse(7, 7));\n\t\tassertFalse(array.isFalse(8, 8));\n\t\tassertFalse(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 6);\n\t\tassertTrue(array.isFalse(0, 0));\n\t\tassertTrue(array.isFalse(1, 1));\n\t\tassertTrue(array.isFalse(2, 2));\n\t\tassertTrue(array.isFalse(3, 3));\n\t\tassertTrue(array.isFalse(4, 4));\n\t\tassertTrue(array.isFalse(5, 5));\n\t\tassertTrue(array.isFalse(6, 6));\n\t\tassertFalse(array.isFalse(7, 7));\n\t\tassertFalse(array.isFalse(8, 8));\n\t\tassertFalse(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 5);\n\t\tassertTrue(array.isFalse(0, 0));\n\t\tassertTrue(array.isFalse(1, 1));\n\t\tassertTrue(array.isFalse(2, 2));\n\t\tassertTrue(array.isFalse(3, 3));\n\t\tassertTrue(array.isFalse(4, 4));\n\t\tassertTrue(array.isFalse(5, 5));\n\t\tassertFalse(array.isFalse(6, 6));\n\t\tassertFalse(array.isFalse(7, 7));\n\t\tassertFalse(array.isFalse(8, 8));\n\t\tassertFalse(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 4);\n\t\tassertTrue(array.isFalse(0, 0));\n\t\tassertTrue(array.isFalse(1, 1));\n\t\tassertTrue(array.isFalse(2, 2));\n\t\tassertTrue(array.isFalse(3, 3));\n\t\tassertTrue(array.isFalse(4, 4));\n\t\tassertFalse(array.isFalse(5, 5));\n\t\tassertFalse(array.isFalse(6, 6));\n\t\tassertFalse(array.isFalse(7, 7));\n\t\tassertFalse(array.isFalse(8, 8));\n\t\tassertFalse(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 3);\n\t\tassertTrue(array.isFalse(0, 0));\n\t\tassertTrue(array.isFalse(1, 1));\n\t\tassertTrue(array.isFalse(2, 2));\n\t\tassertTrue(array.isFalse(3, 3));\n\t\tassertFalse(array.isFalse(4, 4));\n\t\tassertFalse(array.isFalse(5, 5));\n\t\tassertFalse(array.isFalse(6, 6));\n\t\tassertFalse(array.isFalse(7, 7));\n\t\tassertFalse(array.isFalse(8, 8));\n\t\tassertFalse(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 2);\n\t\tassertTrue(array.isFalse(0, 0));\n\t\tassertTrue(array.isFalse(1, 1));\n\t\tassertTrue(array.isFalse(2, 2));\n\t\tassertFalse(array.isFalse(3, 3));\n\t\tassertFalse(array.isFalse(4, 4));\n\t\tassertFalse(array.isFalse(5, 5));\n\t\tassertFalse(array.isFalse(6, 6));\n\t\tassertFalse(array.isFalse(7, 7));\n\t\tassertFalse(array.isFalse(8, 8));\n\t\tassertFalse(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 1);\n\t\tassertTrue(array.isFalse(0, 0));\n\t\tassertTrue(array.isFalse(1, 1));\n\t\tassertFalse(array.isFalse(2, 2));\n\t\tassertFalse(array.isFalse(3, 3));\n\t\tassertFalse(array.isFalse(4, 4));\n\t\tassertFalse(array.isFalse(5, 5));\n\t\tassertFalse(array.isFalse(6, 6));\n\t\tassertFalse(array.isFalse(7, 7));\n\t\tassertFalse(array.isFalse(8, 8));\n\t\tassertFalse(array.isFalse(9, 9));\n\t\tarray.setTrue(0, 0);\n\t\tassertFalse(array.isFalse(0, 0));\n\t\tassertFalse(array.isFalse(1, 1));\n\t\tassertFalse(array.isFalse(2, 2));\n\t\tassertFalse(array.isFalse(3, 3));\n\t\tassertFalse(array.isFalse(4, 4));\n\t\tassertFalse(array.isFalse(5, 5));\n\t\tassertFalse(array.isFalse(6, 6));\n\t\tassertFalse(array.isFalse(7, 7));\n\t\tassertFalse(array.isFalse(8, 8));\n\t\tassertFalse(array.isFalse(9, 9));\n\t}\n}\n\n// ExtBoolArray_4Test.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#ExtBoolArray(int)} constructor.\n*/\nclass ExtBoolArray_4Test {\n\t\t\n\t/**\n\t* Test case for {@link ExtBoolArray#ExtBoolArray(int)} constructor.\n\t* Test if the constructor sets the correct boolean values.\n\t*/\n\t@Test\n\tvoid testExtBoolArray() {\n\t\tExtBoolArray array = new ExtBoolArray(10);\n\t\tassertTrue(array.isFalse(0, 0));\n\t\tassertTrue(array.isFalse(1, 1));\n\t\tassertTrue(array.isFalse(2, 2));\n\t\tassertTrue(array.isFalse(3, 3));\n\t\tassertTrue(array.isFalse(4, 4));\n\t\tassertTrue(array.isFalse(5, 5));\n\t\tassertTrue(array.isFalse(6, 6));\n\t\tassertTrue(array.isFalse(7, 7));\n\t\tassertTrue(array.isFalse(8, 8));\n\t\tassertTrue(array.isFalse(9, 9));\n\t}\n}\n\n// ExtBoolArray_5Test.java\npackage de.beiri22.stringincrementor.helper;\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link ExtBoolArray}.\n* It contains ten unit test cases for the {@link ExtBoolArray#ExtBoolArray(int)} constructor.\n*/\nclass ExtBoolArray_5Test {\n\t\t\n\t/**\n\t* Test case for {@link ExtBoolArray#ExtBoolArray(int)} constructor.\n\t* Test if the constructor sets the correct boolean values.\n\t*/\n\t@Test\n\tvoid testExtBoolArray() {\n\t\tExtBoolArray array = new ExtBoolArray(10);\n\t\tassertTrue(array.isFalse(0, 0));\n\t\tassertTrue(array.isFalse(1, 1));\n\t\tassertTrue(array.isFalse(2, 2));\n\t\tassertTrue(array.isFalse(3, 3));\n\t\tassertTrue(array.isFalse(4, 4));\n\t\tassertTrue(array.isFalse(5, 5));\n\t\tassertTrue(array.isFalse(6, 6));\n\t\tassertTrue(array.isFalse(7, 7));\n\t\tassertTrue(array.isFalse(8, 8));\n\t\tassertTrue(array.isFalse(9, 9));\n\t}\n}\n\n// ExtBoolArray_6Test.java\npackage de.beiri22.stringincrementor.helper;",
        "applied_heuristics": "H1"
    }
]