[
  {
    "numberTests": "ten",
    "original_code": "// JMenuHelper.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves.controller;\r\n\r\nimport java.awt.event.*;\r\nimport javax.swing.*;\r\n\r\npublic class JMenuHelper {\r\n\r\n    /**\r\n     * Add an element to the menubar.\r\n     *\r\n     * @param menuBar a JMenuBar\r\n     * @param s a String\r\n     *\r\n     * @return added JMenu\r\n     */\r\n    public static JMenu addMenuBarItem(JMenuBar menuBar, String s) {\r\n        JMenu menu;\r\n        /**\r\n         * Suche nach \u0027_\u0027 und nimm das nächste Zeichen als Mnemonic,\r\n         * sonst: normales Menu\r\n         */\r\n        if (s.indexOf(\"_\") \u003e -1) {\r\n            int pos \u003d s.indexOf(\"_\");\r\n            char c \u003d s.charAt(pos + 1);\r\n            StringBuffer sb \u003d new StringBuffer(s).delete(pos, pos + 1);\r\n            menu \u003d new JMenu(sb.toString());\r\n            menu.setMnemonic(c);\r\n        } else\r\n            menu \u003d new JMenu(s);\r\n        menuBar.add(menu);\r\n        return menu;\r\n    }\r\n\r\n    private static JMenuItem processAction(Action a) {\r\n        if (a !\u003d null) {\r\n            return new JMenuItem(a);\r\n        } else {\r\n            return new JMenuItem();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Setze das Zeichen nach \u0027_\u0027 als Mnemonic des MenuItems\r\n     * @param s\r\n     */\r\n    private static void processMnemonic(JMenuItem menuItem, String s) {\r\n        if (s.indexOf(\"_\") \u003e -1) {\r\n            int pos \u003d s.indexOf(\"_\");\r\n            char c \u003d s.charAt(pos + 1);\r\n            StringBuffer sb \u003d new StringBuffer(s).delete(pos, pos + 1);\r\n            menuItem.setName(sb.toString());\r\n            menuItem.setMnemonic(c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Insert a JMenuItem to a given JMenu.\r\n     *\r\n     * @param m\r\n     *            a JMenu\r\n     * @param s\r\n     *            a String\r\n     * @param keyChar\r\n     *            a char\r\n     * @param al\r\n     *            an ActionListener\r\n     *\r\n     * @return a JMenuItem\r\n     */\r\n    public static JMenuItem addMenuItem(JMenu m, String s, char keyChar, Action a, ActionListener al) {\r\n        if (s.startsWith(\"-\")) {\r\n            m.addSeparator();\r\n            return null;\r\n        }\r\n        JMenuItem menuItem \u003d processAction(a);\r\n        processMnemonic(menuItem, s);\r\n        //füge den Short-Cut hinzu\r\n        if (keyChar !\u003d 0)\r\n            menuItem.setAccelerator(KeyStroke.getKeyStroke(keyChar, InputEvent.CTRL_MASK));\r\n        //Actionslistener anmelden\r\n        if (al !\u003d null)\r\n            menuItem.addActionListener(al);\r\n        //dem Menu hinzufügen\r\n        m.add(menuItem);\r\n        return menuItem;\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s, char c) {\r\n        return addMenuItem(m, s, c, null, null);\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s) {\r\n        return addMenuItem(m, s, (char) 0, null, null);\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s, ActionListener al) {\r\n        return addMenuItem(m, s, (char) 0, null, al);\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s, Action a) {\r\n        return addMenuItem(m, s, (char) 0, a, null);\r\n    }\r\n\r\n    public static JMenuItem addMenuItem(JMenu m, String s, char c, Action a) {\r\n        return addMenuItem(m, s, c, a, null);\r\n    }\r\n}\r\n",
    "package": "visu.handball.moves.controller",
    "classname": "JMenuHelper",
    "id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/controller/JMenuHelper_0Test.java",
    "test_prompt": "// JMenuHelper_0Test.java\npackage visu.handball.moves.controller;\n\nimport java.awt.event.*;\nimport javax.swing.*;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link JMenuHelper}.\n* It contains ten unit test cases for the {@link JMenuHelper#addMenuBarItem(JMenuBar, String)} method.\n*/\nclass JMenuHelper_0Test {",
    "method_signature": "addMenuBarItem(JMenuBar, String)",
    "suffix": "0"
  },
  {
    "numberTests": "ten",
    "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window \u003d new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content \u003d new JPanel(new BorderLayout());\r\n        JDesktopPane desktop \u003d new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel \u003d createHandballModel();\r\n        // Create ColorModel\r\n        colorModel \u003d new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar \u003d createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu \u003d createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field \u003d new Field(handballModel, colorModel);\r\n        JInternalFrame handballField \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse \u003d new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar \u003d new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel \u003d createTablePanel(handballModel);\r\n        JInternalFrame eventView \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView \u003d new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller für CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar \u003d new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Einträge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction \u003d new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction \u003d new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einfügen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction \u003d new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Einträge für Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Einträge für Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel \u003d new TableHandballModel(handballModel);\r\n        JTable table \u003d new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor \u003d new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel \u003d new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar \u003d new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll \u003d new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar \u003d new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url \u003d Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize \u003d component.getSize();\r\n        Dimension screenSize \u003d component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model \u003d new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie�en-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone \u003d null;\r\n        try {\r\n            ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\r\n            ObjectOutputStream oos \u003d new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois \u003d new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone \u003d ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner \u003d \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
    "package": "visu.handball.moves",
    "classname": "Main",
    "id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_0Test.java",
    "test_prompt": "// Main_0Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getColorModel()} method.\n*/\nclass Main_0Test {",
    "method_signature": "getColorModel()",
    "suffix": "0"
  },
  {
    "numberTests": "ten",
    "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window \u003d new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content \u003d new JPanel(new BorderLayout());\r\n        JDesktopPane desktop \u003d new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel \u003d createHandballModel();\r\n        // Create ColorModel\r\n        colorModel \u003d new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar \u003d createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu \u003d createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field \u003d new Field(handballModel, colorModel);\r\n        JInternalFrame handballField \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse \u003d new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar \u003d new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel \u003d createTablePanel(handballModel);\r\n        JInternalFrame eventView \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView \u003d new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller für CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar \u003d new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Einträge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction \u003d new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction \u003d new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einfügen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction \u003d new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Einträge für Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Einträge für Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel \u003d new TableHandballModel(handballModel);\r\n        JTable table \u003d new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor \u003d new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel \u003d new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar \u003d new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll \u003d new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar \u003d new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url \u003d Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize \u003d component.getSize();\r\n        Dimension screenSize \u003d component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model \u003d new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie�en-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone \u003d null;\r\n        try {\r\n            ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\r\n            ObjectOutputStream oos \u003d new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois \u003d new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone \u003d ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner \u003d \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
    "package": "visu.handball.moves",
    "classname": "Main",
    "id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_3Test.java",
    "test_prompt": "// Main_3Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getWindow()} method.\n*/\nclass Main_3Test {",
    "method_signature": "getWindow()",
    "suffix": "3"
  },
  {
    "numberTests": "ten",
    "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window \u003d new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content \u003d new JPanel(new BorderLayout());\r\n        JDesktopPane desktop \u003d new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel \u003d createHandballModel();\r\n        // Create ColorModel\r\n        colorModel \u003d new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar \u003d createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu \u003d createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field \u003d new Field(handballModel, colorModel);\r\n        JInternalFrame handballField \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse \u003d new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar \u003d new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel \u003d createTablePanel(handballModel);\r\n        JInternalFrame eventView \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView \u003d new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller für CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar \u003d new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Einträge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction \u003d new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction \u003d new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einfügen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction \u003d new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Einträge für Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Einträge für Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel \u003d new TableHandballModel(handballModel);\r\n        JTable table \u003d new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor \u003d new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel \u003d new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar \u003d new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll \u003d new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar \u003d new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url \u003d Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize \u003d component.getSize();\r\n        Dimension screenSize \u003d component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model \u003d new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie�en-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone \u003d null;\r\n        try {\r\n            ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\r\n            ObjectOutputStream oos \u003d new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois \u003d new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone \u003d ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner \u003d \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
    "package": "visu.handball.moves",
    "classname": "Main",
    "id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_4Test.java",
    "test_prompt": "// Main_4Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getField()} method.\n*/\nclass Main_4Test {",
    "method_signature": "getField()",
    "suffix": "4"
  },
  {
    "numberTests": "ten",
    "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window \u003d new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content \u003d new JPanel(new BorderLayout());\r\n        JDesktopPane desktop \u003d new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel \u003d createHandballModel();\r\n        // Create ColorModel\r\n        colorModel \u003d new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar \u003d createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu \u003d createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field \u003d new Field(handballModel, colorModel);\r\n        JInternalFrame handballField \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse \u003d new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar \u003d new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel \u003d createTablePanel(handballModel);\r\n        JInternalFrame eventView \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView \u003d new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller für CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar \u003d new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Einträge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction \u003d new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction \u003d new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einfügen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction \u003d new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Einträge für Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Einträge für Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel \u003d new TableHandballModel(handballModel);\r\n        JTable table \u003d new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor \u003d new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel \u003d new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar \u003d new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll \u003d new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar \u003d new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url \u003d Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize \u003d component.getSize();\r\n        Dimension screenSize \u003d component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model \u003d new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie�en-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone \u003d null;\r\n        try {\r\n            ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\r\n            ObjectOutputStream oos \u003d new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois \u003d new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone \u003d ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner \u003d \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
    "package": "visu.handball.moves",
    "classname": "Main",
    "id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_5Test.java",
    "test_prompt": "// Main_5Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getSaveAction()} method.\n*/\nclass Main_5Test {",
    "method_signature": "getSaveAction()",
    "suffix": "5"
  },
  {
    "numberTests": "ten",
    "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window \u003d new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content \u003d new JPanel(new BorderLayout());\r\n        JDesktopPane desktop \u003d new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel \u003d createHandballModel();\r\n        // Create ColorModel\r\n        colorModel \u003d new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar \u003d createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu \u003d createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field \u003d new Field(handballModel, colorModel);\r\n        JInternalFrame handballField \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse \u003d new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar \u003d new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel \u003d createTablePanel(handballModel);\r\n        JInternalFrame eventView \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView \u003d new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller für CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar \u003d new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Einträge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction \u003d new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction \u003d new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einfügen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction \u003d new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Einträge für Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Einträge für Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel \u003d new TableHandballModel(handballModel);\r\n        JTable table \u003d new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor \u003d new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel \u003d new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar \u003d new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll \u003d new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar \u003d new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url \u003d Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize \u003d component.getSize();\r\n        Dimension screenSize \u003d component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model \u003d new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie�en-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone \u003d null;\r\n        try {\r\n            ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\r\n            ObjectOutputStream oos \u003d new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois \u003d new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone \u003d ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner \u003d \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
    "package": "visu.handball.moves",
    "classname": "Main",
    "id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_7Test.java",
    "test_prompt": "// Main_7Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getCloseAction()} method.\n*/\nclass Main_7Test {",
    "method_signature": "getCloseAction()",
    "suffix": "7"
  },
  {
    "numberTests": "ten",
    "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window \u003d new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content \u003d new JPanel(new BorderLayout());\r\n        JDesktopPane desktop \u003d new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel \u003d createHandballModel();\r\n        // Create ColorModel\r\n        colorModel \u003d new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar \u003d createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu \u003d createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field \u003d new Field(handballModel, colorModel);\r\n        JInternalFrame handballField \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse \u003d new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar \u003d new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel \u003d createTablePanel(handballModel);\r\n        JInternalFrame eventView \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView \u003d new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller für CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar \u003d new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Einträge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction \u003d new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction \u003d new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einfügen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction \u003d new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Einträge für Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Einträge für Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel \u003d new TableHandballModel(handballModel);\r\n        JTable table \u003d new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor \u003d new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel \u003d new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar \u003d new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll \u003d new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar \u003d new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url \u003d Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize \u003d component.getSize();\r\n        Dimension screenSize \u003d component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model \u003d new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie�en-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone \u003d null;\r\n        try {\r\n            ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\r\n            ObjectOutputStream oos \u003d new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois \u003d new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone \u003d ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner \u003d \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
    "package": "visu.handball.moves",
    "classname": "Main",
    "id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_8Test.java",
    "test_prompt": "// Main_8Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#deepCopy(Object)} method.\n*/\nclass Main_8Test {",
    "method_signature": "deepCopy(Object)",
    "suffix": "8"
  },
  {
    "numberTests": "ten",
    "original_code": "// Main.java\n/*\r\n * Created on 31.08.2006\r\n * Created by Richard Doerfler, Thomas Halm\r\n * Copyright (C) 2006  Richard Doerfler, Thomas Halm\r\n *\r\n * This program is free software; you can redistribute it and/or\r\n * modify it under the terms of the GNU General Public License\r\n * as published by the Free Software Foundation; either version 2\r\n * of the License, or (at your option) any later version.\r\n * \r\n * This program is distributed in the hope that it will be useful,\r\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n * GNU General Public License for more details.\r\n * \r\n * You should have received a copy of the GNU General Public License\r\n * along with this program; if not, write to the Free Software\r\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\r\n */\r\npackage visu.handball.moves;\r\n\r\nimport java.awt.BorderLayout;\r\nimport java.awt.Color;\r\nimport java.awt.Component;\r\nimport java.awt.Dimension;\r\nimport java.awt.event.WindowAdapter;\r\nimport java.awt.event.WindowEvent;\r\nimport java.io.ByteArrayInputStream;\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.ObjectInputStream;\r\nimport java.io.ObjectOutputStream;\r\nimport java.net.URL;\r\nimport javax.swing.ImageIcon;\r\nimport javax.swing.JDesktopPane;\r\nimport javax.swing.JFrame;\r\nimport javax.swing.JInternalFrame;\r\nimport javax.swing.JMenu;\r\nimport javax.swing.JMenuBar;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JScrollPane;\r\nimport javax.swing.JTable;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.ListSelectionModel;\r\nimport javax.swing.UIManager;\r\nimport visu.handball.moves.actions.AboutAction;\r\nimport visu.handball.moves.actions.ChangeColorsAction;\r\nimport visu.handball.moves.actions.CloseAction;\r\nimport visu.handball.moves.actions.CreateMovePdfAction;\r\nimport visu.handball.moves.actions.DeleteEventAction;\r\nimport visu.handball.moves.actions.NewAction;\r\nimport visu.handball.moves.actions.NewMoveEventAction;\r\nimport visu.handball.moves.actions.NewPassEventAction;\r\nimport visu.handball.moves.actions.NewSequenceAction;\r\nimport visu.handball.moves.actions.OpenAction;\r\nimport visu.handball.moves.actions.PauseAnimationAction;\r\nimport visu.handball.moves.actions.PrintActualSequenzAction;\r\nimport visu.handball.moves.actions.PrintMoveAction;\r\nimport visu.handball.moves.actions.SaveAction;\r\nimport visu.handball.moves.actions.SetMoveNameAction;\r\nimport visu.handball.moves.actions.StartAnimationAction;\r\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\r\nimport visu.handball.moves.actions.StopAnimationAction;\r\nimport visu.handball.moves.controller.CommentController;\r\nimport visu.handball.moves.controller.JMenuHelper;\r\nimport visu.handball.moves.controller.MouseController;\r\nimport visu.handball.moves.model.ColorModel;\r\nimport visu.handball.moves.model.HandballModel;\r\nimport visu.handball.moves.model.TableHandballModel;\r\nimport visu.handball.moves.model.TableSelectionListener;\r\nimport visu.handball.moves.resources.Resources;\r\nimport visu.handball.moves.views.CommentView;\r\nimport visu.handball.moves.views.EventTableCellDelayEditor;\r\nimport visu.handball.moves.views.EventTableCellRenderer;\r\nimport visu.handball.moves.views.Field;\r\nimport visu.handball.moves.views.PlayerToolBar;\r\nimport visu.handball.moves.views.StatusBar;\r\n\r\n/**\r\n * Hauptklasse zum Starten der Anwendung plus den Zugriff auf die entsprechenden Objekt-Instanzen\r\n * @author tommy\r\n */\r\npublic class Main {\r\n\r\n    private static SaveAction saveAction;\r\n\r\n    private static CloseAction closeAction;\r\n\r\n    private static SetMoveNameAction setNameAction;\r\n\r\n    private static JFrame window;\r\n\r\n    private static Field field;\r\n\r\n    private static CommentView commentView;\r\n\r\n    private static ColorModel colorModel;\r\n\r\n    /**\r\n     * Liefert die Instanz des ColorModels\r\n     *\r\n     * @return colorModel\r\n     */\r\n    public static ColorModel getColorModel() {\r\n        return colorModel;\r\n    }\r\n\r\n    /**\r\n     * Main-Methode zum Starten der Anwendung\r\n     *\r\n     * @param args\r\n     */\r\n    public static void main(String[] args) {\r\n        try {\r\n            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n        } catch (Exception e) {\r\n            System.out.println(//$NON-NLS-1$\r\n            Resources.getString(\"error.lookAndFell\"));\r\n        }\r\n        //$NON-NLS-1$\r\n        window \u003d new JFrame(Resources.getString(\"app.title\"));\r\n        //$NON-NLS-1$ //$NON-NLS-2$\r\n        window.setIconImage(createImageIcon(\"images/icon.gif\", \"\").getImage());\r\n        JPanel content \u003d new JPanel(new BorderLayout());\r\n        JDesktopPane desktop \u003d new JDesktopPane();\r\n        window.setContentPane(content);\r\n        content.add(desktop, BorderLayout.CENTER);\r\n        desktop.setBackground(new Color(255, 255, 174));\r\n        desktop.setDragMode(JDesktopPane.OUTLINE_DRAG_MODE);\r\n        // Create HandballModel\r\n        HandballModel handballModel \u003d createHandballModel();\r\n        // Create ColorModel\r\n        colorModel \u003d new ColorModel();\r\n        // Statusbar\r\n        StatusBar statusBar \u003d createStatusBar(handballModel);\r\n        content.add(statusBar, BorderLayout.SOUTH);\r\n        // Create Menu\r\n        JMenuBar menu \u003d createHandballMenu(handballModel);\r\n        window.setJMenuBar(menu);\r\n        // Create HandballField\r\n        field \u003d new Field(handballModel, colorModel);\r\n        JInternalFrame handballField \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"field.title\"), //$NON-NLS-1$\r\n        false, false, false, true);\r\n        handballField.setLocation(10, 10);\r\n        handballField.add(field);\r\n        handballField.setVisible(true);\r\n        handballField.pack();\r\n        desktop.add(handballField);\r\n        // Create MouseController\r\n        MouseController mouse \u003d new MouseController(handballModel, handballField);\r\n        field.addMouseListener(mouse);\r\n        field.addMouseMotionListener(mouse);\r\n        // Add Statusbar as Listener\r\n        field.addMouseMotionListener(statusBar);\r\n        // Create ToolBar\r\n        PlayerToolBar playerBar \u003d new PlayerToolBar(handballModel);\r\n        content.add(playerBar, BorderLayout.NORTH);\r\n        // Create EventView\r\n        JPanel tablePanel \u003d createTablePanel(handballModel);\r\n        JInternalFrame eventView \u003d new //$NON-NLS-1$\r\n        JInternalFrame(//$NON-NLS-1$\r\n        Resources.getString(\"events.title\"), //$NON-NLS-1$\r\n        true, false, false, true);\r\n        eventView.add(tablePanel);\r\n        eventView.setLocation(20 + handballField.getWidth(), 10);\r\n        eventView.setVisible(true);\r\n        eventView.setSize(450, 400);\r\n        desktop.add(eventView);\r\n        // Create CommentView\r\n        //$NON-NLS-1$\r\n        commentView \u003d new CommentView(Resources.getString(\"comment.title\"));\r\n        commentView.setLocation(20 + handballField.getWidth(), 420);\r\n        commentView.setSize(450, handballField.getHeight() - eventView.getHeight() - 10);\r\n        commentView.setVisible(true);\r\n        //Controller für CommentView erzeugen\r\n        new CommentController(handballModel, commentView);\r\n        desktop.add(commentView);\r\n        window.setSize(1000, 700);\r\n        locateOnScreenCenter(window);\r\n        window.addWindowListener(new WindowAdapter() {\r\n\r\n            public void windowClosing(WindowEvent e) {\r\n                Main.getCloseAction().actionPerformed(null);\r\n            }\r\n        });\r\n        window.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);\r\n        window.setVisible(true);\r\n    }\r\n\r\n    private static JMenuBar createHandballMenu(HandballModel handballModel) {\r\n        JMenuBar mbar;\r\n        JMenu menuDatei, menuHilfe, menuEinstellungen;\r\n        // Hauptmenue einrichten\r\n        mbar \u003d new JMenuBar();\r\n        //$NON-NLS-1$\r\n        menuDatei \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.file\"));\r\n        //$NON-NLS-1$\r\n        menuEinstellungen \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.settings\"));\r\n        //$NON-NLS-1$\r\n        menuHilfe \u003d JMenuHelper.addMenuBarItem(mbar, Resources.getString(\"menu.about\"));\r\n        // Einträge fuer Datei\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        NewAction(handballModel));\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        OpenAction(handballModel));\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        saveAction \u003d new SaveAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", saveAction);\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        setNameAction \u003d new SetMoveNameAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", setNameAction);\r\n        //Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        //Drucken einfügen\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new //$NON-NLS-1$\r\n        PrintActualSequenzAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new PrintMoveAction(handballModel));\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", new CreateMovePdfAction(handballModel));\r\n        // Separator einfügen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"-\");\r\n        closeAction \u003d new CloseAction(handballModel);\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuDatei, \"\", closeAction);\r\n        // Einträge für Einstellungen\r\n        //$NON-NLS-1$\r\n        JMenuHelper.addMenuItem(menuEinstellungen, \"\", new ChangeColorsAction());\r\n        // Einträge für Hilfe\r\n        //$NON-NLS-1$\r\n        JMenuHelper.//$NON-NLS-1$\r\n        addMenuItem(//$NON-NLS-1$\r\n        menuHilfe, //$NON-NLS-1$\r\n        \"\", new AboutAction());\r\n        return mbar;\r\n    }\r\n\r\n    private static JPanel createTablePanel(HandballModel handballModel) {\r\n        TableHandballModel tableModel \u003d new TableHandballModel(handballModel);\r\n        JTable table \u003d new JTable(tableModel);\r\n        table.setDefaultRenderer(Object.class, new EventTableCellRenderer());\r\n        table.getColumnModel().getColumn(0).setPreferredWidth(100);\r\n        table.getColumnModel().getColumn(1).setPreferredWidth(200);\r\n        EventTableCellDelayEditor delayEditor \u003d new EventTableCellDelayEditor();\r\n        table.getColumnModel().getColumn(3).setCellEditor(delayEditor);\r\n        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\r\n        table.getSelectionModel().addListSelectionListener(new TableSelectionListener(tableModel));\r\n        JPanel panel \u003d new JPanel(new BorderLayout());\r\n        //$NON-NLS-1$\r\n        JToolBar toolBar \u003d new JToolBar(Resources.getString(\"toolbar.title\"));\r\n        toolBar.add(new NewMoveEventAction(handballModel));\r\n        toolBar.add(new NewSequenceAction(handballModel));\r\n        toolBar.add(new NewPassEventAction(handballModel));\r\n        toolBar.add(new DeleteEventAction(handballModel));\r\n        toolBar.addSeparator();\r\n        toolBar.add(new StartOneSequenceAnimationAction(handballModel));\r\n        toolBar.add(new StartAnimationAction(handballModel));\r\n        toolBar.add(new PauseAnimationAction(handballModel));\r\n        toolBar.add(new StopAnimationAction(handballModel));\r\n        JScrollPane scroll \u003d new JScrollPane(table);\r\n        panel.add(scroll, BorderLayout.CENTER);\r\n        panel.add(toolBar, BorderLayout.PAGE_START);\r\n        return panel;\r\n    }\r\n\r\n    private static StatusBar createStatusBar(HandballModel model) {\r\n        StatusBar statusBar \u003d new StatusBar(model);\r\n        return statusBar;\r\n    }\r\n\r\n    /**\r\n     * Basierend auf der relativen Pfad (relativ zum Ort dieser Klasse) und der Beschreibung\r\n     * wird ein Grafik geladen und ein ImageIcon-Objekt erstellt.\r\n     * @param path\r\n     * @param description\r\n     *\r\n     * @return imageIcon\r\n     */\r\n    public static ImageIcon createImageIcon(String path, String description) {\r\n        URL url \u003d Main.class.getResource(path);\r\n        return new ImageIcon(url, description);\r\n    }\r\n\r\n    /**\r\n     * Erzeugt auf Basis eines relativen Pfads (relativ zum Ort dieser Klasse) eine URL.\r\n     * @param path\r\n     *\r\n     * @return url\r\n     */\r\n    public static URL getResource(String path) {\r\n        return Main.class.getResource(path);\r\n    }\r\n\r\n    /**\r\n     * Methode um Component-Objekte (z.B. Fenster) in der Mitte des Bildschirms zu positionieren\r\n     * @param component\r\n     */\r\n    public static void locateOnScreenCenter(Component component) {\r\n        Dimension paneSize \u003d component.getSize();\r\n        Dimension screenSize \u003d component.getToolkit().getScreenSize();\r\n        component.setLocation((screenSize.width - paneSize.width) / 2, (screenSize.height - paneSize.height) / 2);\r\n    }\r\n\r\n    private static HandballModel createHandballModel() {\r\n        HandballModel model \u003d new HandballModel();\r\n        return model;\r\n    }\r\n\r\n    /**\r\n     * Die Instanz des Anwendungsfensters\r\n     *\r\n     * @return window\r\n     */\r\n    public static JFrame getWindow() {\r\n        return window;\r\n    }\r\n\r\n    /**\r\n     * Instanz des Spielfeld-Panels\r\n     *\r\n     * @return panel\r\n     */\r\n    public static Field getField() {\r\n        return field;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Speichern-Aktion\r\n     *\r\n     * @return saveAction\r\n     */\r\n    public static SaveAction getSaveAction() {\r\n        return saveAction;\r\n    }\r\n\r\n    public static SetMoveNameAction getSetNameAction() {\r\n        return setNameAction;\r\n    }\r\n\r\n    /**\r\n     * Instanz der Schlie�en-Aktion\r\n     *\r\n     * @return close Action\r\n     */\r\n    public static CloseAction getCloseAction() {\r\n        return closeAction;\r\n    }\r\n\r\n    /**\r\n     * Methode um eine tiefe Objektkopie per Serialisierung zu erzeugen!\r\n     *\r\n     * @param oldObj (muss Serializable implementieren)\r\n     * @return tiefe Kopie\r\n     * @throws Exception\r\n     */\r\n    public static Object deepCopy(Object oldObj) throws Exception {\r\n        Object clone \u003d null;\r\n        try {\r\n            ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();\r\n            ObjectOutputStream oos \u003d new ObjectOutputStream(baos);\r\n            oos.writeObject(oldObj);\r\n            oos.flush();\r\n            ObjectInputStream ois \u003d new ObjectInputStream(new ByteArrayInputStream(baos.toByteArray()));\r\n            clone \u003d ois.readObject();\r\n            oos.close();\r\n            ois.close();\r\n        } catch (Exception e) {\r\n            //$NON-NLS-1$\r\n            System.out.println(\"Exception in ObjectCloner \u003d \" + e);\r\n            throw (e);\r\n        }\r\n        return clone;\r\n    }\r\n\r\n    /**\r\n     * Liefert die Version der Anwendung als String\r\n     *\r\n     * @return version\r\n     */\r\n    public static String getVersion() {\r\n        //$NON-NLS-1$\r\n        return \"1.0.5\";\r\n    }\r\n}\r\n",
    "package": "visu.handball.moves",
    "classname": "Main",
    "id": "/EvoSuiteBenchmark/original/56_jhandballmoves/src/main/java/visu/handball/moves/Main_9Test.java",
    "test_prompt": "// Main_9Test.java\npackage visu.handball.moves;\n\nimport java.awt.BorderLayout;\nimport java.awt.Color;\nimport java.awt.Component;\nimport java.awt.Dimension;\nimport java.awt.event.WindowAdapter;\nimport java.awt.event.WindowEvent;\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.ObjectInputStream;\nimport java.io.ObjectOutputStream;\nimport java.net.URL;\nimport javax.swing.ImageIcon;\nimport javax.swing.JDesktopPane;\nimport javax.swing.JFrame;\nimport javax.swing.JInternalFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTable;\nimport javax.swing.JToolBar;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.UIManager;\nimport visu.handball.moves.actions.AboutAction;\nimport visu.handball.moves.actions.ChangeColorsAction;\nimport visu.handball.moves.actions.CloseAction;\nimport visu.handball.moves.actions.CreateMovePdfAction;\nimport visu.handball.moves.actions.DeleteEventAction;\nimport visu.handball.moves.actions.NewAction;\nimport visu.handball.moves.actions.NewMoveEventAction;\nimport visu.handball.moves.actions.NewPassEventAction;\nimport visu.handball.moves.actions.NewSequenceAction;\nimport visu.handball.moves.actions.OpenAction;\nimport visu.handball.moves.actions.PauseAnimationAction;\nimport visu.handball.moves.actions.PrintActualSequenzAction;\nimport visu.handball.moves.actions.PrintMoveAction;\nimport visu.handball.moves.actions.SaveAction;\nimport visu.handball.moves.actions.SetMoveNameAction;\nimport visu.handball.moves.actions.StartAnimationAction;\nimport visu.handball.moves.actions.StartOneSequenceAnimationAction;\nimport visu.handball.moves.actions.StopAnimationAction;\nimport visu.handball.moves.controller.CommentController;\nimport visu.handball.moves.controller.JMenuHelper;\nimport visu.handball.moves.controller.MouseController;\nimport visu.handball.moves.model.ColorModel;\nimport visu.handball.moves.model.HandballModel;\nimport visu.handball.moves.model.TableHandballModel;\nimport visu.handball.moves.model.TableSelectionListener;\nimport visu.handball.moves.resources.Resources;\nimport visu.handball.moves.views.CommentView;\nimport visu.handball.moves.views.EventTableCellDelayEditor;\nimport visu.handball.moves.views.EventTableCellRenderer;\nimport visu.handball.moves.views.Field;\nimport visu.handball.moves.views.PlayerToolBar;\nimport visu.handball.moves.views.StatusBar;\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Main}.\n* It contains ten unit test cases for the {@link Main#getVersion()} method.\n*/\nclass Main_9Test {",
    "method_signature": "getVersion()",
    "suffix": "9"
  }
]