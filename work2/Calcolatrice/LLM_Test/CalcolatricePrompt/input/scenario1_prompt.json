[
  {
    "numberTests": "ten",
    "original_code": "// Calcolatrice.java\npublic class Calcolatrice {\r\n\r\n    public int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n\r\n    public int subtract(int a, int b) {\r\n        return a - b;\r\n    }\r\n\r\n    public int multiply(int a, int b) {\r\n        return a * b;\r\n    }\r\n\r\n    public double divide(double a, double b) {\r\n        if (b \u003d\u003d 0) {\r\n            throw new IllegalArgumentException(\"Division by zero is not allowed\");\r\n        }\r\n        return a / b;\r\n    }\r\n\r\n    public int factorial(int n) {\r\n        if (n \u003c 0) {\r\n            throw new IllegalArgumentException(\"Factorial is not defined for negative numbers\");\r\n        }\r\n        if (n \u003d\u003d 0 || n \u003d\u003d 1) {\r\n            return 1;\r\n        }\r\n        int result \u003d 1;\r\n        for (int i \u003d 2; i \u003c\u003d n; i++) {\r\n            result *\u003d i;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n",
    "package": "",
    "classname": "Calcolatrice",
    "id": "\\CalcolatriceSourceCode\\scenario1\\Calcolatrice_0Test.java",
    "test_prompt": "// Calcolatrice_0Test.java\n\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Calcolatrice}.\n* It contains ten unit test cases for the {@link Calcolatrice#add(int, int)} method.\n*/\nclass Calcolatrice_0Test {",
    "method_signature": "add(int, int)",
    "suffix": "0"
  },
  {
    "numberTests": "ten",
    "original_code": "// Calcolatrice.java\npublic class Calcolatrice {\r\n\r\n    public int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n\r\n    public int subtract(int a, int b) {\r\n        return a - b;\r\n    }\r\n\r\n    public int multiply(int a, int b) {\r\n        return a * b;\r\n    }\r\n\r\n    public double divide(double a, double b) {\r\n        if (b \u003d\u003d 0) {\r\n            throw new IllegalArgumentException(\"Division by zero is not allowed\");\r\n        }\r\n        return a / b;\r\n    }\r\n\r\n    public int factorial(int n) {\r\n        if (n \u003c 0) {\r\n            throw new IllegalArgumentException(\"Factorial is not defined for negative numbers\");\r\n        }\r\n        if (n \u003d\u003d 0 || n \u003d\u003d 1) {\r\n            return 1;\r\n        }\r\n        int result \u003d 1;\r\n        for (int i \u003d 2; i \u003c\u003d n; i++) {\r\n            result *\u003d i;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n",
    "package": "",
    "classname": "Calcolatrice",
    "id": "\\CalcolatriceSourceCode\\scenario1\\Calcolatrice_1Test.java",
    "test_prompt": "// Calcolatrice_1Test.java\n\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Calcolatrice}.\n* It contains ten unit test cases for the {@link Calcolatrice#subtract(int, int)} method.\n*/\nclass Calcolatrice_1Test {",
    "method_signature": "subtract(int, int)",
    "suffix": "1"
  },
  {
    "numberTests": "ten",
    "original_code": "// Calcolatrice.java\npublic class Calcolatrice {\r\n\r\n    public int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n\r\n    public int subtract(int a, int b) {\r\n        return a - b;\r\n    }\r\n\r\n    public int multiply(int a, int b) {\r\n        return a * b;\r\n    }\r\n\r\n    public double divide(double a, double b) {\r\n        if (b \u003d\u003d 0) {\r\n            throw new IllegalArgumentException(\"Division by zero is not allowed\");\r\n        }\r\n        return a / b;\r\n    }\r\n\r\n    public int factorial(int n) {\r\n        if (n \u003c 0) {\r\n            throw new IllegalArgumentException(\"Factorial is not defined for negative numbers\");\r\n        }\r\n        if (n \u003d\u003d 0 || n \u003d\u003d 1) {\r\n            return 1;\r\n        }\r\n        int result \u003d 1;\r\n        for (int i \u003d 2; i \u003c\u003d n; i++) {\r\n            result *\u003d i;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n",
    "package": "",
    "classname": "Calcolatrice",
    "id": "\\CalcolatriceSourceCode\\scenario1\\Calcolatrice_2Test.java",
    "test_prompt": "// Calcolatrice_2Test.java\n\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Calcolatrice}.\n* It contains ten unit test cases for the {@link Calcolatrice#multiply(int, int)} method.\n*/\nclass Calcolatrice_2Test {",
    "method_signature": "multiply(int, int)",
    "suffix": "2"
  },
  {
    "numberTests": "ten",
    "original_code": "// Calcolatrice.java\npublic class Calcolatrice {\r\n\r\n    public int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n\r\n    public int subtract(int a, int b) {\r\n        return a - b;\r\n    }\r\n\r\n    public int multiply(int a, int b) {\r\n        return a * b;\r\n    }\r\n\r\n    public double divide(double a, double b) {\r\n        if (b \u003d\u003d 0) {\r\n            throw new IllegalArgumentException(\"Division by zero is not allowed\");\r\n        }\r\n        return a / b;\r\n    }\r\n\r\n    public int factorial(int n) {\r\n        if (n \u003c 0) {\r\n            throw new IllegalArgumentException(\"Factorial is not defined for negative numbers\");\r\n        }\r\n        if (n \u003d\u003d 0 || n \u003d\u003d 1) {\r\n            return 1;\r\n        }\r\n        int result \u003d 1;\r\n        for (int i \u003d 2; i \u003c\u003d n; i++) {\r\n            result *\u003d i;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n",
    "package": "",
    "classname": "Calcolatrice",
    "id": "\\CalcolatriceSourceCode\\scenario1\\Calcolatrice_3Test.java",
    "test_prompt": "// Calcolatrice_3Test.java\n\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Calcolatrice}.\n* It contains ten unit test cases for the {@link Calcolatrice#divide(double, double)} method.\n*/\nclass Calcolatrice_3Test {",
    "method_signature": "divide(double, double)",
    "suffix": "3"
  },
  {
    "numberTests": "ten",
    "original_code": "// Calcolatrice.java\npublic class Calcolatrice {\r\n\r\n    public int add(int a, int b) {\r\n        return a + b;\r\n    }\r\n\r\n    public int subtract(int a, int b) {\r\n        return a - b;\r\n    }\r\n\r\n    public int multiply(int a, int b) {\r\n        return a * b;\r\n    }\r\n\r\n    public double divide(double a, double b) {\r\n        if (b \u003d\u003d 0) {\r\n            throw new IllegalArgumentException(\"Division by zero is not allowed\");\r\n        }\r\n        return a / b;\r\n    }\r\n\r\n    public int factorial(int n) {\r\n        if (n \u003c 0) {\r\n            throw new IllegalArgumentException(\"Factorial is not defined for negative numbers\");\r\n        }\r\n        if (n \u003d\u003d 0 || n \u003d\u003d 1) {\r\n            return 1;\r\n        }\r\n        int result \u003d 1;\r\n        for (int i \u003d 2; i \u003c\u003d n; i++) {\r\n            result *\u003d i;\r\n        }\r\n        return result;\r\n    }\r\n}\r\n",
    "package": "",
    "classname": "Calcolatrice",
    "id": "\\CalcolatriceSourceCode\\scenario1\\Calcolatrice_4Test.java",
    "test_prompt": "// Calcolatrice_4Test.java\n\n\n\nimport org.junit.jupiter.api.Test;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n* Test class of {@link Calcolatrice}.\n* It contains ten unit test cases for the {@link Calcolatrice#factorial(int)} method.\n*/\nclass Calcolatrice_4Test {",
    "method_signature": "factorial(int)",
    "suffix": "4"
  }
]